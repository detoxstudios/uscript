//uScript Generated Code - Build 0.9.2439
//Generated with Debug Info
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

[NodePath("Graphs")]
[System.Serializable]
[FriendlyName("", "")]
public class CodeGenTest : uScriptLogic
{

   #pragma warning disable 414
   GameObject parentGameObject = null;
   uScript_GUI thisScriptsOnGuiListener = null; 
   bool m_RegisteredForEvents = false;
   delegate void ContinueExecution();
   ContinueExecution m_ContinueExecution;
   bool m_Breakpoint = false;
   const int MaxRelayCallCount = 1000;
   int relayCallCount = 0;
   
   //externally exposed events
   
   //external parameters
   
   //local nodes
   System.String[] local_105_System_StringArray = new System.String[] {};
   UnityEngine.Color local_107_UnityEngine_Color = new UnityEngine.Color( (float)0.9328358, (float)0.06961461, (float)0.9207627, (float)1 );
   System.Boolean local_154_System_Boolean = (bool) false;
   System.String local_156_System_String = "";
   System.String local_158_System_String = "";
   UnityEngine.GameObject local_160_UnityEngine_GameObject = null;
   UnityEngine.GameObject local_160_UnityEngine_GameObject_previous = null;
   System.Single local_161_System_Single = (float) 1E+08;
   UnityEngine.Flare local_181_UnityEngine_Flare = null;
   UnityEngine.Mesh local_182_UnityEngine_Mesh = null;
   UnityEngine.Font local_183_UnityEngine_Font = null;
   UnityEngine.Cubemap local_184_UnityEngine_Cubemap = null;
   UnityEngine.GUISkin local_185_UnityEngine_GUISkin = null;
   UnityEngine.PhysicMaterial local_188_UnityEngine_PhysicMaterial = null;
   UnityEngine.GameObject local_189_UnityEngine_GameObject = null;
   UnityEngine.GameObject local_189_UnityEngine_GameObject_previous = null;
   System.String local_19_System_String = "";
   UnityEngine.TextAsset local_190_UnityEngine_TextAsset = null;
   UnityEngine.Shader local_191_UnityEngine_Shader = null;
   System.String local_222_System_String = "";
   System.String local_223_System_String = "";
   UnityEngine.KeyCode local_263_UnityEngine_KeyCode = UnityEngine.KeyCode.Plus;
   System.String local_272_System_String = "";
   UnityEngine.KeyCode local_275_UnityEngine_KeyCode = UnityEngine.KeyCode.RightBracket;
   System.Boolean local_287_System_Boolean = (bool) false;
   UnityEngine.Color local_294_UnityEngine_Color = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   UnityEngine.Color local_296_UnityEngine_Color = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   System.Int32 local_3_System_Int32 = (int) 0;
   System.String local_3_System_String = "Prefix";
   System.Object local_301_System_Object = "";
   System.Single local_302_System_Single = (float) 0;
   UnityEngine.GameObject local_303_UnityEngine_GameObject = null;
   UnityEngine.GameObject local_303_UnityEngine_GameObject_previous = null;
   System.Int32 local_307_System_Int32 = (int) 0;
   UnityEngine.Quaternion local_309_UnityEngine_Quaternion = new Quaternion( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Rect local_315_UnityEngine_Rect = new Rect( );
   System.Int32 local_325_System_Int32 = (int) 3;
   UnityEngine.Texture2D local_331_UnityEngine_Texture2D = null;
   UnityEngine.Vector3 local_336_UnityEngine_Vector3 = new Vector3( );
   UnityEngine.Vector4 local_344_UnityEngine_Vector4 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.KeyCode local_345_UnityEngine_KeyCode = UnityEngine.KeyCode.G;
   UnityEngine.Material local_349_UnityEngine_Material = null;
   UnityEngine.Quaternion local_369_UnityEngine_Quaternion = new Quaternion( );
   UnityEngine.GameObject local_392_UnityEngine_GameObject = null;
   UnityEngine.GameObject local_392_UnityEngine_GameObject_previous = null;
   UnityEngine.KeyCode local_394_UnityEngine_KeyCode = UnityEngine.KeyCode.I;
   System.String local_4_System_String = "Postfix";
   UnityEngine.KeyCode local_408_UnityEngine_KeyCode = UnityEngine.KeyCode.M;
   UnityEngine.AudioClip[] local_467_UnityEngine_AudioClipArray = new UnityEngine.AudioClip[ 0 ];
   UnityEngine.AudioClip local_470_UnityEngine_AudioClip = null;
   UnityEngine.AudioClip[] local_474_UnityEngine_AudioClipArray = new UnityEngine.AudioClip[ 0 ];
   UnityEngine.AudioClip local_475_UnityEngine_AudioClip = null;
   UnityEngine.AudioClip local_476_UnityEngine_AudioClip = null;
   UnityEngine.AudioClip[] local_477_UnityEngine_AudioClipArray = new UnityEngine.AudioClip[ 0 ];
   System.String local_482_System_String = "ABCD";
   System.String local_483_System_String = "";
   UnityEngine.GameObject local_485_UnityEngine_GameObject = null;
   UnityEngine.GameObject local_485_UnityEngine_GameObject_previous = null;
   UnityEngine.Camera[] local_Camera_List_UnityEngine_CameraArray = new UnityEngine.Camera[] {};
   UnityEngine.GameObject local_MasterGO_UnityEngine_GameObject = null;
   UnityEngine.GameObject local_MasterGO_UnityEngine_GameObject_previous = null;
   System.String local_MyEvent_System_String = "Event";
   System.String local_Named_Variable_System_String = "";
   
   //owner nodes
   UnityEngine.GameObject owner_Connection_460 = null;
   
   //logic nodes
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_2 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_2 = "";
   System.Object[] logic_uScriptAct_Log_Target_2 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_2 = "";
   bool logic_uScriptAct_Log_Out_2 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_6 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_6 = "";
   System.Object[] logic_uScriptAct_Log_Target_6 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_6 = "";
   bool logic_uScriptAct_Log_Out_6 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_20 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_20 = "";
   System.Object[] logic_uScriptAct_Log_Target_20 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_20 = "";
   bool logic_uScriptAct_Log_Out_20 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_24 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_24 = "";
   System.Object[] logic_uScriptAct_Log_Target_24 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_24 = "";
   bool logic_uScriptAct_Log_Out_24 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_25 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_25 = "";
   System.Object[] logic_uScriptAct_Log_Target_25 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_25 = "";
   bool logic_uScriptAct_Log_Out_25 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_27 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_27 = "";
   System.Object[] logic_uScriptAct_Log_Target_27 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_27 = "";
   bool logic_uScriptAct_Log_Out_27 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_30 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_30 = "";
   System.Object[] logic_uScriptAct_Log_Target_30 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_30 = "";
   bool logic_uScriptAct_Log_Out_30 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_31 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_31 = "";
   System.Object[] logic_uScriptAct_Log_Target_31 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_31 = "";
   bool logic_uScriptAct_Log_Out_31 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_41 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_41 = "";
   System.Object[] logic_uScriptAct_Log_Target_41 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_41 = "";
   bool logic_uScriptAct_Log_Out_41 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_42 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_42 = "";
   System.Object[] logic_uScriptAct_Log_Target_42 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_42 = "";
   bool logic_uScriptAct_Log_Out_42 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_43 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_43 = "";
   System.Object[] logic_uScriptAct_Log_Target_43 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_43 = "";
   bool logic_uScriptAct_Log_Out_43 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_44 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_44 = "";
   System.Object[] logic_uScriptAct_Log_Target_44 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_44 = "";
   bool logic_uScriptAct_Log_Out_44 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_45 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_45 = "";
   System.Object[] logic_uScriptAct_Log_Target_45 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_45 = "";
   bool logic_uScriptAct_Log_Out_45 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_46 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_46 = "";
   System.Object[] logic_uScriptAct_Log_Target_46 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_46 = "";
   bool logic_uScriptAct_Log_Out_46 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_47 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_47 = "";
   System.Object[] logic_uScriptAct_Log_Target_47 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_47 = "";
   bool logic_uScriptAct_Log_Out_47 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_61 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_61 = "";
   System.Object[] logic_uScriptAct_Log_Target_61 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_61 = "";
   bool logic_uScriptAct_Log_Out_61 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_62 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_62 = "";
   System.Object[] logic_uScriptAct_Log_Target_62 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_62 = "";
   bool logic_uScriptAct_Log_Out_62 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_63 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_63 = "";
   System.Object[] logic_uScriptAct_Log_Target_63 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_63 = "";
   bool logic_uScriptAct_Log_Out_63 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_64 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_64 = "";
   System.Object[] logic_uScriptAct_Log_Target_64 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_64 = "";
   bool logic_uScriptAct_Log_Out_64 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_65 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_65 = "";
   System.Object[] logic_uScriptAct_Log_Target_65 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_65 = "";
   bool logic_uScriptAct_Log_Out_65 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_70 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_70 = "";
   System.Object[] logic_uScriptAct_Log_Target_70 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_70 = "";
   bool logic_uScriptAct_Log_Out_70 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_71 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_71 = "";
   System.Object[] logic_uScriptAct_Log_Target_71 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_71 = "";
   bool logic_uScriptAct_Log_Out_71 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_72 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_72 = "";
   System.Object[] logic_uScriptAct_Log_Target_72 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_72 = "";
   bool logic_uScriptAct_Log_Out_72 = true;
   //pointer to script instanced logic node
   uScriptCon_CheckDistance logic_uScriptCon_CheckDistance_uScriptCon_CheckDistance_74 = new uScriptCon_CheckDistance( );
   UnityEngine.GameObject logic_uScriptCon_CheckDistance_A_74 = null;
   UnityEngine.GameObject logic_uScriptCon_CheckDistance_B_74 = null;
   System.Single logic_uScriptCon_CheckDistance_Distance_74 = (float) 0;
   bool logic_uScriptCon_CheckDistance_Closer_74 = true;
   bool logic_uScriptCon_CheckDistance_Further_74 = true;
   bool logic_uScriptCon_CheckDistance_Equal_74 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareBool logic_uScriptCon_CompareBool_uScriptCon_CompareBool_76 = new uScriptCon_CompareBool( );
   System.Boolean logic_uScriptCon_CompareBool_Bool_76 = (bool) false;
   bool logic_uScriptCon_CompareBool_True_76 = true;
   bool logic_uScriptCon_CompareBool_False_76 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_77 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_77 = "";
   System.Object[] logic_uScriptAct_Log_Target_77 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_77 = "";
   bool logic_uScriptAct_Log_Out_77 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareBoolEquality logic_uScriptCon_CompareBoolEquality_uScriptCon_CompareBoolEquality_78 = new uScriptCon_CompareBoolEquality( );
   System.Boolean logic_uScriptCon_CompareBoolEquality_A_78 = (bool) false;
   System.Boolean logic_uScriptCon_CompareBoolEquality_B_78 = (bool) false;
   bool logic_uScriptCon_CompareBoolEquality_EqualTo_78 = true;
   bool logic_uScriptCon_CompareBoolEquality_NotEqualTo_78 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareFloat logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79 = new uScriptCon_CompareFloat( );
   System.Single logic_uScriptCon_CompareFloat_A_79 = (float) 0;
   System.Single logic_uScriptCon_CompareFloat_B_79 = (float) 0;
   bool logic_uScriptCon_CompareFloat_GreaterThan_79 = true;
   bool logic_uScriptCon_CompareFloat_GreaterThanOrEqualTo_79 = true;
   bool logic_uScriptCon_CompareFloat_EqualTo_79 = true;
   bool logic_uScriptCon_CompareFloat_NotEqualTo_79 = true;
   bool logic_uScriptCon_CompareFloat_LessThanOrEqualTo_79 = true;
   bool logic_uScriptCon_CompareFloat_LessThan_79 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareGameObjects logic_uScriptCon_CompareGameObjects_uScriptCon_CompareGameObjects_80 = new uScriptCon_CompareGameObjects( );
   UnityEngine.GameObject logic_uScriptCon_CompareGameObjects_A_80 = null;
   UnityEngine.GameObject logic_uScriptCon_CompareGameObjects_B_80 = null;
   System.Boolean logic_uScriptCon_CompareGameObjects_CompareByTag_80 = (bool) false;
   System.Boolean logic_uScriptCon_CompareGameObjects_CompareByName_80 = (bool) false;
   System.Boolean logic_uScriptCon_CompareGameObjects_ReportNull_80 = (bool) true;
   bool logic_uScriptCon_CompareGameObjects_Same_80 = true;
   bool logic_uScriptCon_CompareGameObjects_Different_80 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareInt logic_uScriptCon_CompareInt_uScriptCon_CompareInt_81 = new uScriptCon_CompareInt( );
   System.Int32 logic_uScriptCon_CompareInt_A_81 = (int) 0;
   System.Int32 logic_uScriptCon_CompareInt_B_81 = (int) 0;
   bool logic_uScriptCon_CompareInt_GreaterThan_81 = true;
   bool logic_uScriptCon_CompareInt_GreaterThanOrEqualTo_81 = true;
   bool logic_uScriptCon_CompareInt_EqualTo_81 = true;
   bool logic_uScriptCon_CompareInt_NotEqualTo_81 = true;
   bool logic_uScriptCon_CompareInt_LessThanOrEqualTo_81 = true;
   bool logic_uScriptCon_CompareInt_LessThan_81 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareString logic_uScriptCon_CompareString_uScriptCon_CompareString_82 = new uScriptCon_CompareString( );
   System.String logic_uScriptCon_CompareString_A_82 = "";
   System.String logic_uScriptCon_CompareString_B_82 = "";
   bool logic_uScriptCon_CompareString_Same_82 = true;
   bool logic_uScriptCon_CompareString_Different_82 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareVector2 logic_uScriptCon_CompareVector2_uScriptCon_CompareVector2_83 = new uScriptCon_CompareVector2( );
   UnityEngine.Vector2 logic_uScriptCon_CompareVector2_A_83 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptCon_CompareVector2_B_83 = new Vector2( (float)0, (float)0 );
   bool logic_uScriptCon_CompareVector2_Same_83 = true;
   bool logic_uScriptCon_CompareVector2_Different_83 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareVector3 logic_uScriptCon_CompareVector3_uScriptCon_CompareVector3_84 = new uScriptCon_CompareVector3( );
   UnityEngine.Vector3 logic_uScriptCon_CompareVector3_A_84 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptCon_CompareVector3_B_84 = new Vector3( (float)0, (float)0, (float)0 );
   bool logic_uScriptCon_CompareVector3_Same_84 = true;
   bool logic_uScriptCon_CompareVector3_Different_84 = true;
   //pointer to script instanced logic node
   uScriptCon_CompareVector4 logic_uScriptCon_CompareVector4_uScriptCon_CompareVector4_85 = new uScriptCon_CompareVector4( );
   UnityEngine.Vector4 logic_uScriptCon_CompareVector4_A_85 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Vector4 logic_uScriptCon_CompareVector4_B_85 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   bool logic_uScriptCon_CompareVector4_Same_85 = true;
   bool logic_uScriptCon_CompareVector4_Different_85 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_86 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_86 = "";
   System.Object[] logic_uScriptAct_Log_Target_86 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_86 = "";
   bool logic_uScriptAct_Log_Out_86 = true;
   //pointer to script instanced logic node
   uScriptCon_GameObjectHasTag logic_uScriptCon_GameObjectHasTag_uScriptCon_GameObjectHasTag_87 = new uScriptCon_GameObjectHasTag( );
   UnityEngine.GameObject logic_uScriptCon_GameObjectHasTag_GameObject_87 = null;
   System.String[] logic_uScriptCon_GameObjectHasTag_Tag_87 = new System.String[] {};
   bool logic_uScriptCon_GameObjectHasTag_HasAllTags_87 = true;
   bool logic_uScriptCon_GameObjectHasTag_HasTag_87 = true;
   bool logic_uScriptCon_GameObjectHasTag_MissingTags_87 = true;
   //pointer to script instanced logic node
   uScriptCon_IsPlatform logic_uScriptCon_IsPlatform_uScriptCon_IsPlatform_88 = new uScriptCon_IsPlatform( );
   UnityEngine.RuntimePlatform[] logic_uScriptCon_IsPlatform_ValidPlatforms_88 = new UnityEngine.RuntimePlatform[] {};
   bool logic_uScriptCon_IsPlatform_IsPlatform_88 = true;
   bool logic_uScriptCon_IsPlatform_IsNotPlatform_88 = true;
   //pointer to script instanced logic node
   uScriptCon_IsPowerOfTwo logic_uScriptCon_IsPowerOfTwo_uScriptCon_IsPowerOfTwo_89 = new uScriptCon_IsPowerOfTwo( );
   System.Int32 logic_uScriptCon_IsPowerOfTwo_Target_89 = (int) 0;
   bool logic_uScriptCon_IsPowerOfTwo_True_89 = true;
   bool logic_uScriptCon_IsPowerOfTwo_False_89 = true;
   //pointer to script instanced logic node
   uScriptCon_StringContains logic_uScriptCon_StringContains_uScriptCon_StringContains_90 = new uScriptCon_StringContains( );
   System.String logic_uScriptCon_StringContains_Target_90 = "";
   System.String logic_uScriptCon_StringContains_Value_90 = "";
   bool logic_uScriptCon_StringContains_True_90 = true;
   bool logic_uScriptCon_StringContains_False_90 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_91 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_91 = "";
   System.Object[] logic_uScriptAct_Log_Target_91 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_91 = "";
   bool logic_uScriptAct_Log_Out_91 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_92 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_92 = "";
   System.Object[] logic_uScriptAct_Log_Target_92 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_92 = "";
   bool logic_uScriptAct_Log_Out_92 = true;
   //pointer to script instanced logic node
   uScriptCon_FloatCounter logic_uScriptCon_FloatCounter_uScriptCon_FloatCounter_93 = new uScriptCon_FloatCounter( );
   System.Single logic_uScriptCon_FloatCounter_A_93 = (float) 0;
   System.Single logic_uScriptCon_FloatCounter_B_93 = (float) 0;
   System.Single logic_uScriptCon_FloatCounter_currentValue_93;
   bool logic_uScriptCon_FloatCounter_GreaterThan_93 = true;
   bool logic_uScriptCon_FloatCounter_GreaterThanOrEqualTo_93 = true;
   bool logic_uScriptCon_FloatCounter_EqualTo_93 = true;
   bool logic_uScriptCon_FloatCounter_LessThanOrEqualTo_93 = true;
   bool logic_uScriptCon_FloatCounter_LessThan_93 = true;
   //pointer to script instanced logic node
   uScriptCon_IntCounter logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94 = new uScriptCon_IntCounter( );
   System.Int32 logic_uScriptCon_IntCounter_A_94 = (int) 0;
   System.Int32 logic_uScriptCon_IntCounter_B_94 = (int) 0;
   System.Int32 logic_uScriptCon_IntCounter_currentValue_94;
   bool logic_uScriptCon_IntCounter_GreaterThan_94 = true;
   bool logic_uScriptCon_IntCounter_GreaterThanOrEqualTo_94 = true;
   bool logic_uScriptCon_IntCounter_EqualTo_94 = true;
   bool logic_uScriptCon_IntCounter_LessThanOrEqualTo_94 = true;
   bool logic_uScriptCon_IntCounter_LessThan_94 = true;
   //pointer to script instanced logic node
   uScriptCon_Gate logic_uScriptCon_Gate_uScriptCon_Gate_95 = new uScriptCon_Gate( );
   System.Boolean logic_uScriptCon_Gate_StartOpen_95 = (bool) false;
   System.Int32 logic_uScriptCon_Gate_AutoCloseCount_95 = (int) 0;
   System.Boolean logic_uScriptCon_Gate_IsOpen_95;
   //pointer to script instanced logic node
   uScriptCon_TimedGate logic_uScriptCon_TimedGate_uScriptCon_TimedGate_96 = new uScriptCon_TimedGate( );
   System.Single logic_uScriptCon_TimedGate_Duration_96 = (float) 1;
   System.Boolean logic_uScriptCon_TimedGate_StartOpen_96 = (bool) true;
   bool logic_uScriptCon_TimedGate_TooSoon_96 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_97 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_97 = "";
   System.Object[] logic_uScriptAct_Log_Target_97 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_97 = "";
   bool logic_uScriptAct_Log_Out_97 = true;
   //pointer to script instanced logic node
   uScriptCon_ManualSwitch logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98 = new uScriptCon_ManualSwitch( );
   System.Int32 logic_uScriptCon_ManualSwitch_CurrentOutput_98 = (int) 0;
   //pointer to script instanced logic node
   uScriptCon_RandomSwitch logic_uScriptCon_RandomSwitch_uScriptCon_RandomSwitch_99 = new uScriptCon_RandomSwitch( );
   System.Int32 logic_uScriptCon_RandomSwitch_MaxOutputUsed_99 = (int) 6;
   System.Int32 logic_uScriptCon_RandomSwitch_CurrentOutput_99;
   bool logic_uScriptCon_RandomSwitch_Output1_99 = true;
   bool logic_uScriptCon_RandomSwitch_Output2_99 = true;
   bool logic_uScriptCon_RandomSwitch_Output3_99 = true;
   bool logic_uScriptCon_RandomSwitch_Output4_99 = true;
   bool logic_uScriptCon_RandomSwitch_Output5_99 = true;
   bool logic_uScriptCon_RandomSwitch_Output6_99 = true;
   //pointer to script instanced logic node
   uScriptCon_Switch logic_uScriptCon_Switch_uScriptCon_Switch_100 = new uScriptCon_Switch( );
   System.Boolean logic_uScriptCon_Switch_Loop_100 = (bool) false;
   System.Int32 logic_uScriptCon_Switch_MaxOutputUsed_100 = (int) 0;
   System.Int32 logic_uScriptCon_Switch_CurrentOutput_100;
   bool logic_uScriptCon_Switch_Output1_100 = true;
   bool logic_uScriptCon_Switch_Output2_100 = true;
   bool logic_uScriptCon_Switch_Output3_100 = true;
   bool logic_uScriptCon_Switch_Output4_100 = true;
   bool logic_uScriptCon_Switch_Output5_100 = true;
   bool logic_uScriptCon_Switch_Output6_100 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_101 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_101 = "";
   System.Object[] logic_uScriptAct_Log_Target_101 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_101 = "";
   bool logic_uScriptAct_Log_Out_101 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_102 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_102 = "";
   System.Object[] logic_uScriptAct_Log_Target_102 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_102 = "";
   bool logic_uScriptAct_Log_Out_102 = true;
   //pointer to script instanced logic node
   uScriptAct_PrintList logic_uScriptAct_PrintList_uScriptAct_PrintList_104 = new uScriptAct_PrintList( );
   System.String[] logic_uScriptAct_PrintList_Strings_104 = new System.String[] {};
   bool logic_uScriptAct_PrintList_Out_104 = true;
   //pointer to script instanced logic node
   uScriptAct_PrintText logic_uScriptAct_PrintText_uScriptAct_PrintText_106 = new uScriptAct_PrintText( );
   System.String logic_uScriptAct_PrintText_Text_106 = "";
   System.Int32 logic_uScriptAct_PrintText_FontSize_106 = (int) 16;
   UnityEngine.FontStyle logic_uScriptAct_PrintText_FontStyle_106 = UnityEngine.FontStyle.Bold;
   UnityEngine.Color logic_uScriptAct_PrintText_FontColor_106 = UnityEngine.Color.black;
   UnityEngine.TextAnchor logic_uScriptAct_PrintText_textAnchor_106 = UnityEngine.TextAnchor.MiddleRight;
   System.Int32 logic_uScriptAct_PrintText_EdgePadding_106 = (int) 8;
   System.Single logic_uScriptAct_PrintText_time_106 = (float) 0;
   bool logic_uScriptAct_PrintText_Out_106 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIGetBackgroundColor logic_uScriptAct_GUIGetBackgroundColor_uScriptAct_GUIGetBackgroundColor_108 = new uScriptAct_GUIGetBackgroundColor( );
   UnityEngine.Color logic_uScriptAct_GUIGetBackgroundColor_color_108;
   bool logic_uScriptAct_GUIGetBackgroundColor_Out_108 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIGetColor logic_uScriptAct_GUIGetColor_uScriptAct_GUIGetColor_109 = new uScriptAct_GUIGetColor( );
   UnityEngine.Color logic_uScriptAct_GUIGetColor_color_109;
   bool logic_uScriptAct_GUIGetColor_Out_109 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIGetContentColor logic_uScriptAct_GUIGetContentColor_uScriptAct_GUIGetContentColor_110 = new uScriptAct_GUIGetContentColor( );
   UnityEngine.Color logic_uScriptAct_GUIGetContentColor_color_110;
   bool logic_uScriptAct_GUIGetContentColor_Out_110 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIGetEnabledState logic_uScriptAct_GUIGetEnabledState_uScriptAct_GUIGetEnabledState_111 = new uScriptAct_GUIGetEnabledState( );
   System.Boolean logic_uScriptAct_GUIGetEnabledState_Enabled_111;
   bool logic_uScriptAct_GUIGetEnabledState_Out_111 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIGetToolTip logic_uScriptAct_GUIGetToolTip_uScriptAct_GUIGetToolTip_112 = new uScriptAct_GUIGetToolTip( );
   System.String logic_uScriptAct_GUIGetToolTip_tooltip_112;
   bool logic_uScriptAct_GUIGetToolTip_Out_112 = true;
   //pointer to script instanced logic node
   uScriptAct_GUISetBackgroundColor logic_uScriptAct_GUISetBackgroundColor_uScriptAct_GUISetBackgroundColor_113 = new uScriptAct_GUISetBackgroundColor( );
   UnityEngine.Color logic_uScriptAct_GUISetBackgroundColor_color_113 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   bool logic_uScriptAct_GUISetBackgroundColor_Out_113 = true;
   //pointer to script instanced logic node
   uScriptAct_GUISetColor logic_uScriptAct_GUISetColor_uScriptAct_GUISetColor_114 = new uScriptAct_GUISetColor( );
   UnityEngine.Color logic_uScriptAct_GUISetColor_color_114 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   bool logic_uScriptAct_GUISetColor_Out_114 = true;
   //pointer to script instanced logic node
   uScriptAct_GUISetContentColor logic_uScriptAct_GUISetContentColor_uScriptAct_GUISetContentColor_115 = new uScriptAct_GUISetContentColor( );
   UnityEngine.Color logic_uScriptAct_GUISetContentColor_color_115 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   bool logic_uScriptAct_GUISetContentColor_Out_115 = true;
   //pointer to script instanced logic node
   uScriptAct_GUISetEnabledState logic_uScriptAct_GUISetEnabledState_uScriptAct_GUISetEnabledState_116 = new uScriptAct_GUISetEnabledState( );
   System.Boolean logic_uScriptAct_GUISetEnabledState_Enabled_116 = (bool) false;
   bool logic_uScriptAct_GUISetEnabledState_Out_116 = true;
   //pointer to script instanced logic node
   uScriptAct_GUISetFocusedControl logic_uScriptAct_GUISetFocusedControl_uScriptAct_GUISetFocusedControl_117 = new uScriptAct_GUISetFocusedControl( );
   System.String logic_uScriptAct_GUISetFocusedControl_ControlName_117 = "";
   bool logic_uScriptAct_GUISetFocusedControl_Out_117 = true;
   //pointer to script instanced logic node
   uScriptAct_GUISetSkin logic_uScriptAct_GUISetSkin_uScriptAct_GUISetSkin_118 = new uScriptAct_GUISetSkin( );
   UnityEngine.GUISkin logic_uScriptAct_GUISetSkin_skin_118 = null;
   bool logic_uScriptAct_GUISetSkin_Out_118 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIBeginGroup logic_uScriptAct_GUIBeginGroup_uScriptAct_GUIBeginGroup_119 = new uScriptAct_GUIBeginGroup( );
   UnityEngine.Rect logic_uScriptAct_GUIBeginGroup_Position_119 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.String logic_uScriptAct_GUIBeginGroup_Text_119 = "";
   UnityEngine.Texture2D logic_uScriptAct_GUIBeginGroup_Texture_119 = null;
   System.String logic_uScriptAct_GUIBeginGroup_ToolTip_119 = "";
   System.String logic_uScriptAct_GUIBeginGroup_guiStyle_119 = "";
   bool logic_uScriptAct_GUIBeginGroup_Out_119 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIBox logic_uScriptAct_GUIBox_uScriptAct_GUIBox_120 = new uScriptAct_GUIBox( );
   System.String logic_uScriptAct_GUIBox_Text_120 = "";
   UnityEngine.Rect logic_uScriptAct_GUIBox_Position_120 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Texture2D logic_uScriptAct_GUIBox_Texture_120 = null;
   System.String logic_uScriptAct_GUIBox_ToolTip_120 = "";
   System.String logic_uScriptAct_GUIBox_guiStyle_120 = "";
   bool logic_uScriptAct_GUIBox_Out_120 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIButton logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121 = new uScriptAct_GUIButton( );
   System.String logic_uScriptAct_GUIButton_Text_121 = "";
   System.Int32 logic_uScriptAct_GUIButton_identifier_121 = (int) 0;
   UnityEngine.Rect logic_uScriptAct_GUIButton_Position_121 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Texture2D logic_uScriptAct_GUIButton_Texture_121 = null;
   System.String logic_uScriptAct_GUIButton_ToolTip_121 = "";
   System.String logic_uScriptAct_GUIButton_guiStyle_121 = "";
   bool logic_uScriptAct_GUIButton_Out_121 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIEndGroup logic_uScriptAct_GUIEndGroup_uScriptAct_GUIEndGroup_122 = new uScriptAct_GUIEndGroup( );
   bool logic_uScriptAct_GUIEndGroup_Out_122 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIHorizontalScrollbar logic_uScriptAct_GUIHorizontalScrollbar_uScriptAct_GUIHorizontalScrollbar_123 = new uScriptAct_GUIHorizontalScrollbar( );
   UnityEngine.Rect logic_uScriptAct_GUIHorizontalScrollbar_Position_123 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_GUIHorizontalScrollbar_Value_123 = (float) 0;
   System.Single logic_uScriptAct_GUIHorizontalScrollbar_Size_123 = (float) 0;
   System.Single logic_uScriptAct_GUIHorizontalScrollbar_leftValue_123 = (float) 0;
   System.Single logic_uScriptAct_GUIHorizontalScrollbar_rightValue_123 = (float) 1;
   System.String logic_uScriptAct_GUIHorizontalScrollbar_guiStyle_123 = "";
   bool logic_uScriptAct_GUIHorizontalScrollbar_Out_123 = true;
   //pointer to script instanced logic node
   uScriptAct_GUILabel logic_uScriptAct_GUILabel_uScriptAct_GUILabel_124 = new uScriptAct_GUILabel( );
   System.String logic_uScriptAct_GUILabel_Text_124 = "";
   UnityEngine.Rect logic_uScriptAct_GUILabel_Position_124 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Texture logic_uScriptAct_GUILabel_Texture_124 = null;
   System.String logic_uScriptAct_GUILabel_ToolTip_124 = "";
   System.String logic_uScriptAct_GUILabel_guiStyle_124 = "";
   bool logic_uScriptAct_GUILabel_Out_124 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIPasswordField logic_uScriptAct_GUIPasswordField_uScriptAct_GUIPasswordField_125 = new uScriptAct_GUIPasswordField( );
   System.String logic_uScriptAct_GUIPasswordField_Value_125 = "";
   UnityEngine.Rect logic_uScriptAct_GUIPasswordField_Position_125 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.Int32 logic_uScriptAct_GUIPasswordField_maxLength_125 = (int) 50;
   System.String logic_uScriptAct_GUIPasswordField_ControlName_125 = "";
   System.String logic_uScriptAct_GUIPasswordField_guiStyle_125 = "";
   bool logic_uScriptAct_GUIPasswordField_Out_125 = true;
   bool logic_uScriptAct_GUIPasswordField_Changed_125 = true;
   //pointer to script instanced logic node
   uScriptAct_GUITextArea logic_uScriptAct_GUITextArea_uScriptAct_GUITextArea_126 = new uScriptAct_GUITextArea( );
   System.String logic_uScriptAct_GUITextArea_Value_126 = "";
   UnityEngine.Rect logic_uScriptAct_GUITextArea_Position_126 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.Int32 logic_uScriptAct_GUITextArea_maxLength_126 = (int) 50;
   System.String logic_uScriptAct_GUITextArea_ControlName_126 = "";
   System.String logic_uScriptAct_GUITextArea_guiStyle_126 = "";
   bool logic_uScriptAct_GUITextArea_Out_126 = true;
   bool logic_uScriptAct_GUITextArea_Changed_126 = true;
   //pointer to script instanced logic node
   uScriptAct_GUITextField logic_uScriptAct_GUITextField_uScriptAct_GUITextField_127 = new uScriptAct_GUITextField( );
   System.String logic_uScriptAct_GUITextField_Value_127 = "";
   UnityEngine.Rect logic_uScriptAct_GUITextField_Position_127 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.Int32 logic_uScriptAct_GUITextField_maxLength_127 = (int) 50;
   System.String logic_uScriptAct_GUITextField_ControlName_127 = "";
   System.String logic_uScriptAct_GUITextField_guiStyle_127 = "";
   bool logic_uScriptAct_GUITextField_Out_127 = true;
   bool logic_uScriptAct_GUITextField_Changed_127 = true;
   //pointer to script instanced logic node
   uScriptAct_GUITexture logic_uScriptAct_GUITexture_uScriptAct_GUITexture_128 = new uScriptAct_GUITexture( );
   UnityEngine.Rect logic_uScriptAct_GUITexture_Position_128 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Texture2D logic_uScriptAct_GUITexture_Texture_128 = null;
   UnityEngine.ScaleMode logic_uScriptAct_GUITexture_scaleMode_128 = UnityEngine.ScaleMode.StretchToFill;
   System.Boolean logic_uScriptAct_GUITexture_alphaBlend_128 = (bool) true;
   System.Single logic_uScriptAct_GUITexture_aspect_128 = (float) 1;
   bool logic_uScriptAct_GUITexture_Out_128 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIToggle logic_uScriptAct_GUIToggle_uScriptAct_GUIToggle_129 = new uScriptAct_GUIToggle( );
   System.Boolean logic_uScriptAct_GUIToggle_Value_129 = (bool) false;
   System.String logic_uScriptAct_GUIToggle_Text_129 = "";
   UnityEngine.Rect logic_uScriptAct_GUIToggle_Position_129 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Texture2D logic_uScriptAct_GUIToggle_Texture_129 = null;
   System.String logic_uScriptAct_GUIToggle_ToolTip_129 = "";
   System.String logic_uScriptAct_GUIToggle_guiStyle_129 = "";
   bool logic_uScriptAct_GUIToggle_Out_129 = true;
   bool logic_uScriptAct_GUIToggle_Changed_129 = true;
   //pointer to script instanced logic node
   uScriptAct_GUIVerticalScrollbar logic_uScriptAct_GUIVerticalScrollbar_uScriptAct_GUIVerticalScrollbar_130 = new uScriptAct_GUIVerticalScrollbar( );
   UnityEngine.Rect logic_uScriptAct_GUIVerticalScrollbar_Position_130 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_GUIVerticalScrollbar_Value_130 = (float) 0;
   System.Single logic_uScriptAct_GUIVerticalScrollbar_Size_130 = (float) 0;
   System.Single logic_uScriptAct_GUIVerticalScrollbar_topValue_130 = (float) 0;
   System.Single logic_uScriptAct_GUIVerticalScrollbar_bottomValue_130 = (float) 1;
   System.String logic_uScriptAct_GUIVerticalScrollbar_guiStyle_130 = "";
   bool logic_uScriptAct_GUIVerticalScrollbar_Out_130 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_131 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_131 = "";
   System.Object[] logic_uScriptAct_Log_Target_131 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_131 = "";
   bool logic_uScriptAct_Log_Out_131 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_132 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_132 = "";
   System.Object[] logic_uScriptAct_Log_Target_132 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_132 = "";
   bool logic_uScriptAct_Log_Out_132 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_133 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_133 = "";
   System.Object[] logic_uScriptAct_Log_Target_133 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_133 = "";
   bool logic_uScriptAct_Log_Out_133 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_134 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_134 = "";
   System.Object[] logic_uScriptAct_Log_Target_134 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_134 = "";
   bool logic_uScriptAct_Log_Out_134 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_135 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_135 = "";
   System.Object[] logic_uScriptAct_Log_Target_135 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_135 = "";
   bool logic_uScriptAct_Log_Out_135 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_136 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_136 = "";
   System.Object[] logic_uScriptAct_Log_Target_136 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_136 = "";
   bool logic_uScriptAct_Log_Out_136 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_137 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_137 = "";
   System.Object[] logic_uScriptAct_Log_Target_137 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_137 = "";
   bool logic_uScriptAct_Log_Out_137 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_138 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_138 = "";
   System.Object[] logic_uScriptAct_Log_Target_138 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_138 = "";
   bool logic_uScriptAct_Log_Out_138 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_139 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_139 = "";
   System.Object[] logic_uScriptAct_Log_Target_139 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_139 = "";
   bool logic_uScriptAct_Log_Out_139 = true;
   //pointer to script instanced logic node
   uScriptAct_OnInputEventFilter logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_141 = new uScriptAct_OnInputEventFilter( );
   UnityEngine.KeyCode logic_uScriptAct_OnInputEventFilter_KeyCode_141 = UnityEngine.KeyCode.Escape;
   bool logic_uScriptAct_OnInputEventFilter_KeyDown_141 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyHeld_141 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyUp_141 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEvent logic_uScriptAct_SendCustomEvent_uScriptAct_SendCustomEvent_142 = new uScriptAct_SendCustomEvent( );
   System.String logic_uScriptAct_SendCustomEvent_EventName_142 = "";
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEvent_sendGroup_142 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEvent_EventSender_142 = null;
   bool logic_uScriptAct_SendCustomEvent_Out_142 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventBool logic_uScriptAct_SendCustomEventBool_uScriptAct_SendCustomEventBool_143 = new uScriptAct_SendCustomEventBool( );
   System.String logic_uScriptAct_SendCustomEventBool_EventName_143 = "";
   System.Boolean logic_uScriptAct_SendCustomEventBool_EventValue_143 = (bool) false;
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventBool_sendGroup_143 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventBool_EventSender_143 = null;
   bool logic_uScriptAct_SendCustomEventBool_Out_143 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventColor logic_uScriptAct_SendCustomEventColor_uScriptAct_SendCustomEventColor_144 = new uScriptAct_SendCustomEventColor( );
   System.String logic_uScriptAct_SendCustomEventColor_EventName_144 = "";
   UnityEngine.Color logic_uScriptAct_SendCustomEventColor_EventValue_144 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventColor_sendGroup_144 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventColor_EventSender_144 = null;
   bool logic_uScriptAct_SendCustomEventColor_Out_144 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventFloat logic_uScriptAct_SendCustomEventFloat_uScriptAct_SendCustomEventFloat_145 = new uScriptAct_SendCustomEventFloat( );
   System.String logic_uScriptAct_SendCustomEventFloat_EventName_145 = "";
   System.Single logic_uScriptAct_SendCustomEventFloat_EventValue_145 = (float) 0;
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventFloat_sendGroup_145 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventFloat_EventSender_145 = null;
   bool logic_uScriptAct_SendCustomEventFloat_Out_145 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventGameObject logic_uScriptAct_SendCustomEventGameObject_uScriptAct_SendCustomEventGameObject_146 = new uScriptAct_SendCustomEventGameObject( );
   System.String logic_uScriptAct_SendCustomEventGameObject_EventName_146 = "";
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventGameObject_EventValue_146 = null;
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventGameObject_sendGroup_146 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventGameObject_EventSender_146 = null;
   bool logic_uScriptAct_SendCustomEventGameObject_Out_146 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventInt logic_uScriptAct_SendCustomEventInt_uScriptAct_SendCustomEventInt_147 = new uScriptAct_SendCustomEventInt( );
   System.String logic_uScriptAct_SendCustomEventInt_EventName_147 = "";
   System.Int32 logic_uScriptAct_SendCustomEventInt_EventValue_147 = (int) 0;
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventInt_sendGroup_147 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventInt_EventSender_147 = null;
   bool logic_uScriptAct_SendCustomEventInt_Out_147 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventObject logic_uScriptAct_SendCustomEventObject_uScriptAct_SendCustomEventObject_148 = new uScriptAct_SendCustomEventObject( );
   System.String logic_uScriptAct_SendCustomEventObject_EventName_148 = "";
   UnityEngine.Object logic_uScriptAct_SendCustomEventObject_EventValue_148 = null;
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventObject_sendGroup_148 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventObject_EventSender_148 = null;
   bool logic_uScriptAct_SendCustomEventObject_Out_148 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventString logic_uScriptAct_SendCustomEventString_uScriptAct_SendCustomEventString_149 = new uScriptAct_SendCustomEventString( );
   System.String logic_uScriptAct_SendCustomEventString_EventName_149 = "";
   System.String logic_uScriptAct_SendCustomEventString_EventValue_149 = "";
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventString_sendGroup_149 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventString_EventSender_149 = null;
   bool logic_uScriptAct_SendCustomEventString_Out_149 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventVector2 logic_uScriptAct_SendCustomEventVector2_uScriptAct_SendCustomEventVector2_150 = new uScriptAct_SendCustomEventVector2( );
   System.String logic_uScriptAct_SendCustomEventVector2_EventName_150 = "";
   UnityEngine.Vector2 logic_uScriptAct_SendCustomEventVector2_EventValue_150 = new Vector2( (float)0, (float)0 );
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventVector2_sendGroup_150 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventVector2_EventSender_150 = null;
   bool logic_uScriptAct_SendCustomEventVector2_Out_150 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventVector3 logic_uScriptAct_SendCustomEventVector3_uScriptAct_SendCustomEventVector3_151 = new uScriptAct_SendCustomEventVector3( );
   System.String logic_uScriptAct_SendCustomEventVector3_EventName_151 = "";
   UnityEngine.Vector3 logic_uScriptAct_SendCustomEventVector3_EventValue_151 = new Vector3( (float)0, (float)0, (float)0 );
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventVector3_sendGroup_151 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventVector3_EventSender_151 = null;
   bool logic_uScriptAct_SendCustomEventVector3_Out_151 = true;
   //pointer to script instanced logic node
   uScriptAct_SendCustomEventVector4 logic_uScriptAct_SendCustomEventVector4_uScriptAct_SendCustomEventVector4_152 = new uScriptAct_SendCustomEventVector4( );
   System.String logic_uScriptAct_SendCustomEventVector4_EventName_152 = "";
   UnityEngine.Vector4 logic_uScriptAct_SendCustomEventVector4_EventValue_152 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   uScriptCustomEvent.SendGroup logic_uScriptAct_SendCustomEventVector4_sendGroup_152 = uScriptCustomEvent.SendGroup.Parents;
   UnityEngine.GameObject logic_uScriptAct_SendCustomEventVector4_EventSender_152 = null;
   bool logic_uScriptAct_SendCustomEventVector4_Out_152 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_153 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_153 = "";
   System.Object[] logic_uScriptAct_Log_Target_153 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_153 = "";
   bool logic_uScriptAct_Log_Out_153 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_162 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_162 = "";
   System.Object[] logic_uScriptAct_Log_Target_162 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_162 = "";
   bool logic_uScriptAct_Log_Out_162 = true;
   //pointer to script instanced logic node
   uScriptAct_OnInputEventFilter logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_165 = new uScriptAct_OnInputEventFilter( );
   UnityEngine.KeyCode logic_uScriptAct_OnInputEventFilter_KeyCode_165 = UnityEngine.KeyCode.Backspace;
   bool logic_uScriptAct_OnInputEventFilter_KeyDown_165 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyHeld_165 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyUp_165 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadAudioClip logic_uScriptAct_LoadAudioClip_uScriptAct_LoadAudioClip_166 = new uScriptAct_LoadAudioClip( );
   System.String logic_uScriptAct_LoadAudioClip_name_166 = "";
   UnityEngine.AudioClip logic_uScriptAct_LoadAudioClip_audioClip_166;
   bool logic_uScriptAct_LoadAudioClip_Out_166 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadCubemap logic_uScriptAct_LoadCubemap_uScriptAct_LoadCubemap_167 = new uScriptAct_LoadCubemap( );
   System.String logic_uScriptAct_LoadCubemap_name_167 = "";
   UnityEngine.Cubemap logic_uScriptAct_LoadCubemap_asset_167;
   bool logic_uScriptAct_LoadCubemap_Out_167 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadFlare logic_uScriptAct_LoadFlare_uScriptAct_LoadFlare_168 = new uScriptAct_LoadFlare( );
   System.String logic_uScriptAct_LoadFlare_name_168 = "";
   UnityEngine.Flare logic_uScriptAct_LoadFlare_asset_168;
   bool logic_uScriptAct_LoadFlare_Out_168 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadFont logic_uScriptAct_LoadFont_uScriptAct_LoadFont_169 = new uScriptAct_LoadFont( );
   System.String logic_uScriptAct_LoadFont_name_169 = "";
   UnityEngine.Font logic_uScriptAct_LoadFont_asset_169;
   bool logic_uScriptAct_LoadFont_Out_169 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadGUISkin logic_uScriptAct_LoadGUISkin_uScriptAct_LoadGUISkin_170 = new uScriptAct_LoadGUISkin( );
   System.String logic_uScriptAct_LoadGUISkin_name_170 = "";
   UnityEngine.GUISkin logic_uScriptAct_LoadGUISkin_asset_170;
   bool logic_uScriptAct_LoadGUISkin_Out_170 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadMaterial logic_uScriptAct_LoadMaterial_uScriptAct_LoadMaterial_171 = new uScriptAct_LoadMaterial( );
   System.String logic_uScriptAct_LoadMaterial_name_171 = "";
   UnityEngine.Material logic_uScriptAct_LoadMaterial_materialFile_171;
   bool logic_uScriptAct_LoadMaterial_Out_171 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadMesh logic_uScriptAct_LoadMesh_uScriptAct_LoadMesh_172 = new uScriptAct_LoadMesh( );
   System.String logic_uScriptAct_LoadMesh_name_172 = "";
   UnityEngine.Mesh logic_uScriptAct_LoadMesh_asset_172;
   bool logic_uScriptAct_LoadMesh_Out_172 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadPhysicMaterial logic_uScriptAct_LoadPhysicMaterial_uScriptAct_LoadPhysicMaterial_173 = new uScriptAct_LoadPhysicMaterial( );
   System.String logic_uScriptAct_LoadPhysicMaterial_name_173 = "";
   UnityEngine.PhysicMaterial logic_uScriptAct_LoadPhysicMaterial_asset_173;
   bool logic_uScriptAct_LoadPhysicMaterial_Out_173 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadPrefab logic_uScriptAct_LoadPrefab_uScriptAct_LoadPrefab_174 = new uScriptAct_LoadPrefab( );
   System.String logic_uScriptAct_LoadPrefab_name_174 = "";
   UnityEngine.GameObject logic_uScriptAct_LoadPrefab_asset_174;
   bool logic_uScriptAct_LoadPrefab_Out_174 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadShader logic_uScriptAct_LoadShader_uScriptAct_LoadShader_175 = new uScriptAct_LoadShader( );
   System.String logic_uScriptAct_LoadShader_name_175 = "";
   UnityEngine.Shader logic_uScriptAct_LoadShader_asset_175;
   bool logic_uScriptAct_LoadShader_Out_175 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadTextAsset logic_uScriptAct_LoadTextAsset_uScriptAct_LoadTextAsset_176 = new uScriptAct_LoadTextAsset( );
   System.String logic_uScriptAct_LoadTextAsset_name_176 = "";
   UnityEngine.TextAsset logic_uScriptAct_LoadTextAsset_asset_176;
   bool logic_uScriptAct_LoadTextAsset_Out_176 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadTexture2D logic_uScriptAct_LoadTexture2D_uScriptAct_LoadTexture2D_177 = new uScriptAct_LoadTexture2D( );
   System.String logic_uScriptAct_LoadTexture2D_name_177 = "";
   UnityEngine.Texture2D logic_uScriptAct_LoadTexture2D_textureFile_177;
   bool logic_uScriptAct_LoadTexture2D_Out_177 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_178 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_178 = "";
   System.Object[] logic_uScriptAct_Log_Target_178 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_178 = "";
   bool logic_uScriptAct_Log_Out_178 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_179 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_179 = "";
   System.Object[] logic_uScriptAct_Log_Target_179 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_179 = "";
   bool logic_uScriptAct_Log_Out_179 = true;
   //pointer to script instanced logic node
   uScriptAct_OnInputEventFilter logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_193 = new uScriptAct_OnInputEventFilter( );
   UnityEngine.KeyCode logic_uScriptAct_OnInputEventFilter_KeyCode_193 = UnityEngine.KeyCode.Caret;
   bool logic_uScriptAct_OnInputEventFilter_KeyDown_193 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyHeld_193 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyUp_193 = true;
   //pointer to script instanced logic node
   uScriptAct_PlayAnimation logic_uScriptAct_PlayAnimation_uScriptAct_PlayAnimation_195 = new uScriptAct_PlayAnimation( );
   UnityEngine.GameObject[] logic_uScriptAct_PlayAnimation_Target_195 = new UnityEngine.GameObject[] {};
   System.String logic_uScriptAct_PlayAnimation_Animation_195 = "";
   System.Single logic_uScriptAct_PlayAnimation_SpeedFactor_195 = (float) 1;
   UnityEngine.WrapMode logic_uScriptAct_PlayAnimation_AnimWrapMode_195 = UnityEngine.WrapMode.Default;
   System.Boolean logic_uScriptAct_PlayAnimation_StopOtherAnimations_195 = (bool) true;
   bool logic_uScriptAct_PlayAnimation_Out_195 = true;
   //pointer to script instanced logic node
   uScriptAct_RewindAnimation logic_uScriptAct_RewindAnimation_uScriptAct_RewindAnimation_197 = new uScriptAct_RewindAnimation( );
   UnityEngine.GameObject[] logic_uScriptAct_RewindAnimation_Target_197 = new UnityEngine.GameObject[] {};
   System.String logic_uScriptAct_RewindAnimation_AnimationName_197 = "";
   bool logic_uScriptAct_RewindAnimation_Out_197 = true;
   //pointer to script instanced logic node
   uScriptAct_StopAnimation logic_uScriptAct_StopAnimation_uScriptAct_StopAnimation_198 = new uScriptAct_StopAnimation( );
   UnityEngine.GameObject[] logic_uScriptAct_StopAnimation_Target_198 = new UnityEngine.GameObject[] {};
   System.String logic_uScriptAct_StopAnimation_AnimationName_198 = "";
   bool logic_uScriptAct_StopAnimation_Out_198 = true;
   //pointer to script instanced logic node
   uScriptAct_ApplicationInfo logic_uScriptAct_ApplicationInfo_uScriptAct_ApplicationInfo_199 = new uScriptAct_ApplicationInfo( );
   System.Int32 logic_uScriptAct_ApplicationInfo_levelCount_199;
   System.Int32 logic_uScriptAct_ApplicationInfo_loadedLevel_199;
   System.String logic_uScriptAct_ApplicationInfo_loadedLevelName_199;
   System.Boolean logic_uScriptAct_ApplicationInfo_isEditor_199;
   System.Boolean logic_uScriptAct_ApplicationInfo_isLoadingLevel_199;
   System.Boolean logic_uScriptAct_ApplicationInfo_isPlaying_199;
   System.Boolean logic_uScriptAct_ApplicationInfo_isWebPlayer_199;
   System.Int32 logic_uScriptAct_ApplicationInfo_streamedBytes_199;
   UnityEngine.RuntimePlatform logic_uScriptAct_ApplicationInfo_platform_199;
   System.String logic_uScriptAct_ApplicationInfo_dataPath_199;
   System.String logic_uScriptAct_ApplicationInfo_persistentDataPath_199;
   System.String logic_uScriptAct_ApplicationInfo_temporaryCachePath_199;
   System.String logic_uScriptAct_ApplicationInfo_srcValue_199;
   System.String logic_uScriptAct_ApplicationInfo_absoluteURL_199;
   UnityEngine.SystemLanguage logic_uScriptAct_ApplicationInfo_systemLanguage_199;
   UnityEngine.NetworkReachability logic_uScriptAct_ApplicationInfo_internetReachability_199;
   System.Boolean logic_uScriptAct_ApplicationInfo_webSecurityEnabled_199;
   System.String logic_uScriptAct_ApplicationInfo_webSecurityHostUrl_199;
   System.Boolean logic_uScriptAct_ApplicationInfo_runInBackground_199;
   System.Int32 logic_uScriptAct_ApplicationInfo_targetFrameRate_199;
   UnityEngine.ThreadPriority logic_uScriptAct_ApplicationInfo_backgroundLoadingPriority_199;
   System.String logic_uScriptAct_ApplicationInfo_unityVersion_199;
   bool logic_uScriptAct_ApplicationInfo_Out_199 = true;
   //pointer to script instanced logic node
   uScriptAct_DeletePreferenceKey logic_uScriptAct_DeletePreferenceKey_uScriptAct_DeletePreferenceKey_200 = new uScriptAct_DeletePreferenceKey( );
   System.String logic_uScriptAct_DeletePreferenceKey_KeyName_200 = "";
   bool logic_uScriptAct_DeletePreferenceKey_Out_200 = true;
   //pointer to script instanced logic node
   uScriptAct_DoesPreferenceKeyExist logic_uScriptAct_DoesPreferenceKeyExist_uScriptAct_DoesPreferenceKeyExist_201 = new uScriptAct_DoesPreferenceKeyExist( );
   System.String logic_uScriptAct_DoesPreferenceKeyExist_KeyName_201 = "";
   bool logic_uScriptAct_DoesPreferenceKeyExist_True_201 = true;
   bool logic_uScriptAct_DoesPreferenceKeyExist_False_201 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPreferenceKeyBool logic_uScriptAct_GetPreferenceKeyBool_uScriptAct_GetPreferenceKeyBool_202 = new uScriptAct_GetPreferenceKeyBool( );
   System.String logic_uScriptAct_GetPreferenceKeyBool_KeyName_202 = "";
   System.Boolean logic_uScriptAct_GetPreferenceKeyBool_DefaultValue_202 = (bool) false;
   System.Boolean logic_uScriptAct_GetPreferenceKeyBool_Value_202;
   bool logic_uScriptAct_GetPreferenceKeyBool_Out_202 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPreferenceKeyFloat logic_uScriptAct_GetPreferenceKeyFloat_uScriptAct_GetPreferenceKeyFloat_203 = new uScriptAct_GetPreferenceKeyFloat( );
   System.String logic_uScriptAct_GetPreferenceKeyFloat_KeyName_203 = "";
   System.Single logic_uScriptAct_GetPreferenceKeyFloat_DefaultValue_203 = (float) 0;
   System.Single logic_uScriptAct_GetPreferenceKeyFloat_Value_203;
   bool logic_uScriptAct_GetPreferenceKeyFloat_Out_203 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPreferenceKeyInt logic_uScriptAct_GetPreferenceKeyInt_uScriptAct_GetPreferenceKeyInt_204 = new uScriptAct_GetPreferenceKeyInt( );
   System.String logic_uScriptAct_GetPreferenceKeyInt_KeyName_204 = "";
   System.Int32 logic_uScriptAct_GetPreferenceKeyInt_DefaultValue_204 = (int) 0;
   System.Int32 logic_uScriptAct_GetPreferenceKeyInt_Value_204;
   bool logic_uScriptAct_GetPreferenceKeyInt_Out_204 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPreferenceKeyRect logic_uScriptAct_GetPreferenceKeyRect_uScriptAct_GetPreferenceKeyRect_205 = new uScriptAct_GetPreferenceKeyRect( );
   System.String logic_uScriptAct_GetPreferenceKeyRect_KeyName_205 = "";
   UnityEngine.Rect logic_uScriptAct_GetPreferenceKeyRect_DefaultValue_205 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Rect logic_uScriptAct_GetPreferenceKeyRect_Value_205;
   bool logic_uScriptAct_GetPreferenceKeyRect_Out_205 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPreferenceKeyString logic_uScriptAct_GetPreferenceKeyString_uScriptAct_GetPreferenceKeyString_206 = new uScriptAct_GetPreferenceKeyString( );
   System.String logic_uScriptAct_GetPreferenceKeyString_KeyName_206 = "";
   System.String logic_uScriptAct_GetPreferenceKeyString_DefaultValue_206 = "NOTFOUND";
   System.String logic_uScriptAct_GetPreferenceKeyString_Value_206;
   bool logic_uScriptAct_GetPreferenceKeyString_Out_206 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPreferenceKeyVector2 logic_uScriptAct_GetPreferenceKeyVector2_uScriptAct_GetPreferenceKeyVector2_207 = new uScriptAct_GetPreferenceKeyVector2( );
   System.String logic_uScriptAct_GetPreferenceKeyVector2_KeyName_207 = "";
   UnityEngine.Vector2 logic_uScriptAct_GetPreferenceKeyVector2_DefaultValue_207 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_GetPreferenceKeyVector2_Value_207;
   bool logic_uScriptAct_GetPreferenceKeyVector2_Out_207 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPreferenceKeyVector3 logic_uScriptAct_GetPreferenceKeyVector3_uScriptAct_GetPreferenceKeyVector3_208 = new uScriptAct_GetPreferenceKeyVector3( );
   System.String logic_uScriptAct_GetPreferenceKeyVector3_KeyName_208 = "";
   UnityEngine.Vector3 logic_uScriptAct_GetPreferenceKeyVector3_DefaultValue_208 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_GetPreferenceKeyVector3_Value_208;
   bool logic_uScriptAct_GetPreferenceKeyVector3_Out_208 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPreferenceKeyVector4 logic_uScriptAct_GetPreferenceKeyVector4_uScriptAct_GetPreferenceKeyVector4_209 = new uScriptAct_GetPreferenceKeyVector4( );
   System.String logic_uScriptAct_GetPreferenceKeyVector4_KeyName_209 = "";
   UnityEngine.Vector4 logic_uScriptAct_GetPreferenceKeyVector4_DefaultValue_209 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Vector4 logic_uScriptAct_GetPreferenceKeyVector4_Value_209;
   bool logic_uScriptAct_GetPreferenceKeyVector4_Out_209 = true;
   //pointer to script instanced logic node
   uScriptAct_OpenBrowser logic_uScriptAct_OpenBrowser_uScriptAct_OpenBrowser_210 = new uScriptAct_OpenBrowser( );
   System.String logic_uScriptAct_OpenBrowser_URL_210 = "";
   bool logic_uScriptAct_OpenBrowser_Out_210 = true;
   //pointer to script instanced logic node
   uScriptAct_Quit logic_uScriptAct_Quit_uScriptAct_Quit_211 = new uScriptAct_Quit( );
   bool logic_uScriptAct_Quit_Out_211 = true;
   //pointer to script instanced logic node
   uScriptAct_SetPreferenceKeyBool logic_uScriptAct_SetPreferenceKeyBool_uScriptAct_SetPreferenceKeyBool_212 = new uScriptAct_SetPreferenceKeyBool( );
   System.String logic_uScriptAct_SetPreferenceKeyBool_KeyName_212 = "";
   System.Boolean logic_uScriptAct_SetPreferenceKeyBool_Value_212 = (bool) false;
   bool logic_uScriptAct_SetPreferenceKeyBool_Out_212 = true;
   //pointer to script instanced logic node
   uScriptAct_SetPreferenceKeyFloat logic_uScriptAct_SetPreferenceKeyFloat_uScriptAct_SetPreferenceKeyFloat_213 = new uScriptAct_SetPreferenceKeyFloat( );
   System.String logic_uScriptAct_SetPreferenceKeyFloat_KeyName_213 = "";
   System.Single logic_uScriptAct_SetPreferenceKeyFloat_Value_213 = (float) 0;
   bool logic_uScriptAct_SetPreferenceKeyFloat_Out_213 = true;
   //pointer to script instanced logic node
   uScriptAct_SetPreferenceKeyInt logic_uScriptAct_SetPreferenceKeyInt_uScriptAct_SetPreferenceKeyInt_214 = new uScriptAct_SetPreferenceKeyInt( );
   System.String logic_uScriptAct_SetPreferenceKeyInt_KeyName_214 = "";
   System.Int32 logic_uScriptAct_SetPreferenceKeyInt_Value_214 = (int) 0;
   bool logic_uScriptAct_SetPreferenceKeyInt_Out_214 = true;
   //pointer to script instanced logic node
   uScriptAct_SetPreferenceKeyRect logic_uScriptAct_SetPreferenceKeyRect_uScriptAct_SetPreferenceKeyRect_215 = new uScriptAct_SetPreferenceKeyRect( );
   System.String logic_uScriptAct_SetPreferenceKeyRect_KeyName_215 = "";
   UnityEngine.Rect logic_uScriptAct_SetPreferenceKeyRect_Value_215 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   bool logic_uScriptAct_SetPreferenceKeyRect_Out_215 = true;
   //pointer to script instanced logic node
   uScriptAct_SetPreferenceKeyString logic_uScriptAct_SetPreferenceKeyString_uScriptAct_SetPreferenceKeyString_216 = new uScriptAct_SetPreferenceKeyString( );
   System.String logic_uScriptAct_SetPreferenceKeyString_KeyName_216 = "";
   System.String logic_uScriptAct_SetPreferenceKeyString_Value_216 = "";
   bool logic_uScriptAct_SetPreferenceKeyString_Out_216 = true;
   //pointer to script instanced logic node
   uScriptAct_SetPreferenceKeyVector2 logic_uScriptAct_SetPreferenceKeyVector2_uScriptAct_SetPreferenceKeyVector2_217 = new uScriptAct_SetPreferenceKeyVector2( );
   System.String logic_uScriptAct_SetPreferenceKeyVector2_KeyName_217 = "";
   UnityEngine.Vector2 logic_uScriptAct_SetPreferenceKeyVector2_Value_217 = new Vector2( (float)0, (float)0 );
   bool logic_uScriptAct_SetPreferenceKeyVector2_Out_217 = true;
   //pointer to script instanced logic node
   uScriptAct_SetPreferenceKeyVector3 logic_uScriptAct_SetPreferenceKeyVector3_uScriptAct_SetPreferenceKeyVector3_218 = new uScriptAct_SetPreferenceKeyVector3( );
   System.String logic_uScriptAct_SetPreferenceKeyVector3_KeyName_218 = "";
   UnityEngine.Vector3 logic_uScriptAct_SetPreferenceKeyVector3_Value_218 = new Vector3( (float)0, (float)0, (float)0 );
   bool logic_uScriptAct_SetPreferenceKeyVector3_Out_218 = true;
   //pointer to script instanced logic node
   uScriptAct_SetPreferenceKeyVector4 logic_uScriptAct_SetPreferenceKeyVector4_uScriptAct_SetPreferenceKeyVector4_219 = new uScriptAct_SetPreferenceKeyVector4( );
   System.String logic_uScriptAct_SetPreferenceKeyVector4_KeyName_219 = "";
   UnityEngine.Vector4 logic_uScriptAct_SetPreferenceKeyVector4_Value_219 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   bool logic_uScriptAct_SetPreferenceKeyVector4_Out_219 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_220 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_220 = "";
   System.Object[] logic_uScriptAct_Log_Target_220 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_220 = "";
   bool logic_uScriptAct_Log_Out_220 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_221 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_221 = "";
   System.Object[] logic_uScriptAct_Log_Target_221 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_221 = "";
   bool logic_uScriptAct_Log_Out_221 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_224 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_224 = "";
   System.Object[] logic_uScriptAct_Log_Target_224 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_224 = "";
   bool logic_uScriptAct_Log_Out_224 = true;
   //pointer to script instanced logic node
   uScriptAct_OnInputEventFilter logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_226 = new uScriptAct_OnInputEventFilter( );
   UnityEngine.KeyCode logic_uScriptAct_OnInputEventFilter_KeyCode_226 = UnityEngine.KeyCode.None;
   bool logic_uScriptAct_OnInputEventFilter_KeyDown_226 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyHeld_226 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyUp_226 = true;
   //pointer to script instanced logic node
   uScriptAct_PlaySound logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227 = new uScriptAct_PlaySound( );
   UnityEngine.AudioClip logic_uScriptAct_PlaySound_audioClip_227 = null;
   UnityEngine.GameObject[] logic_uScriptAct_PlaySound_target_227 = new UnityEngine.GameObject[] {};
   System.Single logic_uScriptAct_PlaySound_volume_227 = (float) 1;
   System.Boolean logic_uScriptAct_PlaySound_loop_227 = (bool) false;
   bool logic_uScriptAct_PlaySound_Out_227 = true;
   //pointer to script instanced logic node
   uScriptAct_SetActiveAudioListener logic_uScriptAct_SetActiveAudioListener_uScriptAct_SetActiveAudioListener_228 = new uScriptAct_SetActiveAudioListener( );
   UnityEngine.GameObject logic_uScriptAct_SetActiveAudioListener_Target_228 = null;
   bool logic_uScriptAct_SetActiveAudioListener_Out_228 = true;
   //pointer to script instanced logic node
   uScriptAct_SetCameraDepth logic_uScriptAct_SetCameraDepth_uScriptAct_SetCameraDepth_229 = new uScriptAct_SetCameraDepth( );
   UnityEngine.GameObject logic_uScriptAct_SetCameraDepth_Target_229 = null;
   System.Single logic_uScriptAct_SetCameraDepth_Depth_229 = (float) 0;
   bool logic_uScriptAct_SetCameraDepth_Out_229 = true;
   //pointer to script instanced logic node
   uScriptAct_SwitchCameras logic_uScriptAct_SwitchCameras_uScriptAct_SwitchCameras_230 = new uScriptAct_SwitchCameras( );
   UnityEngine.GameObject logic_uScriptAct_SwitchCameras_FromCamera_230 = null;
   UnityEngine.GameObject logic_uScriptAct_SwitchCameras_Target_230 = null;
   System.Boolean logic_uScriptAct_SwitchCameras_EnableAudioListener_230 = (bool) true;
   bool logic_uScriptAct_SwitchCameras_Out_230 = true;
   //pointer to script instanced logic node
   uScriptAct_UpdateCameraOrbit logic_uScriptAct_UpdateCameraOrbit_uScriptAct_UpdateCameraOrbit_231 = new uScriptAct_UpdateCameraOrbit( );
   UnityEngine.Camera logic_uScriptAct_UpdateCameraOrbit_Camera_231 = null;
   UnityEngine.Vector3 logic_uScriptAct_UpdateCameraOrbit_Target_231 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_UpdateCameraOrbit_Distance_231 = (float) 5;
   UnityEngine.Vector2 logic_uScriptAct_UpdateCameraOrbit_Movement_231 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_UpdateCameraOrbit_Speed_231 = new Vector2( (float)2, (float)2 );
   System.Boolean logic_uScriptAct_UpdateCameraOrbit_ConstrainAngles_231 = (bool) false;
   UnityEngine.Vector2 logic_uScriptAct_UpdateCameraOrbit_HorizontalRange_231 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_UpdateCameraOrbit_VerticalRange_231 = new Vector2( (float)0, (float)0 );
   bool logic_uScriptAct_UpdateCameraOrbit_Out_231 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadLevel logic_uScriptAct_LoadLevel_uScriptAct_LoadLevel_232 = new uScriptAct_LoadLevel( );
   System.String logic_uScriptAct_LoadLevel_name_232 = "";
   System.Boolean logic_uScriptAct_LoadLevel_destroyOtherObjects_232 = (bool) true;
   System.Boolean logic_uScriptAct_LoadLevel_blockUntilLoaded_232 = (bool) true;
   bool logic_uScriptAct_LoadLevel_Out_232 = true;
   //pointer to script instanced logic node
   uScriptAct_LoadLevelByIndex logic_uScriptAct_LoadLevelByIndex_uScriptAct_LoadLevelByIndex_233 = new uScriptAct_LoadLevelByIndex( );
   System.Int32 logic_uScriptAct_LoadLevelByIndex_index_233 = (int) 0;
   System.Boolean logic_uScriptAct_LoadLevelByIndex_destroyOtherObjects_233 = (bool) true;
   System.Boolean logic_uScriptAct_LoadLevelByIndex_blockUntilLoaded_233 = (bool) true;
   bool logic_uScriptAct_LoadLevelByIndex_Out_233 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_234 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_234 = "";
   System.Object[] logic_uScriptAct_Log_Target_234 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_234 = "";
   bool logic_uScriptAct_Log_Out_234 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_235 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_235 = "";
   System.Object[] logic_uScriptAct_Log_Target_235 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_235 = "";
   bool logic_uScriptAct_Log_Out_235 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_236 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_236 = "";
   System.Object[] logic_uScriptAct_Log_Target_236 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_236 = "";
   bool logic_uScriptAct_Log_Out_236 = true;
   //pointer to script instanced logic node
   uScriptAct_Particles logic_uScriptAct_Particles_uScriptAct_Particles_237 = new uScriptAct_Particles( );
   UnityEngine.GameObject[] logic_uScriptAct_Particles_Target_237 = new UnityEngine.GameObject[] {};
   System.Boolean logic_uScriptAct_Particles_ClearParticles_237 = (bool) false;
   bool logic_uScriptAct_Particles_Out_237 = true;
   //pointer to script instanced logic node
   uScriptAct_AddForce logic_uScriptAct_AddForce_uScriptAct_AddForce_238 = new uScriptAct_AddForce( );
   UnityEngine.GameObject logic_uScriptAct_AddForce_Target_238 = null;
   UnityEngine.Vector3 logic_uScriptAct_AddForce_Force_238 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_AddForce_Scale_238 = (float) 0;
   System.Boolean logic_uScriptAct_AddForce_UseForceMode_238 = (bool) false;
   UnityEngine.ForceMode logic_uScriptAct_AddForce_ForceModeType_238 = UnityEngine.ForceMode.Force;
   bool logic_uScriptAct_AddForce_Out_238 = true;
   //pointer to script instanced logic node
   uScriptAct_AddRelativeForce logic_uScriptAct_AddRelativeForce_uScriptAct_AddRelativeForce_239 = new uScriptAct_AddRelativeForce( );
   UnityEngine.GameObject logic_uScriptAct_AddRelativeForce_Target_239 = null;
   UnityEngine.Vector3 logic_uScriptAct_AddRelativeForce_Force_239 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_AddRelativeForce_Scale_239 = (float) 0;
   System.Boolean logic_uScriptAct_AddRelativeForce_UseForceMode_239 = (bool) false;
   UnityEngine.ForceMode logic_uScriptAct_AddRelativeForce_ForceModeType_239 = UnityEngine.ForceMode.Force;
   bool logic_uScriptAct_AddRelativeForce_Out_239 = true;
   //pointer to script instanced logic node
   uScriptAct_AddRelativeTorque logic_uScriptAct_AddRelativeTorque_uScriptAct_AddRelativeTorque_240 = new uScriptAct_AddRelativeTorque( );
   UnityEngine.GameObject logic_uScriptAct_AddRelativeTorque_Target_240 = null;
   UnityEngine.Vector3 logic_uScriptAct_AddRelativeTorque_Force_240 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_AddRelativeTorque_Scale_240 = (float) 0;
   System.Boolean logic_uScriptAct_AddRelativeTorque_UseForceMode_240 = (bool) false;
   UnityEngine.ForceMode logic_uScriptAct_AddRelativeTorque_ForceModeType_240 = UnityEngine.ForceMode.Force;
   bool logic_uScriptAct_AddRelativeTorque_Out_240 = true;
   //pointer to script instanced logic node
   uScriptAct_AddTorque logic_uScriptAct_AddTorque_uScriptAct_AddTorque_241 = new uScriptAct_AddTorque( );
   UnityEngine.GameObject logic_uScriptAct_AddTorque_Target_241 = null;
   UnityEngine.Vector3 logic_uScriptAct_AddTorque_Force_241 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_AddTorque_Scale_241 = (float) 0;
   System.Boolean logic_uScriptAct_AddTorque_UseForceMode_241 = (bool) false;
   UnityEngine.ForceMode logic_uScriptAct_AddTorque_ForceModeType_241 = UnityEngine.ForceMode.Force;
   bool logic_uScriptAct_AddTorque_Out_241 = true;
   //pointer to script instanced logic node
   uScriptAct_CheckLayerCollision logic_uScriptAct_CheckLayerCollision_uScriptAct_CheckLayerCollision_242 = new uScriptAct_CheckLayerCollision( );
   UnityEngine.LayerMask logic_uScriptAct_CheckLayerCollision_LayerA_242 = 1;
   UnityEngine.LayerMask logic_uScriptAct_CheckLayerCollision_LayerB_242 = 1;
   System.Boolean logic_uScriptAct_CheckLayerCollision_Result_242;
   bool logic_uScriptAct_CheckLayerCollision_Out_242 = true;
   //pointer to script instanced logic node
   uScriptAct_GetGravity logic_uScriptAct_GetGravity_uScriptAct_GetGravity_243 = new uScriptAct_GetGravity( );
   UnityEngine.Vector3 logic_uScriptAct_GetGravity_Gravity_243;
   bool logic_uScriptAct_GetGravity_Out_243 = true;
   //pointer to script instanced logic node
   uScriptAct_GetRigidbodyVelocity logic_uScriptAct_GetRigidbodyVelocity_uScriptAct_GetRigidbodyVelocity_244 = new uScriptAct_GetRigidbodyVelocity( );
   UnityEngine.GameObject logic_uScriptAct_GetRigidbodyVelocity_Target_244 = null;
   UnityEngine.Vector3 logic_uScriptAct_GetRigidbodyVelocity_Velocity_244;
   System.Single logic_uScriptAct_GetRigidbodyVelocity_Magnitude_244;
   bool logic_uScriptAct_GetRigidbodyVelocity_Out_244 = true;
   //pointer to script instanced logic node
   uScriptAct_IgnoreCollision logic_uScriptAct_IgnoreCollision_uScriptAct_IgnoreCollision_245 = new uScriptAct_IgnoreCollision( );
   UnityEngine.GameObject logic_uScriptAct_IgnoreCollision_A_245 = null;
   UnityEngine.GameObject logic_uScriptAct_IgnoreCollision_B_245 = null;
   System.Boolean logic_uScriptAct_IgnoreCollision_Ignore_245 = (bool) true;
   bool logic_uScriptAct_IgnoreCollision_Out_245 = true;
   //pointer to script instanced logic node
   uScriptAct_IgnoreLayerCollision logic_uScriptAct_IgnoreLayerCollision_uScriptAct_IgnoreLayerCollision_246 = new uScriptAct_IgnoreLayerCollision( );
   UnityEngine.LayerMask logic_uScriptAct_IgnoreLayerCollision_LayerA_246 = 1;
   UnityEngine.LayerMask logic_uScriptAct_IgnoreLayerCollision_LayerB_246 = 1;
   System.Boolean logic_uScriptAct_IgnoreLayerCollision_Ignore_246 = (bool) true;
   bool logic_uScriptAct_IgnoreLayerCollision_Out_246 = true;
   //pointer to script instanced logic node
   uScriptAct_Raycast logic_uScriptAct_Raycast_uScriptAct_Raycast_247 = new uScriptAct_Raycast( );
   System.Object logic_uScriptAct_Raycast_Start_247 = "";
   System.Object logic_uScriptAct_Raycast_End_247 = "";
   UnityEngine.LayerMask logic_uScriptAct_Raycast_layerMask_247 = 1;
   System.Boolean logic_uScriptAct_Raycast_include_247 = (bool) true;
   System.Boolean logic_uScriptAct_Raycast_showRay_247 = (bool) false;
   UnityEngine.GameObject logic_uScriptAct_Raycast_HitObject_247;
   System.Single logic_uScriptAct_Raycast_HitDistance_247;
   UnityEngine.Vector3 logic_uScriptAct_Raycast_HitLocation_247;
   UnityEngine.Vector3 logic_uScriptAct_Raycast_HitNormal_247;
   bool logic_uScriptAct_Raycast_NotObstructed_247 = true;
   bool logic_uScriptAct_Raycast_Obstructed_247 = true;
   //pointer to script instanced logic node
   uScriptAct_RaycastFromCamera logic_uScriptAct_RaycastFromCamera_uScriptAct_RaycastFromCamera_248 = new uScriptAct_RaycastFromCamera( );
   UnityEngine.Camera logic_uScriptAct_RaycastFromCamera_Camera_248 = null;
   System.Int32 logic_uScriptAct_RaycastFromCamera_Offset_X_248 = (int) 0;
   System.Int32 logic_uScriptAct_RaycastFromCamera_Offset_Y_248 = (int) 0;
   System.Single logic_uScriptAct_RaycastFromCamera_Distance_248 = (float) 100;
   UnityEngine.LayerMask logic_uScriptAct_RaycastFromCamera_layerMask_248 = 1;
   System.Boolean logic_uScriptAct_RaycastFromCamera_include_248 = (bool) true;
   System.Boolean logic_uScriptAct_RaycastFromCamera_showRay_248 = (bool) false;
   UnityEngine.GameObject logic_uScriptAct_RaycastFromCamera_HitObject_248;
   System.Single logic_uScriptAct_RaycastFromCamera_HitDistance_248;
   UnityEngine.Vector3 logic_uScriptAct_RaycastFromCamera_HitLocation_248;
   UnityEngine.Vector3 logic_uScriptAct_RaycastFromCamera_HitNormal_248;
   bool logic_uScriptAct_RaycastFromCamera_NotObstructed_248 = true;
   bool logic_uScriptAct_RaycastFromCamera_Obstructed_248 = true;
   //pointer to script instanced logic node
   uScriptAct_RaycastFromCursor logic_uScriptAct_RaycastFromCursor_uScriptAct_RaycastFromCursor_249 = new uScriptAct_RaycastFromCursor( );
   UnityEngine.Camera logic_uScriptAct_RaycastFromCursor_Camera_249 = null;
   System.Single logic_uScriptAct_RaycastFromCursor_Distance_249 = (float) 100;
   UnityEngine.LayerMask logic_uScriptAct_RaycastFromCursor_layerMask_249 = 1;
   System.Boolean logic_uScriptAct_RaycastFromCursor_include_249 = (bool) true;
   System.Boolean logic_uScriptAct_RaycastFromCursor_showRay_249 = (bool) false;
   UnityEngine.GameObject logic_uScriptAct_RaycastFromCursor_HitObject_249;
   System.Single logic_uScriptAct_RaycastFromCursor_HitDistance_249;
   UnityEngine.Vector3 logic_uScriptAct_RaycastFromCursor_HitLocation_249;
   UnityEngine.Vector3 logic_uScriptAct_RaycastFromCursor_HitNormal_249;
   bool logic_uScriptAct_RaycastFromCursor_NotObstructed_249 = true;
   bool logic_uScriptAct_RaycastFromCursor_Obstructed_249 = true;
   //pointer to script instanced logic node
   uScriptAct_RaycastFromScreenPoint logic_uScriptAct_RaycastFromScreenPoint_uScriptAct_RaycastFromScreenPoint_250 = new uScriptAct_RaycastFromScreenPoint( );
   UnityEngine.Camera logic_uScriptAct_RaycastFromScreenPoint_Camera_250 = null;
   UnityEngine.Vector2 logic_uScriptAct_RaycastFromScreenPoint_ScreenPosition_250 = new Vector2( (float)0, (float)0 );
   System.Single logic_uScriptAct_RaycastFromScreenPoint_Distance_250 = (float) 100;
   UnityEngine.LayerMask logic_uScriptAct_RaycastFromScreenPoint_layerMask_250 = 1;
   System.Boolean logic_uScriptAct_RaycastFromScreenPoint_include_250 = (bool) true;
   System.Boolean logic_uScriptAct_RaycastFromScreenPoint_showRay_250 = (bool) false;
   UnityEngine.GameObject logic_uScriptAct_RaycastFromScreenPoint_HitObject_250;
   System.Single logic_uScriptAct_RaycastFromScreenPoint_HitDistance_250;
   UnityEngine.Vector3 logic_uScriptAct_RaycastFromScreenPoint_HitLocation_250;
   UnityEngine.Vector3 logic_uScriptAct_RaycastFromScreenPoint_HitNormal_250;
   bool logic_uScriptAct_RaycastFromScreenPoint_NotObstructed_250 = true;
   bool logic_uScriptAct_RaycastFromScreenPoint_Obstructed_250 = true;
   //pointer to script instanced logic node
   uScriptAct_SetGravity logic_uScriptAct_SetGravity_uScriptAct_SetGravity_251 = new uScriptAct_SetGravity( );
   UnityEngine.Vector3 logic_uScriptAct_SetGravity_Gravity_251 = new Vector3( (float)0, (float)0, (float)0 );
   bool logic_uScriptAct_SetGravity_Out_251 = true;
   //pointer to script instanced logic node
   uScriptAct_SetJointDrive logic_uScriptAct_SetJointDrive_uScriptAct_SetJointDrive_252 = new uScriptAct_SetJointDrive( );
   UnityEngine.JointDriveMode logic_uScriptAct_SetJointDrive_mode_252 = UnityEngine.JointDriveMode.None;
   System.Single logic_uScriptAct_SetJointDrive_positionSpring_252 = (float) 0;
   System.Single logic_uScriptAct_SetJointDrive_positionDamper_252 = (float) 0;
   System.Single logic_uScriptAct_SetJointDrive_maximumForce_252 = (float) 0;
   UnityEngine.JointDrive logic_uScriptAct_SetJointDrive_jointDrive_252;
   bool logic_uScriptAct_SetJointDrive_Out_252 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRigidbodyVelocity logic_uScriptAct_SetRigidbodyVelocity_uScriptAct_SetRigidbodyVelocity_253 = new uScriptAct_SetRigidbodyVelocity( );
   UnityEngine.GameObject[] logic_uScriptAct_SetRigidbodyVelocity_Target_253 = new UnityEngine.GameObject[] {};
   UnityEngine.Vector3 logic_uScriptAct_SetRigidbodyVelocity_Velocity_253 = new Vector3( (float)0, (float)0, (float)0 );
   bool logic_uScriptAct_SetRigidbodyVelocity_Out_253 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_254 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_254 = "";
   System.Object[] logic_uScriptAct_Log_Target_254 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_254 = "";
   bool logic_uScriptAct_Log_Out_254 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_255 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_255 = "";
   System.Object[] logic_uScriptAct_Log_Target_255 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_255 = "";
   bool logic_uScriptAct_Log_Out_255 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_256 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_256 = "";
   System.Object[] logic_uScriptAct_Log_Target_256 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_256 = "";
   bool logic_uScriptAct_Log_Out_256 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_257 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_257 = "";
   System.Object[] logic_uScriptAct_Log_Target_257 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_257 = "";
   bool logic_uScriptAct_Log_Out_257 = true;
   //pointer to script instanced logic node
   uScriptAct_GetMousePosition logic_uScriptAct_GetMousePosition_uScriptAct_GetMousePosition_258 = new uScriptAct_GetMousePosition( );
   System.Boolean logic_uScriptAct_GetMousePosition_InvertY_258 = (bool) true;
   UnityEngine.Vector2 logic_uScriptAct_GetMousePosition_positionV2_258;
   System.Single logic_uScriptAct_GetMousePosition_XPosition_258;
   System.Single logic_uScriptAct_GetMousePosition_YPosition_258;
   UnityEngine.Vector3 logic_uScriptAct_GetMousePosition_position_258;
   bool logic_uScriptAct_GetMousePosition_Out_258 = true;
   //pointer to script instanced logic node
   uScriptAct_GetScreenSize logic_uScriptAct_GetScreenSize_uScriptAct_GetScreenSize_259 = new uScriptAct_GetScreenSize( );
   System.Int32 logic_uScriptAct_GetScreenSize_ScreenWidth_259;
   System.Int32 logic_uScriptAct_GetScreenSize_ScreenHeight_259;
   System.Single logic_uScriptAct_GetScreenSize_fScreenWidth_259;
   System.Single logic_uScriptAct_GetScreenSize_fScreenHeight_259;
   UnityEngine.Rect logic_uScriptAct_GetScreenSize_ScreenRect_259;
   UnityEngine.Vector2 logic_uScriptAct_GetScreenSize_ScreenCenter_259;
   bool logic_uScriptAct_GetScreenSize_Out_259 = true;
   //pointer to script instanced logic node
   uScriptAct_LockMouseCursor logic_uScriptAct_LockMouseCursor_uScriptAct_LockMouseCursor_260 = new uScriptAct_LockMouseCursor( );
   System.Boolean logic_uScriptAct_LockMouseCursor_Lock_260 = (bool) false;
   bool logic_uScriptAct_LockMouseCursor_Out_260 = true;
   //pointer to script instanced logic node
   uScriptAct_ShowMouseCursor logic_uScriptAct_ShowMouseCursor_uScriptAct_ShowMouseCursor_261 = new uScriptAct_ShowMouseCursor( );
   System.Boolean logic_uScriptAct_ShowMouseCursor_show_261 = (bool) true;
   bool logic_uScriptAct_ShowMouseCursor_Out_261 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_262 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_262 = "";
   System.Object[] logic_uScriptAct_Log_Target_262 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_262 = "";
   bool logic_uScriptAct_Log_Out_262 = true;
   //pointer to script instanced logic node
   uScriptAct_CountTime logic_uScriptAct_CountTime_uScriptAct_CountTime_264 = new uScriptAct_CountTime( );
   System.Single logic_uScriptAct_CountTime_Seconds_264;
   bool logic_uScriptAct_CountTime_Out_264 = true;
   bool logic_uScriptAct_CountTime_Started_264 = true;
   bool logic_uScriptAct_CountTime_Stopped_264 = true;
   //pointer to script instanced logic node
   uScriptAct_Delay logic_uScriptAct_Delay_uScriptAct_Delay_265 = new uScriptAct_Delay( );
   System.Single logic_uScriptAct_Delay_Duration_265 = (float) 0;
   System.Boolean logic_uScriptAct_Delay_SingleFrame_265 = (bool) false;
   bool logic_uScriptAct_Delay_Immediate_265 = true;
   bool logic_uScriptAct_Delay_AfterDelay_265 = true;
   bool logic_uScriptAct_Delay_Stopped_265 = true;
   bool logic_uScriptAct_Delay_DrivenDelay_265 = false;
   //pointer to script instanced logic node
   uScriptAct_GetDeltaTime logic_uScriptAct_GetDeltaTime_uScriptAct_GetDeltaTime_266 = new uScriptAct_GetDeltaTime( );
   System.Single logic_uScriptAct_GetDeltaTime_DeltaTime_266;
   System.Single logic_uScriptAct_GetDeltaTime_SmoothDeltaTime_266;
   System.Single logic_uScriptAct_GetDeltaTime_FixedDeltaTime_266;
   bool logic_uScriptAct_GetDeltaTime_Out_266 = true;
   //pointer to script instanced logic node
   uScriptAct_GetGameTime logic_uScriptAct_GetGameTime_uScriptAct_GetGameTime_267 = new uScriptAct_GetGameTime( );
   System.Single logic_uScriptAct_GetGameTime_CurrentScale_267;
   System.Single logic_uScriptAct_GetGameTime_FixedDelta_267;
   System.Single logic_uScriptAct_GetGameTime_MaxAllowedTimestep_267;
   bool logic_uScriptAct_GetGameTime_Out_267 = true;
   //pointer to script instanced logic node
   uScriptAct_GetRunTime logic_uScriptAct_GetRunTime_uScriptAct_GetRunTime_268 = new uScriptAct_GetRunTime( );
   System.Single logic_uScriptAct_GetRunTime_RunTime_268;
   System.Single logic_uScriptAct_GetRunTime_FixedRunTime_268;
   bool logic_uScriptAct_GetRunTime_Out_268 = true;
   //pointer to script instanced logic node
   uScriptAct_GetSystemDate logic_uScriptAct_GetSystemDate_uScriptAct_GetSystemDate_269 = new uScriptAct_GetSystemDate( );
   System.String logic_uScriptAct_GetSystemDate_FullDate_269;
   System.String logic_uScriptAct_GetSystemDate_Day_269;
   System.Int32 logic_uScriptAct_GetSystemDate_DayOfMonth_269;
   System.Int32 logic_uScriptAct_GetSystemDate_Month_269;
   System.Int32 logic_uScriptAct_GetSystemDate_Year_269;
   bool logic_uScriptAct_GetSystemDate_Out_269 = true;
   //pointer to script instanced logic node
   uScriptAct_GetSystemTime logic_uScriptAct_GetSystemTime_uScriptAct_GetSystemTime_270 = new uScriptAct_GetSystemTime( );
   System.String logic_uScriptAct_GetSystemTime_FullTime_270;
   System.String logic_uScriptAct_GetSystemTime_FullTimeUTC_270;
   System.Int32 logic_uScriptAct_GetSystemTime_Hour_270;
   System.Int32 logic_uScriptAct_GetSystemTime_Minute_270;
   System.Int32 logic_uScriptAct_GetSystemTime_Second_270;
   System.Int32 logic_uScriptAct_GetSystemTime_Millisecond_270;
   bool logic_uScriptAct_GetSystemTime_Out_270 = true;
   //pointer to script instanced logic node
   uScriptAct_SetGameTime logic_uScriptAct_SetGameTime_uScriptAct_SetGameTime_271 = new uScriptAct_SetGameTime( );
   System.Single logic_uScriptAct_SetGameTime_TimeScale_271 = (float) 1;
   System.Single logic_uScriptAct_SetGameTime_FixedTimestep_271 = (float) 0.02;
   System.Single logic_uScriptAct_SetGameTime_MaxAllowedTimestep_271 = (float) 0.3333333;
   bool logic_uScriptAct_SetGameTime_Out_271 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_273 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_273 = "";
   System.Object[] logic_uScriptAct_Log_Target_273 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_273 = "";
   bool logic_uScriptAct_Log_Out_273 = true;
   //pointer to script instanced logic node
   uScriptAct_OnInputEventFilter logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_276 = new uScriptAct_OnInputEventFilter( );
   UnityEngine.KeyCode logic_uScriptAct_OnInputEventFilter_KeyCode_276 = UnityEngine.KeyCode.None;
   bool logic_uScriptAct_OnInputEventFilter_KeyDown_276 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyHeld_276 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyUp_276 = true;
   //pointer to script instanced logic node
   uScriptAct_Toggle logic_uScriptAct_Toggle_uScriptAct_Toggle_277 = new uScriptAct_Toggle( );
   UnityEngine.GameObject[] logic_uScriptAct_Toggle_Target_277 = new UnityEngine.GameObject[] {};
   System.Boolean logic_uScriptAct_Toggle_IgnoreChildren_277 = (bool) false;
   bool logic_uScriptAct_Toggle_Out_277 = true;
   //pointer to script instanced logic node
   uScriptAct_ToggleBool logic_uScriptAct_ToggleBool_uScriptAct_ToggleBool_278 = new uScriptAct_ToggleBool( );
   System.Boolean logic_uScriptAct_ToggleBool_Target_278 = (bool) false;
   System.Boolean logic_uScriptAct_ToggleBool_Result_278;
   bool logic_uScriptAct_ToggleBool_Out_278 = true;
   //pointer to script instanced logic node
   uScriptAct_ToggleComponent logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279 = new uScriptAct_ToggleComponent( );
   UnityEngine.GameObject[] logic_uScriptAct_ToggleComponent_Target_279 = new UnityEngine.GameObject[] {};
   System.String[] logic_uScriptAct_ToggleComponent_ComponentName_279 = new System.String[] {};
   bool logic_uScriptAct_ToggleComponent_Out_279 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_280 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_280 = "";
   System.Object[] logic_uScriptAct_Log_Target_280 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_280 = "";
   bool logic_uScriptAct_Log_Out_280 = true;
   //pointer to script instanced logic node
   uScriptAct_CaptureScreenshot logic_uScriptAct_CaptureScreenshot_uScriptAct_CaptureScreenshot_281 = new uScriptAct_CaptureScreenshot( );
   System.String logic_uScriptAct_CaptureScreenshot_FileName_281 = "";
   System.String logic_uScriptAct_CaptureScreenshot_Path_281 = "";
   System.Boolean logic_uScriptAct_CaptureScreenshot_RelativeToDataFolder_281 = (bool) true;
   System.Boolean logic_uScriptAct_CaptureScreenshot_AppendNumber_281 = (bool) false;
   System.String logic_uScriptAct_CaptureScreenshot_FileSaved_281;
   bool logic_uScriptAct_CaptureScreenshot_Out_281 = true;
   //pointer to script instanced logic node
   uScriptAct_GetObjectFromList logic_uScriptAct_GetObjectFromList_uScriptAct_GetObjectFromList_282 = new uScriptAct_GetObjectFromList( );
   System.Object[] logic_uScriptAct_GetObjectFromList_list_282 = new System.Object[] {};
   System.Int32 logic_uScriptAct_GetObjectFromList_index_282 = (int) 0;
   System.Object logic_uScriptAct_GetObjectFromList_item_282;
   bool logic_uScriptAct_GetObjectFromList_Out_282 = true;
   //pointer to script instanced logic node
   uScriptAct_OutputFramesPerSecond logic_uScriptAct_OutputFramesPerSecond_uScriptAct_OutputFramesPerSecond_283 = new uScriptAct_OutputFramesPerSecond( );
   System.Single logic_uScriptAct_OutputFramesPerSecond_FPS_283;
   bool logic_uScriptAct_OutputFramesPerSecond_Out_283 = true;
   //pointer to script instanced logic node
   uScriptAct_ShuffleList logic_uScriptAct_ShuffleList_uScriptAct_ShuffleList_284 = new uScriptAct_ShuffleList( );
   System.Object[] logic_uScriptAct_ShuffleList_list_284 = new System.Object[] {};
   System.Object[] logic_uScriptAct_ShuffleList_shuffled_284;
   bool logic_uScriptAct_ShuffleList_Out_284 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_285 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_285 = "";
   System.Object[] logic_uScriptAct_Log_Target_285 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_285 = "";
   bool logic_uScriptAct_Log_Out_285 = true;
   //pointer to script instanced logic node
   uScriptAct_SetBool logic_uScriptAct_SetBool_uScriptAct_SetBool_286 = new uScriptAct_SetBool( );
   System.Boolean logic_uScriptAct_SetBool_Target_286;
   bool logic_uScriptAct_SetBool_Out_286 = true;
   bool logic_uScriptAct_SetBool_SetTrue_286 = true;
   bool logic_uScriptAct_SetBool_SetFalse_286 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomBool logic_uScriptAct_SetRandomBool_uScriptAct_SetRandomBool_288 = new uScriptAct_SetRandomBool( );
   System.Boolean logic_uScriptAct_SetRandomBool_TargetBool_288;
   bool logic_uScriptAct_SetRandomBool_Out_288 = true;
   //pointer to script instanced logic node
   uScriptAct_GetComponentsColor logic_uScriptAct_GetComponentsColor_uScriptAct_GetComponentsColor_289 = new uScriptAct_GetComponentsColor( );
   UnityEngine.Color logic_uScriptAct_GetComponentsColor_InputColor_289 = UnityEngine.Color.black;
   System.Single logic_uScriptAct_GetComponentsColor_Red_289;
   System.Single logic_uScriptAct_GetComponentsColor_Green_289;
   System.Single logic_uScriptAct_GetComponentsColor_Blue_289;
   System.Single logic_uScriptAct_GetComponentsColor_Alpha_289;
   bool logic_uScriptAct_GetComponentsColor_Out_289 = true;
   //pointer to script instanced logic node
   uScriptAct_SetColor logic_uScriptAct_SetColor_uScriptAct_SetColor_290 = new uScriptAct_SetColor( );
   UnityEngine.Color logic_uScriptAct_SetColor_Value_290 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   UnityEngine.Color logic_uScriptAct_SetColor_TargetColor_290;
   bool logic_uScriptAct_SetColor_Out_290 = true;
   //pointer to script instanced logic node
   uScriptAct_SetColorAlpha logic_uScriptAct_SetColorAlpha_uScriptAct_SetColorAlpha_291 = new uScriptAct_SetColorAlpha( );
   UnityEngine.Color logic_uScriptAct_SetColorAlpha_Value_291 = UnityEngine.Color.black;
   System.Single logic_uScriptAct_SetColorAlpha_Alpha_291 = (float) 0;
   System.Boolean logic_uScriptAct_SetColorAlpha_Use8bitRange_291 = (bool) false;
   UnityEngine.Color logic_uScriptAct_SetColorAlpha_TargetColor_291;
   bool logic_uScriptAct_SetColorAlpha_Out_291 = true;
   //pointer to script instanced logic node
   uScriptAct_SetComponentsColor logic_uScriptAct_SetComponentsColor_uScriptAct_SetComponentsColor_292 = new uScriptAct_SetComponentsColor( );
   System.Single logic_uScriptAct_SetComponentsColor_RedValue_292 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsColor_GreenValue_292 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsColor_BlueValue_292 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsColor_AlphaValue_292 = (float) 0;
   System.Boolean logic_uScriptAct_SetComponentsColor_Use8bitRange_292 = (bool) false;
   UnityEngine.Color logic_uScriptAct_SetComponentsColor_TargetColor_292;
   bool logic_uScriptAct_SetComponentsColor_Out_292 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomColor logic_uScriptAct_SetRandomColor_uScriptAct_SetRandomColor_293 = new uScriptAct_SetRandomColor( );
   System.Single logic_uScriptAct_SetRandomColor_RedMin_293 = (float) 0;
   System.Single logic_uScriptAct_SetRandomColor_RedMax_293 = (float) 1;
   System.Single logic_uScriptAct_SetRandomColor_GreenMin_293 = (float) 0;
   System.Single logic_uScriptAct_SetRandomColor_GreenMax_293 = (float) 1;
   System.Single logic_uScriptAct_SetRandomColor_BlueMin_293 = (float) 0;
   System.Single logic_uScriptAct_SetRandomColor_BlueMax_293 = (float) 1;
   System.Single logic_uScriptAct_SetRandomColor_AlphaMin_293 = (float) 1;
   System.Single logic_uScriptAct_SetRandomColor_AlphaMax_293 = (float) 1;
   UnityEngine.Color logic_uScriptAct_SetRandomColor_TargetColor_293;
   bool logic_uScriptAct_SetRandomColor_Out_293 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_295 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_295 = "";
   System.Object[] logic_uScriptAct_Log_Target_295 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_295 = "";
   bool logic_uScriptAct_Log_Out_295 = true;
   //pointer to script instanced logic node
   uScriptAct_SetFloat logic_uScriptAct_SetFloat_uScriptAct_SetFloat_297 = new uScriptAct_SetFloat( );
   System.Single logic_uScriptAct_SetFloat_Value_297 = (float) 0;
   System.Single logic_uScriptAct_SetFloat_Target_297;
   bool logic_uScriptAct_SetFloat_Out_297 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomFloat logic_uScriptAct_SetRandomFloat_uScriptAct_SetRandomFloat_298 = new uScriptAct_SetRandomFloat( );
   System.Single logic_uScriptAct_SetRandomFloat_Min_298 = (float) 0;
   System.Single logic_uScriptAct_SetRandomFloat_Max_298 = (float) 0;
   System.Single logic_uScriptAct_SetRandomFloat_TargetFloat_298;
   bool logic_uScriptAct_SetRandomFloat_Out_298 = true;
   //pointer to script instanced logic node
   uScriptAct_SetGameObject logic_uScriptAct_SetGameObject_uScriptAct_SetGameObject_299 = new uScriptAct_SetGameObject( );
   UnityEngine.GameObject logic_uScriptAct_SetGameObject_Value_299 = null;
   UnityEngine.GameObject logic_uScriptAct_SetGameObject_TargetGameObject_299;
   bool logic_uScriptAct_SetGameObject_Out_299 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomGameObject logic_uScriptAct_SetRandomGameObject_uScriptAct_SetRandomGameObject_300 = new uScriptAct_SetRandomGameObject( );
   UnityEngine.GameObject[] logic_uScriptAct_SetRandomGameObject_ObjectSet_300 = new UnityEngine.GameObject[] {};
   UnityEngine.GameObject logic_uScriptAct_SetRandomGameObject_TargetGameObject_300;
   bool logic_uScriptAct_SetRandomGameObject_Out_300 = true;
   //pointer to script instanced logic node
   uScriptAct_SetInt logic_uScriptAct_SetInt_uScriptAct_SetInt_304 = new uScriptAct_SetInt( );
   System.Int32 logic_uScriptAct_SetInt_Value_304 = (int) 0;
   System.Int32 logic_uScriptAct_SetInt_Target_304;
   bool logic_uScriptAct_SetInt_Out_304 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomInt logic_uScriptAct_SetRandomInt_uScriptAct_SetRandomInt_305 = new uScriptAct_SetRandomInt( );
   System.Int32 logic_uScriptAct_SetRandomInt_Min_305 = (int) 0;
   System.Int32 logic_uScriptAct_SetRandomInt_Max_305 = (int) 0;
   System.Int32 logic_uScriptAct_SetRandomInt_TargetInt_305;
   bool logic_uScriptAct_SetRandomInt_Out_305 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_306 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_306 = "";
   System.Object[] logic_uScriptAct_Log_Target_306 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_306 = "";
   bool logic_uScriptAct_Log_Out_306 = true;
   //pointer to script instanced logic node
   uScriptAct_SetQuaternion logic_uScriptAct_SetQuaternion_uScriptAct_SetQuaternion_308 = new uScriptAct_SetQuaternion( );
   UnityEngine.Quaternion logic_uScriptAct_SetQuaternion_Value_308 = new Quaternion( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Quaternion logic_uScriptAct_SetQuaternion_TargetQuaternion_308;
   bool logic_uScriptAct_SetQuaternion_Out_308 = true;
   //pointer to script instanced logic node
   uScriptAct_CreateRelativeRect logic_uScriptAct_CreateRelativeRect_uScriptAct_CreateRelativeRect_310 = new uScriptAct_CreateRelativeRect( );
   UnityEngine.Rect logic_uScriptAct_CreateRelativeRect_Target_310 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.Int32 logic_uScriptAct_CreateRelativeRect_RectWidth_310 = (int) 32;
   System.Int32 logic_uScriptAct_CreateRelativeRect_RectHeight_310 = (int) 32;
   uScriptAct_CreateRelativeRect.Position logic_uScriptAct_CreateRelativeRect_RectPosition_310 = uScriptAct_CreateRelativeRect.Position.TopLeft;
   System.Int32 logic_uScriptAct_CreateRelativeRect_xOffset_310 = (int) 0;
   System.Int32 logic_uScriptAct_CreateRelativeRect_yOffset_310 = (int) 0;
   UnityEngine.Rect logic_uScriptAct_CreateRelativeRect_OutputRect_310;
   bool logic_uScriptAct_CreateRelativeRect_Out_310 = true;
   //pointer to script instanced logic node
   uScriptAct_CreateRelativeRectMouse logic_uScriptAct_CreateRelativeRectMouse_uScriptAct_CreateRelativeRectMouse_311 = new uScriptAct_CreateRelativeRectMouse( );
   System.Int32 logic_uScriptAct_CreateRelativeRectMouse_RectWidth_311 = (int) 32;
   System.Int32 logic_uScriptAct_CreateRelativeRectMouse_RectHeight_311 = (int) 32;
   System.Int32 logic_uScriptAct_CreateRelativeRectMouse_xOffset_311 = (int) 0;
   System.Int32 logic_uScriptAct_CreateRelativeRectMouse_yOffset_311 = (int) 0;
   UnityEngine.Rect logic_uScriptAct_CreateRelativeRectMouse_OutputRect_311;
   bool logic_uScriptAct_CreateRelativeRectMouse_Out_311 = true;
   //pointer to script instanced logic node
   uScriptAct_GetComponentsRect logic_uScriptAct_GetComponentsRect_uScriptAct_GetComponentsRect_312 = new uScriptAct_GetComponentsRect( );
   UnityEngine.Rect logic_uScriptAct_GetComponentsRect_InputRect_312 = new Rect( );
   System.Single logic_uScriptAct_GetComponentsRect_Left_312;
   System.Single logic_uScriptAct_GetComponentsRect_Top_312;
   System.Single logic_uScriptAct_GetComponentsRect_Width_312;
   System.Single logic_uScriptAct_GetComponentsRect_Height_312;
   bool logic_uScriptAct_GetComponentsRect_Out_312 = true;
   //pointer to script instanced logic node
   uScriptAct_SetComponentsRect logic_uScriptAct_SetComponentsRect_uScriptAct_SetComponentsRect_313 = new uScriptAct_SetComponentsRect( );
   System.Single logic_uScriptAct_SetComponentsRect_Left_313 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsRect_Top_313 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsRect_Width_313 = (float) 32;
   System.Single logic_uScriptAct_SetComponentsRect_Height_313 = (float) 32;
   UnityEngine.Rect logic_uScriptAct_SetComponentsRect_OutputRect_313;
   bool logic_uScriptAct_SetComponentsRect_Out_313 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRect logic_uScriptAct_SetRect_uScriptAct_SetRect_314 = new uScriptAct_SetRect( );
   UnityEngine.Rect logic_uScriptAct_SetRect_Value_314 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Rect logic_uScriptAct_SetRect_TargetRect_314;
   bool logic_uScriptAct_SetRect_Out_314 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_316 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_316 = "";
   System.Object[] logic_uScriptAct_Log_Target_316 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_316 = "";
   bool logic_uScriptAct_Log_Out_316 = true;
   //pointer to script instanced logic node
   uScriptAct_ChangeCase logic_uScriptAct_ChangeCase_uScriptAct_ChangeCase_317 = new uScriptAct_ChangeCase( );
   System.String logic_uScriptAct_ChangeCase_Target_317 = "";
   uScriptAct_ChangeCase.CaseType logic_uScriptAct_ChangeCase_caseType_317 = uScriptAct_ChangeCase.CaseType.Upper;
   System.String logic_uScriptAct_ChangeCase_Result_317;
   bool logic_uScriptAct_ChangeCase_Out_317 = true;
   //pointer to script instanced logic node
   uScriptAct_Concatenate logic_uScriptAct_Concatenate_uScriptAct_Concatenate_318 = new uScriptAct_Concatenate( );
   System.Object[] logic_uScriptAct_Concatenate_A_318 = new System.Object[] {};
   System.Object[] logic_uScriptAct_Concatenate_B_318 = new System.Object[] {};
   System.String logic_uScriptAct_Concatenate_Separator_318 = "";
   System.String logic_uScriptAct_Concatenate_Result_318;
   bool logic_uScriptAct_Concatenate_Out_318 = true;
   //pointer to script instanced logic node
   uScriptAct_GetStringLength logic_uScriptAct_GetStringLength_uScriptAct_GetStringLength_319 = new uScriptAct_GetStringLength( );
   System.String logic_uScriptAct_GetStringLength_Target_319 = "";
   System.Int32 logic_uScriptAct_GetStringLength_IntValue_319;
   System.Single logic_uScriptAct_GetStringLength_FloatValue_319;
   System.String logic_uScriptAct_GetStringLength_StringValue_319;
   bool logic_uScriptAct_GetStringLength_Out_319 = true;
   //pointer to script instanced logic node
   uScriptAct_GetSubString logic_uScriptAct_GetSubString_uScriptAct_GetSubString_320 = new uScriptAct_GetSubString( );
   System.String logic_uScriptAct_GetSubString_Target_320 = "";
   System.Int32 logic_uScriptAct_GetSubString_StartPos_320 = (int) 0;
   System.Int32 logic_uScriptAct_GetSubString_StringLength_320 = (int) 0;
   System.String logic_uScriptAct_GetSubString_Result_320;
   bool logic_uScriptAct_GetSubString_Out_320 = true;
   //pointer to script instanced logic node
   uScriptAct_PadString logic_uScriptAct_PadString_uScriptAct_PadString_321 = new uScriptAct_PadString( );
   System.String logic_uScriptAct_PadString_Target_321 = "";
   uScriptAct_PadString.PadSide logic_uScriptAct_PadString_padSide_321 = uScriptAct_PadString.PadSide.Left;
   System.Int32 logic_uScriptAct_PadString_TotalWidth_321 = (int) 0;
   System.String logic_uScriptAct_PadString_padCharString_321 = "";
   System.String logic_uScriptAct_PadString_Result_321;
   bool logic_uScriptAct_PadString_Out_321 = true;
   //pointer to script instanced logic node
   uScriptAct_ReplaceCharacters logic_uScriptAct_ReplaceCharacters_uScriptAct_ReplaceCharacters_322 = new uScriptAct_ReplaceCharacters( );
   System.String logic_uScriptAct_ReplaceCharacters_Target_322 = "";
   System.String logic_uScriptAct_ReplaceCharacters_OldChars_322 = "";
   System.String logic_uScriptAct_ReplaceCharacters_NewChars_322 = "";
   System.String logic_uScriptAct_ReplaceCharacters_Result_322;
   bool logic_uScriptAct_ReplaceCharacters_Out_322 = true;
   //pointer to script instanced logic node
   uScriptAct_SetString logic_uScriptAct_SetString_uScriptAct_SetString_323 = new uScriptAct_SetString( );
   System.String logic_uScriptAct_SetString_Value_323 = "";
   System.Boolean logic_uScriptAct_SetString_ToUpperCase_323 = (bool) false;
   System.Boolean logic_uScriptAct_SetString_ToLowerCase_323 = (bool) false;
   System.Boolean logic_uScriptAct_SetString_TrimWhitespace_323 = (bool) false;
   System.String logic_uScriptAct_SetString_Target_323;
   bool logic_uScriptAct_SetString_Out_323 = true;
   //pointer to script instanced logic node
   uScriptAct_TrimString logic_uScriptAct_TrimString_uScriptAct_TrimString_324 = new uScriptAct_TrimString( );
   System.String logic_uScriptAct_TrimString_Target_324 = "";
   uScriptAct_TrimString.TrimType logic_uScriptAct_TrimString_trimType_324 = uScriptAct_TrimString.TrimType.Both;
   System.String logic_uScriptAct_TrimString_trimChars_324 = "";
   System.String logic_uScriptAct_TrimString_Result_324;
   bool logic_uScriptAct_TrimString_Out_324 = true;
   //pointer to script instanced logic node
   uScriptAct_SetTexture2D logic_uScriptAct_SetTexture2D_uScriptAct_SetTexture2D_326 = new uScriptAct_SetTexture2D( );
   UnityEngine.Texture2D logic_uScriptAct_SetTexture2D_Value_326 = null;
   UnityEngine.Texture2D logic_uScriptAct_SetTexture2D_Target_326;
   bool logic_uScriptAct_SetTexture2D_Out_326 = true;
   //pointer to script instanced logic node
   uScriptAct_GetComponentsVector2 logic_uScriptAct_GetComponentsVector2_uScriptAct_GetComponentsVector2_327 = new uScriptAct_GetComponentsVector2( );
   UnityEngine.Vector2 logic_uScriptAct_GetComponentsVector2_InputVector2_327 = new Vector2( (float)0, (float)0 );
   System.Single logic_uScriptAct_GetComponentsVector2_X_327;
   System.Single logic_uScriptAct_GetComponentsVector2_Y_327;
   bool logic_uScriptAct_GetComponentsVector2_Out_327 = true;
   //pointer to script instanced logic node
   uScriptAct_SetComponentsVector2 logic_uScriptAct_SetComponentsVector2_uScriptAct_SetComponentsVector2_328 = new uScriptAct_SetComponentsVector2( );
   System.Single logic_uScriptAct_SetComponentsVector2_X_328 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsVector2_Y_328 = (float) 0;
   UnityEngine.Vector2 logic_uScriptAct_SetComponentsVector2_OutputVector2_328;
   bool logic_uScriptAct_SetComponentsVector2_Out_328 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomVector2 logic_uScriptAct_SetRandomVector2_uScriptAct_SetRandomVector2_329 = new uScriptAct_SetRandomVector2( );
   System.Single logic_uScriptAct_SetRandomVector2_MinX_329 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector2_MaxX_329 = (float) 1;
   System.Single logic_uScriptAct_SetRandomVector2_MinY_329 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector2_MaxY_329 = (float) 1;
   UnityEngine.Vector2 logic_uScriptAct_SetRandomVector2_TargetVector2_329;
   bool logic_uScriptAct_SetRandomVector2_Out_329 = true;
   //pointer to script instanced logic node
   uScriptAct_SetVector2 logic_uScriptAct_SetVector2_uScriptAct_SetVector2_330 = new uScriptAct_SetVector2( );
   UnityEngine.Vector2 logic_uScriptAct_SetVector2_Value_330 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_SetVector2_TargetVector2_330;
   bool logic_uScriptAct_SetVector2_Out_330 = true;
   //pointer to script instanced logic node
   uScriptAct_GetComponentsVector3 logic_uScriptAct_GetComponentsVector3_uScriptAct_GetComponentsVector3_332 = new uScriptAct_GetComponentsVector3( );
   UnityEngine.Vector3 logic_uScriptAct_GetComponentsVector3_InputVector3_332 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_GetComponentsVector3_X_332;
   System.Single logic_uScriptAct_GetComponentsVector3_Y_332;
   System.Single logic_uScriptAct_GetComponentsVector3_Z_332;
   bool logic_uScriptAct_GetComponentsVector3_Out_332 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomVector3 logic_uScriptAct_SetRandomVector3_uScriptAct_SetRandomVector3_333 = new uScriptAct_SetRandomVector3( );
   System.Single logic_uScriptAct_SetRandomVector3_MinX_333 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector3_MaxX_333 = (float) 1;
   System.Single logic_uScriptAct_SetRandomVector3_MinY_333 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector3_MaxY_333 = (float) 1;
   System.Single logic_uScriptAct_SetRandomVector3_MinZ_333 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector3_MaxZ_333 = (float) 1;
   UnityEngine.Vector3 logic_uScriptAct_SetRandomVector3_TargetVector3_333;
   bool logic_uScriptAct_SetRandomVector3_Out_333 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomVector3 logic_uScriptAct_SetRandomVector3_uScriptAct_SetRandomVector3_334 = new uScriptAct_SetRandomVector3( );
   System.Single logic_uScriptAct_SetRandomVector3_MinX_334 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector3_MaxX_334 = (float) 1;
   System.Single logic_uScriptAct_SetRandomVector3_MinY_334 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector3_MaxY_334 = (float) 1;
   System.Single logic_uScriptAct_SetRandomVector3_MinZ_334 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector3_MaxZ_334 = (float) 1;
   UnityEngine.Vector3 logic_uScriptAct_SetRandomVector3_TargetVector3_334;
   bool logic_uScriptAct_SetRandomVector3_Out_334 = true;
   //pointer to script instanced logic node
   uScriptAct_SetVector3 logic_uScriptAct_SetVector3_uScriptAct_SetVector3_335 = new uScriptAct_SetVector3( );
   UnityEngine.Vector3 logic_uScriptAct_SetVector3_Value_335 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_SetVector3_TargetVector3_335;
   bool logic_uScriptAct_SetVector3_Out_335 = true;
   //pointer to script instanced logic node
   uScriptAct_GetComponentsVector4 logic_uScriptAct_GetComponentsVector4_uScriptAct_GetComponentsVector4_337 = new uScriptAct_GetComponentsVector4( );
   UnityEngine.Vector4 logic_uScriptAct_GetComponentsVector4_InputVector4_337 = new Vector4( );
   System.Single logic_uScriptAct_GetComponentsVector4_X_337;
   System.Single logic_uScriptAct_GetComponentsVector4_Y_337;
   System.Single logic_uScriptAct_GetComponentsVector4_Z_337;
   System.Single logic_uScriptAct_GetComponentsVector4_W_337;
   bool logic_uScriptAct_GetComponentsVector4_Out_337 = true;
   //pointer to script instanced logic node
   uScriptAct_SetComponentsVector4 logic_uScriptAct_SetComponentsVector4_uScriptAct_SetComponentsVector4_338 = new uScriptAct_SetComponentsVector4( );
   System.Single logic_uScriptAct_SetComponentsVector4_X_338 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsVector4_Y_338 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsVector4_Z_338 = (float) 0;
   System.Single logic_uScriptAct_SetComponentsVector4_W_338 = (float) 0;
   UnityEngine.Vector4 logic_uScriptAct_SetComponentsVector4_OutputVector4_338;
   bool logic_uScriptAct_SetComponentsVector4_Out_338 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomVector4 logic_uScriptAct_SetRandomVector4_uScriptAct_SetRandomVector4_339 = new uScriptAct_SetRandomVector4( );
   System.Single logic_uScriptAct_SetRandomVector4_MinX_339 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector4_MaxX_339 = (float) 1;
   System.Single logic_uScriptAct_SetRandomVector4_MinY_339 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector4_MaxY_339 = (float) 1;
   System.Single logic_uScriptAct_SetRandomVector4_MinZ_339 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector4_MaxZ_339 = (float) 1;
   System.Single logic_uScriptAct_SetRandomVector4_MinW_339 = (float) 0;
   System.Single logic_uScriptAct_SetRandomVector4_MaxW_339 = (float) 1;
   UnityEngine.Vector4 logic_uScriptAct_SetRandomVector4_TargetVector4_339;
   bool logic_uScriptAct_SetRandomVector4_Out_339 = true;
   //pointer to script instanced logic node
   uScriptAct_SetVector4 logic_uScriptAct_SetVector4_uScriptAct_SetVector4_340 = new uScriptAct_SetVector4( );
   UnityEngine.Vector4 logic_uScriptAct_SetVector4_Value_340 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Vector4 logic_uScriptAct_SetVector4_TargetVector4_340;
   bool logic_uScriptAct_SetVector4_Out_340 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomSeed logic_uScriptAct_SetRandomSeed_uScriptAct_SetRandomSeed_341 = new uScriptAct_SetRandomSeed( );
   System.Int32 logic_uScriptAct_SetRandomSeed_Seed_341 = (int) 0;
   bool logic_uScriptAct_SetRandomSeed_Out_341 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_342 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_342 = "";
   System.Object[] logic_uScriptAct_Log_Target_342 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_342 = "";
   bool logic_uScriptAct_Log_Out_342 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_343 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_343 = "";
   System.Object[] logic_uScriptAct_Log_Target_343 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_343 = "";
   bool logic_uScriptAct_Log_Out_343 = true;
   //pointer to script instanced logic node
   uScriptAct_OnInputEventFilter logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_346 = new uScriptAct_OnInputEventFilter( );
   UnityEngine.KeyCode logic_uScriptAct_OnInputEventFilter_KeyCode_346 = UnityEngine.KeyCode.None;
   bool logic_uScriptAct_OnInputEventFilter_KeyDown_346 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyHeld_346 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyUp_346 = true;
   //pointer to script instanced logic node
   uScriptAct_AssignMaterial logic_uScriptAct_AssignMaterial_uScriptAct_AssignMaterial_348 = new uScriptAct_AssignMaterial( );
   UnityEngine.GameObject[] logic_uScriptAct_AssignMaterial_Target_348 = new UnityEngine.GameObject[] {};
   UnityEngine.Material logic_uScriptAct_AssignMaterial_materialName_348 = null;
   System.Int32 logic_uScriptAct_AssignMaterial_MatChannel_348 = (int) 0;
   bool logic_uScriptAct_AssignMaterial_Out_348 = true;
   //pointer to script instanced logic node
   uScriptAct_AssignMaterialColor logic_uScriptAct_AssignMaterialColor_uScriptAct_AssignMaterialColor_350 = new uScriptAct_AssignMaterialColor( );
   UnityEngine.GameObject[] logic_uScriptAct_AssignMaterialColor_Target_350 = new UnityEngine.GameObject[] {};
   UnityEngine.Color logic_uScriptAct_AssignMaterialColor_MatColor_350 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   System.Int32 logic_uScriptAct_AssignMaterialColor_MatChannel_350 = (int) 0;
   bool logic_uScriptAct_AssignMaterialColor_Out_350 = true;
   //pointer to script instanced logic node
   uScriptAct_AttachScript logic_uScriptAct_AttachScript_uScriptAct_AttachScript_351 = new uScriptAct_AttachScript( );
   UnityEngine.GameObject[] logic_uScriptAct_AttachScript_Target_351 = new UnityEngine.GameObject[] {};
   System.String[] logic_uScriptAct_AttachScript_ScriptName_351 = new System.String[] {};
   bool logic_uScriptAct_AttachScript_Out_351 = true;
   //pointer to script instanced logic node
   uScriptAct_AttachToGameObject logic_uScriptAct_AttachToGameObject_uScriptAct_AttachToGameObject_353 = new uScriptAct_AttachToGameObject( );
   UnityEngine.GameObject logic_uScriptAct_AttachToGameObject_Target_353 = null;
   UnityEngine.GameObject logic_uScriptAct_AttachToGameObject_Attachment_353 = null;
   System.Boolean logic_uScriptAct_AttachToGameObject_UseRelativeOffset_353 = (bool) false;
   UnityEngine.Vector3 logic_uScriptAct_AttachToGameObject_RelativeOffset_353 = new Vector3( (float)0, (float)0, (float)0 );
   System.Boolean logic_uScriptAct_AttachToGameObject_UseRelativeRotation_353 = (bool) false;
   UnityEngine.Vector3 logic_uScriptAct_AttachToGameObject_RelativeRotation_353 = new Vector3( (float)0, (float)0, (float)0 );
   bool logic_uScriptAct_AttachToGameObject_Out_353 = true;
   //pointer to script instanced logic node
   uScriptAct_CreatePrimitive logic_uScriptAct_CreatePrimitive_uScriptAct_CreatePrimitive_354 = new uScriptAct_CreatePrimitive( );
   System.String logic_uScriptAct_CreatePrimitive_Name_354 = "";
   UnityEngine.PrimitiveType logic_uScriptAct_CreatePrimitive_Primitive_354 = UnityEngine.PrimitiveType.Sphere;
   UnityEngine.Vector3 logic_uScriptAct_CreatePrimitive_Location_354 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.GameObject logic_uScriptAct_CreatePrimitive_NewGameObject_354;
   bool logic_uScriptAct_CreatePrimitive_Out_354 = true;
   //pointer to script instanced logic node
   uScriptAct_Destroy logic_uScriptAct_Destroy_uScriptAct_Destroy_355 = new uScriptAct_Destroy( );
   UnityEngine.GameObject[] logic_uScriptAct_Destroy_Target_355 = new UnityEngine.GameObject[] {};
   System.Single logic_uScriptAct_Destroy_DelayTime_355 = (float) 0;
   bool logic_uScriptAct_Destroy_Out_355 = true;
   bool logic_uScriptAct_Destroy_ObjectsDestroyed_355 = true;
   bool logic_uScriptAct_Destroy_WaitOneTick_355 = false;
   //pointer to script instanced logic node
   uScriptAct_DestroyComponent logic_uScriptAct_DestroyComponent_uScriptAct_DestroyComponent_356 = new uScriptAct_DestroyComponent( );
   UnityEngine.GameObject[] logic_uScriptAct_DestroyComponent_Target_356 = new UnityEngine.GameObject[] {};
   System.String[] logic_uScriptAct_DestroyComponent_ComponentName_356 = new System.String[] {};
   System.Single logic_uScriptAct_DestroyComponent_DelayTime_356 = (float) 0;
   bool logic_uScriptAct_DestroyComponent_Out_356 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_358 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_358 = "";
   System.Object[] logic_uScriptAct_Log_Target_358 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_358 = "";
   bool logic_uScriptAct_Log_Out_358 = true;
   //pointer to script instanced logic node
   uScriptAct_GetAllChildren logic_uScriptAct_GetAllChildren_uScriptAct_GetAllChildren_359 = new uScriptAct_GetAllChildren( );
   UnityEngine.GameObject logic_uScriptAct_GetAllChildren_Target_359 = null;
   System.Boolean logic_uScriptAct_GetAllChildren_recursive_359 = (bool) false;
   UnityEngine.GameObject logic_uScriptAct_GetAllChildren_FirstChild_359;
   UnityEngine.GameObject[] logic_uScriptAct_GetAllChildren_Children_359;
   System.Int32 logic_uScriptAct_GetAllChildren_ChildrenCount_359;
   bool logic_uScriptAct_GetAllChildren_Out_359 = true;
   bool logic_uScriptAct_GetAllChildren_ChildrenFound_359 = true;
   bool logic_uScriptAct_GetAllChildren_ChildrenNotFound_359 = true;
   //pointer to script instanced logic node
   uScriptAct_GetChildrenByName logic_uScriptAct_GetChildrenByName_uScriptAct_GetChildrenByName_360 = new uScriptAct_GetChildrenByName( );
   UnityEngine.GameObject logic_uScriptAct_GetChildrenByName_Target_360 = null;
   System.String logic_uScriptAct_GetChildrenByName_Name_360 = "";
   uScriptAct_GetChildrenByName.SearchType logic_uScriptAct_GetChildrenByName_SearchMethod_360 = uScriptAct_GetChildrenByName.SearchType.Matches;
   System.Boolean logic_uScriptAct_GetChildrenByName_recursive_360 = (bool) false;
   UnityEngine.GameObject logic_uScriptAct_GetChildrenByName_FirstChild_360;
   UnityEngine.GameObject[] logic_uScriptAct_GetChildrenByName_Children_360;
   System.Int32 logic_uScriptAct_GetChildrenByName_ChildrenCount_360;
   bool logic_uScriptAct_GetChildrenByName_Out_360 = true;
   bool logic_uScriptAct_GetChildrenByName_ChildrenFound_360 = true;
   bool logic_uScriptAct_GetChildrenByName_ChildrenNotFound_360 = true;
   //pointer to script instanced logic node
   uScriptAct_GetChildrenByTag logic_uScriptAct_GetChildrenByTag_uScriptAct_GetChildrenByTag_361 = new uScriptAct_GetChildrenByTag( );
   UnityEngine.GameObject logic_uScriptAct_GetChildrenByTag_Target_361 = null;
   System.String logic_uScriptAct_GetChildrenByTag_Tag_361 = "";
   uScriptAct_GetChildrenByTag.SearchType logic_uScriptAct_GetChildrenByTag_SearchMethod_361 = uScriptAct_GetChildrenByTag.SearchType.Matches;
   System.Boolean logic_uScriptAct_GetChildrenByTag_recursive_361 = (bool) false;
   UnityEngine.GameObject logic_uScriptAct_GetChildrenByTag_FirstChild_361;
   UnityEngine.GameObject[] logic_uScriptAct_GetChildrenByTag_Children_361;
   System.Int32 logic_uScriptAct_GetChildrenByTag_ChildrenCount_361;
   bool logic_uScriptAct_GetChildrenByTag_Out_361 = true;
   bool logic_uScriptAct_GetChildrenByTag_ChildrenFound_361 = true;
   bool logic_uScriptAct_GetChildrenByTag_ChildrenNotFound_361 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_362 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_362 = "";
   System.Object[] logic_uScriptAct_Log_Target_362 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_362 = "";
   bool logic_uScriptAct_Log_Out_362 = true;
   //pointer to script instanced logic node
   uScriptAct_GetDistance logic_uScriptAct_GetDistance_uScriptAct_GetDistance_363 = new uScriptAct_GetDistance( );
   UnityEngine.GameObject logic_uScriptAct_GetDistance_A_363 = null;
   UnityEngine.GameObject logic_uScriptAct_GetDistance_B_363 = null;
   System.Single logic_uScriptAct_GetDistance_Distance_363;
   bool logic_uScriptAct_GetDistance_Out_363 = true;
   //pointer to script instanced logic node
   uScriptAct_GetGameObjectByName logic_uScriptAct_GetGameObjectByName_uScriptAct_GetGameObjectByName_364 = new uScriptAct_GetGameObjectByName( );
   System.String logic_uScriptAct_GetGameObjectByName_Name_364 = "";
   UnityEngine.GameObject logic_uScriptAct_GetGameObjectByName_gameObject_364;
   bool logic_uScriptAct_GetGameObjectByName_Out_364 = true;
   bool logic_uScriptAct_GetGameObjectByName_GameObjectFound_364 = true;
   bool logic_uScriptAct_GetGameObjectByName_GameObjectNotFound_364 = true;
   //pointer to script instanced logic node
   uScriptAct_GetGameObjectsByTag logic_uScriptAct_GetGameObjectsByTag_uScriptAct_GetGameObjectsByTag_365 = new uScriptAct_GetGameObjectsByTag( );
   System.String logic_uScriptAct_GetGameObjectsByTag_Tag_365 = "";
   UnityEngine.GameObject logic_uScriptAct_GetGameObjectsByTag_FirstGameObject_365;
   UnityEngine.GameObject[] logic_uScriptAct_GetGameObjectsByTag_GameObjects_365;
   System.Int32 logic_uScriptAct_GetGameObjectsByTag_GameObjectCount_365;
   bool logic_uScriptAct_GetGameObjectsByTag_Out_365 = true;
   bool logic_uScriptAct_GetGameObjectsByTag_GameObjectsFound_365 = true;
   bool logic_uScriptAct_GetGameObjectsByTag_GameObjectsNotFound_365 = true;
   //pointer to script instanced logic node
   uScriptAct_GetGameObjectMaterial logic_uScriptAct_GetGameObjectMaterial_uScriptAct_GetGameObjectMaterial_366 = new uScriptAct_GetGameObjectMaterial( );
   UnityEngine.GameObject logic_uScriptAct_GetGameObjectMaterial_Target_366 = null;
   System.Int32 logic_uScriptAct_GetGameObjectMaterial_MaterialIndex_366 = (int) 0;
   UnityEngine.Material logic_uScriptAct_GetGameObjectMaterial_targetMaterial_366;
   UnityEngine.Color logic_uScriptAct_GetGameObjectMaterial_materialColor_366;
   System.String logic_uScriptAct_GetGameObjectMaterial_materialName_366;
   bool logic_uScriptAct_GetGameObjectMaterial_Out_366 = true;
   //pointer to script instanced logic node
   uScriptAct_GetPositionAndRotation logic_uScriptAct_GetPositionAndRotation_uScriptAct_GetPositionAndRotation_367 = new uScriptAct_GetPositionAndRotation( );
   UnityEngine.GameObject logic_uScriptAct_GetPositionAndRotation_Target_367 = null;
   System.Boolean logic_uScriptAct_GetPositionAndRotation_GetLocal_367 = (bool) false;
   UnityEngine.Vector3 logic_uScriptAct_GetPositionAndRotation_Position_367;
   UnityEngine.Quaternion logic_uScriptAct_GetPositionAndRotation_Rotation_367;
   UnityEngine.Vector3 logic_uScriptAct_GetPositionAndRotation_EulerAngles_367;
   UnityEngine.Vector3 logic_uScriptAct_GetPositionAndRotation_Forward_367;
   UnityEngine.Vector3 logic_uScriptAct_GetPositionAndRotation_Up_367;
   UnityEngine.Vector3 logic_uScriptAct_GetPositionAndRotation_Right_367;
   bool logic_uScriptAct_GetPositionAndRotation_Out_367 = true;
   //pointer to script instanced logic node
   uScriptAct_GetGameObjectScale logic_uScriptAct_GetGameObjectScale_uScriptAct_GetGameObjectScale_368 = new uScriptAct_GetGameObjectScale( );
   UnityEngine.GameObject logic_uScriptAct_GetGameObjectScale_Target_368 = null;
   UnityEngine.Vector3 logic_uScriptAct_GetGameObjectScale_Scale_368;
   System.Single logic_uScriptAct_GetGameObjectScale_X_368;
   System.Single logic_uScriptAct_GetGameObjectScale_Y_368;
   System.Single logic_uScriptAct_GetGameObjectScale_Z_368;
   bool logic_uScriptAct_GetGameObjectScale_Out_368 = true;
   //pointer to script instanced logic node
   uScriptAct_GetVector2Distance logic_uScriptAct_GetVector2Distance_uScriptAct_GetVector2Distance_370 = new uScriptAct_GetVector2Distance( );
   UnityEngine.Vector2 logic_uScriptAct_GetVector2Distance_A_370 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_GetVector2Distance_B_370 = new Vector2( (float)0, (float)0 );
   System.Single logic_uScriptAct_GetVector2Distance_Distance_370;
   bool logic_uScriptAct_GetVector2Distance_Out_370 = true;
   //pointer to script instanced logic node
   uScriptAct_GetVector3Distance logic_uScriptAct_GetVector3Distance_uScriptAct_GetVector3Distance_371 = new uScriptAct_GetVector3Distance( );
   UnityEngine.Vector3 logic_uScriptAct_GetVector3Distance_A_371 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_GetVector3Distance_B_371 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_GetVector3Distance_Distance_371;
   bool logic_uScriptAct_GetVector3Distance_Out_371 = true;
   //pointer to script instanced logic node
   uScriptAct_GetVector4Distance logic_uScriptAct_GetVector4Distance_uScriptAct_GetVector4Distance_372 = new uScriptAct_GetVector4Distance( );
   UnityEngine.Vector4 logic_uScriptAct_GetVector4Distance_A_372 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Vector4 logic_uScriptAct_GetVector4Distance_B_372 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_GetVector4Distance_Distance_372;
   bool logic_uScriptAct_GetVector4Distance_Out_372 = true;
   //pointer to script instanced logic node
   uScriptAct_IsActive logic_uScriptAct_IsActive_uScriptAct_IsActive_373 = new uScriptAct_IsActive( );
   UnityEngine.GameObject logic_uScriptAct_IsActive_Target_373 = null;
   bool logic_uScriptAct_IsActive_Out_373 = true;
   bool logic_uScriptAct_IsActive_Active_373 = true;
   bool logic_uScriptAct_IsActive_Inactive_373 = true;
   //pointer to script instanced logic node
   uScriptAct_IsometricCharacterController logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374 = new uScriptAct_IsometricCharacterController( );
   UnityEngine.GameObject logic_uScriptAct_IsometricCharacterController_target_374 = null;
   System.Single logic_uScriptAct_IsometricCharacterController_translation_374 = (float) 0;
   System.Single logic_uScriptAct_IsometricCharacterController_rotation_374 = (float) 1.5;
   System.Boolean logic_uScriptAct_IsometricCharacterController_filterTranslation_374 = (bool) false;
   System.Single logic_uScriptAct_IsometricCharacterController_translationFilterConstant_374 = (float) 0.7;
   System.Boolean logic_uScriptAct_IsometricCharacterController_filterRotation_374 = (bool) false;
   System.Single logic_uScriptAct_IsometricCharacterController_rotationFilterConstant_374 = (float) 0.1;
   bool logic_uScriptAct_IsometricCharacterController_Out_374 = true;
   //pointer to script instanced logic node
   uScriptAct_LookAt logic_uScriptAct_LookAt_uScriptAct_LookAt_375 = new uScriptAct_LookAt( );
   UnityEngine.GameObject[] logic_uScriptAct_LookAt_Target_375 = new UnityEngine.GameObject[] {};
   System.Object logic_uScriptAct_LookAt_Focus_375 = "";
   System.Single logic_uScriptAct_LookAt_time_375 = (float) 0;
   uScriptAct_LookAt.LockAxis logic_uScriptAct_LookAt_lockAxis_375 = uScriptAct_LookAt.LockAxis.None;
   bool logic_uScriptAct_LookAt_Out_375 = true;
   //pointer to script instanced logic node
   uScriptAct_MoveToLocation logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376 = new uScriptAct_MoveToLocation( );
   UnityEngine.GameObject[] logic_uScriptAct_MoveToLocation_targetArray_376 = new UnityEngine.GameObject[] {};
   UnityEngine.Vector3 logic_uScriptAct_MoveToLocation_location_376 = new Vector3( (float)0, (float)0, (float)0 );
   System.Boolean logic_uScriptAct_MoveToLocation_asOffset_376 = (bool) false;
   System.Single logic_uScriptAct_MoveToLocation_totalTime_376 = (float) 0;
   bool logic_uScriptAct_MoveToLocation_Out_376 = true;
   bool logic_uScriptAct_MoveToLocation_Cancelled_376 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_377 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_377 = "";
   System.Object[] logic_uScriptAct_Log_Target_377 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_377 = "";
   bool logic_uScriptAct_Log_Out_377 = true;
   //pointer to script instanced logic node
   uScriptAct_NormalizeVector2 logic_uScriptAct_NormalizeVector2_uScriptAct_NormalizeVector2_378 = new uScriptAct_NormalizeVector2( );
   UnityEngine.Vector2 logic_uScriptAct_NormalizeVector2_Target_378 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_NormalizeVector2_NormalizedVector_378;
   bool logic_uScriptAct_NormalizeVector2_Out_378 = true;
   //pointer to script instanced logic node
   uScriptAct_NormalizeVector4 logic_uScriptAct_NormalizeVector4_uScriptAct_NormalizeVector4_379 = new uScriptAct_NormalizeVector4( );
   UnityEngine.Vector4 logic_uScriptAct_NormalizeVector4_Target_379 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Vector4 logic_uScriptAct_NormalizeVector4_NormalizedVector_379;
   bool logic_uScriptAct_NormalizeVector4_Out_379 = true;
   //pointer to script instanced logic node
   uScriptAct_NormalizeVector3 logic_uScriptAct_NormalizeVector3_uScriptAct_NormalizeVector3_380 = new uScriptAct_NormalizeVector3( );
   UnityEngine.Vector3 logic_uScriptAct_NormalizeVector3_Target_380 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_NormalizeVector3_NormalizedVector_380;
   bool logic_uScriptAct_NormalizeVector3_Out_380 = true;
   //pointer to script instanced logic node
   uScriptAct_Rotate logic_uScriptAct_Rotate_uScriptAct_Rotate_381 = new uScriptAct_Rotate( );
   UnityEngine.GameObject[] logic_uScriptAct_Rotate_Target_381 = new UnityEngine.GameObject[] {};
   System.Single logic_uScriptAct_Rotate_Degrees_381 = (float) 0;
   System.String logic_uScriptAct_Rotate_Axis_381 = "";
   System.Single logic_uScriptAct_Rotate_Seconds_381 = (float) 0;
   System.Boolean logic_uScriptAct_Rotate_Loop_381 = (bool) false;
   bool logic_uScriptAct_Rotate_Out_381 = true;
   //pointer to script instanced logic node
   uScriptAct_SetGameObjectEulerAngles logic_uScriptAct_SetGameObjectEulerAngles_uScriptAct_SetGameObjectEulerAngles_382 = new uScriptAct_SetGameObjectEulerAngles( );
   UnityEngine.GameObject[] logic_uScriptAct_SetGameObjectEulerAngles_Target_382 = new UnityEngine.GameObject[] {};
   System.Single logic_uScriptAct_SetGameObjectEulerAngles_X_Axis_382 = (float) 0;
   System.Boolean logic_uScriptAct_SetGameObjectEulerAngles_PreserveX_Axis_382 = (bool) false;
   System.Single logic_uScriptAct_SetGameObjectEulerAngles_Y_Axis_382 = (float) 0;
   System.Boolean logic_uScriptAct_SetGameObjectEulerAngles_PreserveY_Axis_382 = (bool) false;
   System.Single logic_uScriptAct_SetGameObjectEulerAngles_Z_Axis_382 = (float) 0;
   System.Boolean logic_uScriptAct_SetGameObjectEulerAngles_PreserveZ_Axis_382 = (bool) false;
   System.Boolean logic_uScriptAct_SetGameObjectEulerAngles_AsLocal_382 = (bool) false;
   bool logic_uScriptAct_SetGameObjectEulerAngles_Out_382 = true;
   //pointer to script instanced logic node
   uScriptAct_SetGameObjectPosition logic_uScriptAct_SetGameObjectPosition_uScriptAct_SetGameObjectPosition_383 = new uScriptAct_SetGameObjectPosition( );
   UnityEngine.GameObject[] logic_uScriptAct_SetGameObjectPosition_Target_383 = new UnityEngine.GameObject[] {};
   UnityEngine.Vector3 logic_uScriptAct_SetGameObjectPosition_Position_383 = new Vector3( (float)0, (float)0, (float)0 );
   System.Boolean logic_uScriptAct_SetGameObjectPosition_AsOffset_383 = (bool) false;
   System.Boolean logic_uScriptAct_SetGameObjectPosition_AsLocal_383 = (bool) false;
   bool logic_uScriptAct_SetGameObjectPosition_Out_383 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomPosition logic_uScriptAct_SetRandomPosition_uScriptAct_SetRandomPosition_384 = new uScriptAct_SetRandomPosition( );
   UnityEngine.GameObject[] logic_uScriptAct_SetRandomPosition_Target_384 = new UnityEngine.GameObject[] {};
   UnityEngine.Vector3 logic_uScriptAct_SetRandomPosition_Origin_384 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_SetRandomPosition_MinX_384 = (float) -10;
   System.Single logic_uScriptAct_SetRandomPosition_MaxX_384 = (float) 10;
   System.Single logic_uScriptAct_SetRandomPosition_MinY_384 = (float) -10;
   System.Single logic_uScriptAct_SetRandomPosition_MaxY_384 = (float) 10;
   System.Single logic_uScriptAct_SetRandomPosition_MinZ_384 = (float) -10;
   System.Single logic_uScriptAct_SetRandomPosition_MaxZ_384 = (float) 10;
   System.Boolean logic_uScriptAct_SetRandomPosition_PreserveX_Axis_384 = (bool) false;
   System.Boolean logic_uScriptAct_SetRandomPosition_PreserveY_Axis_384 = (bool) false;
   System.Boolean logic_uScriptAct_SetRandomPosition_PreserveZ_Axis_384 = (bool) false;
   System.Boolean logic_uScriptAct_SetRandomPosition_AsOffset_384 = (bool) false;
   bool logic_uScriptAct_SetRandomPosition_Out_384 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomRotation logic_uScriptAct_SetRandomRotation_uScriptAct_SetRandomRotation_385 = new uScriptAct_SetRandomRotation( );
   UnityEngine.GameObject[] logic_uScriptAct_SetRandomRotation_Target_385 = new UnityEngine.GameObject[] {};
   System.Single logic_uScriptAct_SetRandomRotation_MinX_385 = (float) 0;
   System.Single logic_uScriptAct_SetRandomRotation_MaxX_385 = (float) 360;
   System.Single logic_uScriptAct_SetRandomRotation_MinY_385 = (float) 0;
   System.Single logic_uScriptAct_SetRandomRotation_MaxY_385 = (float) 360;
   System.Single logic_uScriptAct_SetRandomRotation_MinZ_385 = (float) 0;
   System.Single logic_uScriptAct_SetRandomRotation_MaxZ_385 = (float) 360;
   System.Boolean logic_uScriptAct_SetRandomRotation_PreserveX_Axis_385 = (bool) false;
   System.Boolean logic_uScriptAct_SetRandomRotation_PreserveY_Axis_385 = (bool) false;
   System.Boolean logic_uScriptAct_SetRandomRotation_PreserveZ_Axis_385 = (bool) false;
   bool logic_uScriptAct_SetRandomRotation_Out_385 = true;
   //pointer to script instanced logic node
   uScriptAct_SetRandomScale logic_uScriptAct_SetRandomScale_uScriptAct_SetRandomScale_386 = new uScriptAct_SetRandomScale( );
   UnityEngine.GameObject[] logic_uScriptAct_SetRandomScale_Target_386 = new UnityEngine.GameObject[] {};
   System.Single logic_uScriptAct_SetRandomScale_MinX_386 = (float) 0.5;
   System.Single logic_uScriptAct_SetRandomScale_MaxX_386 = (float) 2;
   System.Single logic_uScriptAct_SetRandomScale_MinY_386 = (float) 0.5;
   System.Single logic_uScriptAct_SetRandomScale_MaxY_386 = (float) 2;
   System.Single logic_uScriptAct_SetRandomScale_MinZ_386 = (float) 0.5;
   System.Single logic_uScriptAct_SetRandomScale_MaxZ_386 = (float) 2;
   System.Boolean logic_uScriptAct_SetRandomScale_PreserveX_Axis_386 = (bool) false;
   System.Boolean logic_uScriptAct_SetRandomScale_PreserveY_Axis_386 = (bool) false;
   System.Boolean logic_uScriptAct_SetRandomScale_PreserveZ_Axis_386 = (bool) false;
   System.Boolean logic_uScriptAct_SetRandomScale_Uniform_386 = (bool) true;
   bool logic_uScriptAct_SetRandomScale_Out_386 = true;
   //pointer to script instanced logic node
   uScriptAct_SetGameObjectRotation logic_uScriptAct_SetGameObjectRotation_uScriptAct_SetGameObjectRotation_387 = new uScriptAct_SetGameObjectRotation( );
   UnityEngine.GameObject[] logic_uScriptAct_SetGameObjectRotation_Target_387 = new UnityEngine.GameObject[] {};
   System.Single logic_uScriptAct_SetGameObjectRotation_XDegrees_387 = (float) 0;
   System.Single logic_uScriptAct_SetGameObjectRotation_YDegrees_387 = (float) 0;
   System.Single logic_uScriptAct_SetGameObjectRotation_ZDegrees_387 = (float) 0;
   System.Boolean logic_uScriptAct_SetGameObjectRotation_IgnoreX_387 = (bool) false;
   System.Boolean logic_uScriptAct_SetGameObjectRotation_IgnoreY_387 = (bool) false;
   System.Boolean logic_uScriptAct_SetGameObjectRotation_IgnoreZ_387 = (bool) false;
   UnityEngine.Space logic_uScriptAct_SetGameObjectRotation_CoordinateSystem_387 = UnityEngine.Space.World;
   System.Boolean logic_uScriptAct_SetGameObjectRotation_AsOffset_387 = (bool) false;
   bool logic_uScriptAct_SetGameObjectRotation_Out_387 = true;
   //pointer to script instanced logic node
   uScriptAct_SetGameObjectScale logic_uScriptAct_SetGameObjectScale_uScriptAct_SetGameObjectScale_388 = new uScriptAct_SetGameObjectScale( );
   UnityEngine.GameObject[] logic_uScriptAct_SetGameObjectScale_Target_388 = new UnityEngine.GameObject[] {};
   UnityEngine.Vector3 logic_uScriptAct_SetGameObjectScale_Scale_388 = new Vector3( (float)0, (float)0, (float)0 );
   bool logic_uScriptAct_SetGameObjectScale_Out_388 = true;
   //pointer to script instanced logic node
   uScriptAct_SpawnPrefab logic_uScriptAct_SpawnPrefab_uScriptAct_SpawnPrefab_389 = new uScriptAct_SpawnPrefab( );
   System.String logic_uScriptAct_SpawnPrefab_PrefabName_389 = "";
   System.String logic_uScriptAct_SpawnPrefab_ResourcePath_389 = "";
   UnityEngine.GameObject logic_uScriptAct_SpawnPrefab_SpawnPoint_389 = null;
   System.String logic_uScriptAct_SpawnPrefab_SpawnedName_389 = "";
   UnityEngine.Vector3 logic_uScriptAct_SpawnPrefab_LocationOffset_389 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.GameObject logic_uScriptAct_SpawnPrefab_SpawnedGameObject_389;
   System.Int32 logic_uScriptAct_SpawnPrefab_SpawnedInstancedID_389;
   bool logic_uScriptAct_SpawnPrefab_Immediate_389 = true;
   //pointer to script instanced logic node
   uScriptAct_SpawnPrefabAtLocation logic_uScriptAct_SpawnPrefabAtLocation_uScriptAct_SpawnPrefabAtLocation_390 = new uScriptAct_SpawnPrefabAtLocation( );
   System.String logic_uScriptAct_SpawnPrefabAtLocation_PrefabName_390 = "";
   System.String logic_uScriptAct_SpawnPrefabAtLocation_ResourcePath_390 = "";
   UnityEngine.Vector3 logic_uScriptAct_SpawnPrefabAtLocation_SpawnPosition_390 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Quaternion logic_uScriptAct_SpawnPrefabAtLocation_SpawnRotation_390 = new Quaternion( (float)0, (float)0, (float)0, (float)0 );
   System.String logic_uScriptAct_SpawnPrefabAtLocation_SpawnedName_390 = "";
   UnityEngine.GameObject logic_uScriptAct_SpawnPrefabAtLocation_SpawnedGameObject_390;
   System.Int32 logic_uScriptAct_SpawnPrefabAtLocation_SpawnedInstancedID_390;
   bool logic_uScriptAct_SpawnPrefabAtLocation_Immediate_390 = true;
   //pointer to script instanced logic node
   uScriptAct_Teleport logic_uScriptAct_Teleport_uScriptAct_Teleport_391 = new uScriptAct_Teleport( );
   UnityEngine.GameObject[] logic_uScriptAct_Teleport_Target_391 = new UnityEngine.GameObject[] {};
   UnityEngine.GameObject logic_uScriptAct_Teleport_Destination_391 = null;
   System.Boolean logic_uScriptAct_Teleport_UpdateRotation_391 = (bool) false;
   bool logic_uScriptAct_Teleport_Out_391 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_393 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_393 = "";
   System.Object[] logic_uScriptAct_Log_Target_393 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_393 = "";
   bool logic_uScriptAct_Log_Out_393 = true;
   //pointer to script instanced logic node
   uScriptAct_OnInputEventFilter logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_395 = new uScriptAct_OnInputEventFilter( );
   UnityEngine.KeyCode logic_uScriptAct_OnInputEventFilter_KeyCode_395 = UnityEngine.KeyCode.None;
   bool logic_uScriptAct_OnInputEventFilter_KeyDown_395 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyHeld_395 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyUp_395 = true;
   //pointer to script instanced logic node
   uScriptAct_InterpolateColorLinear logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397 = new uScriptAct_InterpolateColorLinear( );
   UnityEngine.Color logic_uScriptAct_InterpolateColorLinear_startValue_397 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   UnityEngine.Color logic_uScriptAct_InterpolateColorLinear_endValue_397 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   System.Single logic_uScriptAct_InterpolateColorLinear_time_397 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateColorLinear_loopType_397 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateColorLinear_loopDelay_397 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateColorLinear_loopCount_397 = (int) 0;
   UnityEngine.Color logic_uScriptAct_InterpolateColorLinear_currentValue_397;
   bool logic_uScriptAct_InterpolateColorLinear_Started_397 = true;
   bool logic_uScriptAct_InterpolateColorLinear_Stopped_397 = true;
   bool logic_uScriptAct_InterpolateColorLinear_Interpolating_397 = true;
   bool logic_uScriptAct_InterpolateColorLinear_Finished_397 = true;
   bool logic_uScriptAct_InterpolateColorLinear_Driven_397 = false;
   //pointer to script instanced logic node
   uScriptAct_InterpolateFloatLinear logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398 = new uScriptAct_InterpolateFloatLinear( );
   System.Single logic_uScriptAct_InterpolateFloatLinear_startValue_398 = (float) 0;
   System.Single logic_uScriptAct_InterpolateFloatLinear_endValue_398 = (float) 0;
   System.Single logic_uScriptAct_InterpolateFloatLinear_time_398 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateFloatLinear_loopType_398 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateFloatLinear_loopDelay_398 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateFloatLinear_loopCount_398 = (int) 0;
   System.Single logic_uScriptAct_InterpolateFloatLinear_currentValue_398;
   bool logic_uScriptAct_InterpolateFloatLinear_Started_398 = true;
   bool logic_uScriptAct_InterpolateFloatLinear_Stopped_398 = true;
   bool logic_uScriptAct_InterpolateFloatLinear_Interpolating_398 = true;
   bool logic_uScriptAct_InterpolateFloatLinear_Finished_398 = true;
   bool logic_uScriptAct_InterpolateFloatLinear_Driven_398 = false;
   //pointer to script instanced logic node
   uScriptAct_InterpolateIntLinear logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399 = new uScriptAct_InterpolateIntLinear( );
   System.Int32 logic_uScriptAct_InterpolateIntLinear_startValue_399 = (int) 0;
   System.Int32 logic_uScriptAct_InterpolateIntLinear_endValue_399 = (int) 0;
   System.Single logic_uScriptAct_InterpolateIntLinear_time_399 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateIntLinear_loopType_399 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateIntLinear_loopDelay_399 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateIntLinear_loopCount_399 = (int) 0;
   System.Int32 logic_uScriptAct_InterpolateIntLinear_currentValue_399;
   bool logic_uScriptAct_InterpolateIntLinear_Started_399 = true;
   bool logic_uScriptAct_InterpolateIntLinear_Stopped_399 = true;
   bool logic_uScriptAct_InterpolateIntLinear_Interpolating_399 = true;
   bool logic_uScriptAct_InterpolateIntLinear_Finished_399 = true;
   bool logic_uScriptAct_InterpolateIntLinear_Driven_399 = false;
   //pointer to script instanced logic node
   uScriptAct_InterpolateQuaternionLinear logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400 = new uScriptAct_InterpolateQuaternionLinear( );
   UnityEngine.Quaternion logic_uScriptAct_InterpolateQuaternionLinear_startValue_400 = new Quaternion( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Quaternion logic_uScriptAct_InterpolateQuaternionLinear_endValue_400 = new Quaternion( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_InterpolateQuaternionLinear_time_400 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateQuaternionLinear_loopType_400 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateQuaternionLinear_loopDelay_400 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateQuaternionLinear_loopCount_400 = (int) 0;
   UnityEngine.Quaternion logic_uScriptAct_InterpolateQuaternionLinear_currentValue_400;
   bool logic_uScriptAct_InterpolateQuaternionLinear_Started_400 = true;
   bool logic_uScriptAct_InterpolateQuaternionLinear_Stopped_400 = true;
   bool logic_uScriptAct_InterpolateQuaternionLinear_Interpolating_400 = true;
   bool logic_uScriptAct_InterpolateQuaternionLinear_Finished_400 = true;
   bool logic_uScriptAct_InterpolateQuaternionLinear_Driven_400 = false;
   //pointer to script instanced logic node
   uScriptAct_InterpolateQuaternionSlerp logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401 = new uScriptAct_InterpolateQuaternionSlerp( );
   UnityEngine.Quaternion logic_uScriptAct_InterpolateQuaternionSlerp_startValue_401 = new Quaternion( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Quaternion logic_uScriptAct_InterpolateQuaternionSlerp_endValue_401 = new Quaternion( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_InterpolateQuaternionSlerp_time_401 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateQuaternionSlerp_loopType_401 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateQuaternionSlerp_loopDelay_401 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateQuaternionSlerp_loopCount_401 = (int) 0;
   UnityEngine.Quaternion logic_uScriptAct_InterpolateQuaternionSlerp_currentValue_401;
   bool logic_uScriptAct_InterpolateQuaternionSlerp_Started_401 = true;
   bool logic_uScriptAct_InterpolateQuaternionSlerp_Stopped_401 = true;
   bool logic_uScriptAct_InterpolateQuaternionSlerp_Interpolating_401 = true;
   bool logic_uScriptAct_InterpolateQuaternionSlerp_Finished_401 = true;
   bool logic_uScriptAct_InterpolateQuaternionSlerp_Driven_401 = false;
   //pointer to script instanced logic node
   uScriptAct_InterpolateRectLinear logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402 = new uScriptAct_InterpolateRectLinear( );
   UnityEngine.Rect logic_uScriptAct_InterpolateRectLinear_startValue_402 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Rect logic_uScriptAct_InterpolateRectLinear_endValue_402 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_InterpolateRectLinear_time_402 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateRectLinear_loopType_402 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateRectLinear_loopDelay_402 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateRectLinear_loopCount_402 = (int) 0;
   UnityEngine.Rect logic_uScriptAct_InterpolateRectLinear_currentValue_402;
   bool logic_uScriptAct_InterpolateRectLinear_Started_402 = true;
   bool logic_uScriptAct_InterpolateRectLinear_Stopped_402 = true;
   bool logic_uScriptAct_InterpolateRectLinear_Interpolating_402 = true;
   bool logic_uScriptAct_InterpolateRectLinear_Finished_402 = true;
   bool logic_uScriptAct_InterpolateRectLinear_Driven_402 = false;
   //pointer to script instanced logic node
   uScriptAct_InterpolateVector2Linear logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403 = new uScriptAct_InterpolateVector2Linear( );
   UnityEngine.Vector2 logic_uScriptAct_InterpolateVector2Linear_startValue_403 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_InterpolateVector2Linear_endValue_403 = new Vector2( (float)0, (float)0 );
   System.Single logic_uScriptAct_InterpolateVector2Linear_time_403 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateVector2Linear_loopType_403 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateVector2Linear_loopDelay_403 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateVector2Linear_loopCount_403 = (int) 0;
   UnityEngine.Vector2 logic_uScriptAct_InterpolateVector2Linear_currentValue_403;
   bool logic_uScriptAct_InterpolateVector2Linear_Started_403 = true;
   bool logic_uScriptAct_InterpolateVector2Linear_Stopped_403 = true;
   bool logic_uScriptAct_InterpolateVector2Linear_Interpolating_403 = true;
   bool logic_uScriptAct_InterpolateVector2Linear_Finished_403 = true;
   bool logic_uScriptAct_InterpolateVector2Linear_Driven_403 = false;
   //pointer to script instanced logic node
   uScriptAct_InterpolateVector3Linear logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404 = new uScriptAct_InterpolateVector3Linear( );
   UnityEngine.Vector3 logic_uScriptAct_InterpolateVector3Linear_startValue_404 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_InterpolateVector3Linear_endValue_404 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_InterpolateVector3Linear_time_404 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateVector3Linear_loopType_404 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateVector3Linear_loopDelay_404 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateVector3Linear_loopCount_404 = (int) 0;
   UnityEngine.Vector3 logic_uScriptAct_InterpolateVector3Linear_currentValue_404;
   bool logic_uScriptAct_InterpolateVector3Linear_Started_404 = true;
   bool logic_uScriptAct_InterpolateVector3Linear_Stopped_404 = true;
   bool logic_uScriptAct_InterpolateVector3Linear_Interpolating_404 = true;
   bool logic_uScriptAct_InterpolateVector3Linear_Finished_404 = true;
   bool logic_uScriptAct_InterpolateVector3Linear_Driven_404 = false;
   //pointer to script instanced logic node
   uScriptAct_InterpolateVector4Linear logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405 = new uScriptAct_InterpolateVector4Linear( );
   UnityEngine.Vector4 logic_uScriptAct_InterpolateVector4Linear_startValue_405 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Vector4 logic_uScriptAct_InterpolateVector4Linear_endValue_405 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_InterpolateVector4Linear_time_405 = (float) 0;
   uScript_Lerper.LoopType logic_uScriptAct_InterpolateVector4Linear_loopType_405 = uScript_Lerper.LoopType.None;
   System.Single logic_uScriptAct_InterpolateVector4Linear_loopDelay_405 = (float) 0;
   System.Int32 logic_uScriptAct_InterpolateVector4Linear_loopCount_405 = (int) 0;
   UnityEngine.Vector4 logic_uScriptAct_InterpolateVector4Linear_currentValue_405;
   bool logic_uScriptAct_InterpolateVector4Linear_Started_405 = true;
   bool logic_uScriptAct_InterpolateVector4Linear_Stopped_405 = true;
   bool logic_uScriptAct_InterpolateVector4Linear_Interpolating_405 = true;
   bool logic_uScriptAct_InterpolateVector4Linear_Finished_405 = true;
   bool logic_uScriptAct_InterpolateVector4Linear_Driven_405 = false;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_406 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_406 = "";
   System.Object[] logic_uScriptAct_Log_Target_406 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_406 = "";
   bool logic_uScriptAct_Log_Out_406 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_407 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_407 = "";
   System.Object[] logic_uScriptAct_Log_Target_407 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_407 = "";
   bool logic_uScriptAct_Log_Out_407 = true;
   //pointer to script instanced logic node
   uScriptAct_OnInputEventFilter logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_409 = new uScriptAct_OnInputEventFilter( );
   UnityEngine.KeyCode logic_uScriptAct_OnInputEventFilter_KeyCode_409 = UnityEngine.KeyCode.None;
   bool logic_uScriptAct_OnInputEventFilter_KeyDown_409 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyHeld_409 = true;
   bool logic_uScriptAct_OnInputEventFilter_KeyUp_409 = true;
   //pointer to script instanced logic node
   uScriptAct_AddFloat logic_uScriptAct_AddFloat_uScriptAct_AddFloat_411 = new uScriptAct_AddFloat( );
   System.Single[] logic_uScriptAct_AddFloat_A_411 = new System.Single[] {};
   System.Single[] logic_uScriptAct_AddFloat_B_411 = new System.Single[] {};
   System.Single logic_uScriptAct_AddFloat_FloatResult_411;
   System.Int32 logic_uScriptAct_AddFloat_IntResult_411;
   bool logic_uScriptAct_AddFloat_Out_411 = true;
   //pointer to script instanced logic node
   uScriptAct_AddInt logic_uScriptAct_AddInt_uScriptAct_AddInt_412 = new uScriptAct_AddInt( );
   System.Int32[] logic_uScriptAct_AddInt_A_412 = new System.Int32[] {};
   System.Int32[] logic_uScriptAct_AddInt_B_412 = new System.Int32[] {};
   System.Int32 logic_uScriptAct_AddInt_IntResult_412;
   System.Single logic_uScriptAct_AddInt_FloatResult_412;
   bool logic_uScriptAct_AddInt_Out_412 = true;
   //pointer to script instanced logic node
   uScriptAct_AddRect logic_uScriptAct_AddRect_uScriptAct_AddRect_413 = new uScriptAct_AddRect( );
   UnityEngine.Rect[] logic_uScriptAct_AddRect_A_413 = new Rect[] {};
   UnityEngine.Rect[] logic_uScriptAct_AddRect_B_413 = new Rect[] {};
   UnityEngine.Rect logic_uScriptAct_AddRect_Result_413;
   bool logic_uScriptAct_AddRect_Out_413 = true;
   //pointer to script instanced logic node
   uScriptAct_AddVector3 logic_uScriptAct_AddVector3_uScriptAct_AddVector3_414 = new uScriptAct_AddVector3( );
   UnityEngine.Vector3[] logic_uScriptAct_AddVector3_A_414 = new Vector3[] {};
   UnityEngine.Vector3[] logic_uScriptAct_AddVector3_B_414 = new Vector3[] {};
   UnityEngine.Vector3 logic_uScriptAct_AddVector3_Result_414;
   bool logic_uScriptAct_AddVector3_Out_414 = true;
   //pointer to script instanced logic node
   uScriptAct_AddVector4 logic_uScriptAct_AddVector4_uScriptAct_AddVector4_415 = new uScriptAct_AddVector4( );
   UnityEngine.Vector4[] logic_uScriptAct_AddVector4_A_415 = new Vector4[] {};
   UnityEngine.Vector4[] logic_uScriptAct_AddVector4_B_415 = new Vector4[] {};
   UnityEngine.Vector4 logic_uScriptAct_AddVector4_Result_415;
   bool logic_uScriptAct_AddVector4_Out_415 = true;
   //pointer to script instanced logic node
   uScriptAct_ClampFloat logic_uScriptAct_ClampFloat_uScriptAct_ClampFloat_416 = new uScriptAct_ClampFloat( );
   System.Single logic_uScriptAct_ClampFloat_Target_416 = (float) 0;
   System.Single logic_uScriptAct_ClampFloat_Min_416 = (float) 0;
   System.Single logic_uScriptAct_ClampFloat_Max_416 = (float) 0;
   System.Single logic_uScriptAct_ClampFloat_FloatResult_416;
   System.Int32 logic_uScriptAct_ClampFloat_IntResult_416;
   bool logic_uScriptAct_ClampFloat_Out_416 = true;
   //pointer to script instanced logic node
   uScriptAct_ClampInt logic_uScriptAct_ClampInt_uScriptAct_ClampInt_417 = new uScriptAct_ClampInt( );
   System.Int32 logic_uScriptAct_ClampInt_Target_417 = (int) 0;
   System.Int32 logic_uScriptAct_ClampInt_Min_417 = (int) 0;
   System.Int32 logic_uScriptAct_ClampInt_Max_417 = (int) 0;
   System.Int32 logic_uScriptAct_ClampInt_IntResult_417;
   System.Single logic_uScriptAct_ClampInt_FloatResult_417;
   bool logic_uScriptAct_ClampInt_Out_417 = true;
   //pointer to script instanced logic node
   uScriptAct_ConvertRectToVector4 logic_uScriptAct_ConvertRectToVector4_uScriptAct_ConvertRectToVector4_418 = new uScriptAct_ConvertRectToVector4( );
   UnityEngine.Rect logic_uScriptAct_ConvertRectToVector4_TargetRect_418 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Vector4 logic_uScriptAct_ConvertRectToVector4_NewVector4_418;
   bool logic_uScriptAct_ConvertRectToVector4_Out_418 = true;
   //pointer to script instanced logic node
   uScriptAct_ConvertVariable logic_uScriptAct_ConvertVariable_uScriptAct_ConvertVariable_419 = new uScriptAct_ConvertVariable( );
   System.Object logic_uScriptAct_ConvertVariable_Target_419 = "";
   System.Int32 logic_uScriptAct_ConvertVariable_IntValue_419;
   System.Int64 logic_uScriptAct_ConvertVariable_Int64Value_419;
   System.Single logic_uScriptAct_ConvertVariable_FloatValue_419;
   System.String logic_uScriptAct_ConvertVariable_StringValue_419;
   System.Boolean logic_uScriptAct_ConvertVariable_BooleanValue_419;
   UnityEngine.Vector3 logic_uScriptAct_ConvertVariable_Vector3Value_419;
   System.String logic_uScriptAct_ConvertVariable_FloatGroupSeparator_419 = ",";
   bool logic_uScriptAct_ConvertVariable_Out_419 = true;
   //pointer to script instanced logic node
   uScriptAct_ConvertVector4ToRect logic_uScriptAct_ConvertVector4ToRect_uScriptAct_ConvertVector4ToRect_420 = new uScriptAct_ConvertVector4ToRect( );
   UnityEngine.Vector4 logic_uScriptAct_ConvertVector4ToRect_TargetVector4_420 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Rect logic_uScriptAct_ConvertVector4ToRect_NewRect_420;
   bool logic_uScriptAct_ConvertVector4ToRect_Out_420 = true;
   //pointer to script instanced logic node
   uScriptAct_DivideFloat logic_uScriptAct_DivideFloat_uScriptAct_DivideFloat_421 = new uScriptAct_DivideFloat( );
   System.Single logic_uScriptAct_DivideFloat_A_421 = (float) 0;
   System.Single logic_uScriptAct_DivideFloat_B_421 = (float) 0;
   System.Single logic_uScriptAct_DivideFloat_FloatResult_421;
   System.Int32 logic_uScriptAct_DivideFloat_IntResult_421;
   bool logic_uScriptAct_DivideFloat_Out_421 = true;
   //pointer to script instanced logic node
   uScriptAct_DivideInt logic_uScriptAct_DivideInt_uScriptAct_DivideInt_422 = new uScriptAct_DivideInt( );
   System.Int32 logic_uScriptAct_DivideInt_A_422 = (int) 0;
   System.Int32 logic_uScriptAct_DivideInt_B_422 = (int) 0;
   System.Int32 logic_uScriptAct_DivideInt_IntResult_422;
   System.Single logic_uScriptAct_DivideInt_FloatResult_422;
   bool logic_uScriptAct_DivideInt_Out_422 = true;
   //pointer to script instanced logic node
   uScriptAct_ExponentLogarithm logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423 = new uScriptAct_ExponentLogarithm( );
   System.Single logic_uScriptAct_ExponentLogarithm_input_423 = (float) 0;
   System.Single logic_uScriptAct_ExponentLogarithm_Power_423 = (float) 0;
   System.Single logic_uScriptAct_ExponentLogarithm_output_423;
   bool logic_uScriptAct_ExponentLogarithm_Out_423 = true;
   //pointer to script instanced logic node
   uScriptAct_FilterFloat logic_uScriptAct_FilterFloat_uScriptAct_FilterFloat_424 = new uScriptAct_FilterFloat( );
   System.Single logic_uScriptAct_FilterFloat_Target_424 = (float) 0;
   System.Single logic_uScriptAct_FilterFloat_FilterConstant_424 = (float) 0.1;
   System.Single logic_uScriptAct_FilterFloat_Value_424;
   bool logic_uScriptAct_FilterFloat_Out_424 = true;
   //pointer to script instanced logic node
   uScriptAct_FilterRect logic_uScriptAct_FilterRect_uScriptAct_FilterRect_425 = new uScriptAct_FilterRect( );
   UnityEngine.Rect logic_uScriptAct_FilterRect_Target_425 = new Rect( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_FilterRect_FilterConstant_425 = (float) 0.1;
   UnityEngine.Rect logic_uScriptAct_FilterRect_Value_425;
   bool logic_uScriptAct_FilterRect_Out_425 = true;
   //pointer to script instanced logic node
   uScriptAct_FilterVector logic_uScriptAct_FilterVector_uScriptAct_FilterVector_426 = new uScriptAct_FilterVector( );
   System.Object logic_uScriptAct_FilterVector_Target_426 = "";
   System.Single logic_uScriptAct_FilterVector_FilterConstant_426 = (float) 0.1;
   UnityEngine.Vector3 logic_uScriptAct_FilterVector_Value3_426;
   UnityEngine.Vector4 logic_uScriptAct_FilterVector_Value4_426;
   bool logic_uScriptAct_FilterVector_Out_426 = true;
   //pointer to script instanced logic node
   uScriptAct_FloatFunctions logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427 = new uScriptAct_FloatFunctions( );
   System.Single logic_uScriptAct_FloatFunctions_input_427 = (float) 0;
   System.Single logic_uScriptAct_FloatFunctions_output_427;
   bool logic_uScriptAct_FloatFunctions_Out_427 = true;
   //pointer to script instanced logic node
   uScriptAct_MathConstants logic_uScriptAct_MathConstants_uScriptAct_MathConstants_428 = new uScriptAct_MathConstants( );
   System.Single logic_uScriptAct_MathConstants_deg2Rad_428;
   System.Single logic_uScriptAct_MathConstants_rad2Deg_428;
   System.Single logic_uScriptAct_MathConstants_infinity_428;
   System.Single logic_uScriptAct_MathConstants_nInfinity_428;
   System.Single logic_uScriptAct_MathConstants_pi_428;
   bool logic_uScriptAct_MathConstants_Out_428 = true;
   //pointer to script instanced logic node
   uScriptAct_InvertBool logic_uScriptAct_InvertBool_uScriptAct_InvertBool_429 = new uScriptAct_InvertBool( );
   System.Boolean logic_uScriptAct_InvertBool_Target_429 = (bool) false;
   System.Boolean logic_uScriptAct_InvertBool_Value_429;
   bool logic_uScriptAct_InvertBool_Out_429 = true;
   //pointer to script instanced logic node
   uScriptAct_InvertFloat logic_uScriptAct_InvertFloat_uScriptAct_InvertFloat_430 = new uScriptAct_InvertFloat( );
   System.Single logic_uScriptAct_InvertFloat_Target_430 = (float) 0;
   System.Single logic_uScriptAct_InvertFloat_Value_430;
   bool logic_uScriptAct_InvertFloat_Out_430 = true;
   //pointer to script instanced logic node
   uScriptAct_InvertInt logic_uScriptAct_InvertInt_uScriptAct_InvertInt_431 = new uScriptAct_InvertInt( );
   System.Int32 logic_uScriptAct_InvertInt_Target_431 = (int) 0;
   System.Int32 logic_uScriptAct_InvertInt_Value_431;
   bool logic_uScriptAct_InvertInt_Out_431 = true;
   //pointer to script instanced logic node
   uScriptAct_InvertString logic_uScriptAct_InvertString_uScriptAct_InvertString_432 = new uScriptAct_InvertString( );
   System.String logic_uScriptAct_InvertString_Target_432 = "";
   System.String logic_uScriptAct_InvertString_Value_432;
   bool logic_uScriptAct_InvertString_Out_432 = true;
   //pointer to script instanced logic node
   uScriptAct_InvertVector2 logic_uScriptAct_InvertVector2_uScriptAct_InvertVector2_433 = new uScriptAct_InvertVector2( );
   UnityEngine.Vector2 logic_uScriptAct_InvertVector2_Target_433 = new Vector2( (float)0, (float)0 );
   System.Boolean logic_uScriptAct_InvertVector2_IgnoreX_433 = (bool) false;
   System.Boolean logic_uScriptAct_InvertVector2_IgnoreY_433 = (bool) false;
   UnityEngine.Vector2 logic_uScriptAct_InvertVector2_Value_433;
   bool logic_uScriptAct_InvertVector2_Out_433 = true;
   //pointer to script instanced logic node
   uScriptAct_InvertVector3 logic_uScriptAct_InvertVector3_uScriptAct_InvertVector3_434 = new uScriptAct_InvertVector3( );
   UnityEngine.Vector3 logic_uScriptAct_InvertVector3_Target_434 = new Vector3( (float)0, (float)0, (float)0 );
   System.Boolean logic_uScriptAct_InvertVector3_IgnoreX_434 = (bool) false;
   System.Boolean logic_uScriptAct_InvertVector3_IgnoreY_434 = (bool) false;
   System.Boolean logic_uScriptAct_InvertVector3_IgnoreZ_434 = (bool) false;
   UnityEngine.Vector3 logic_uScriptAct_InvertVector3_Value_434;
   bool logic_uScriptAct_InvertVector3_Out_434 = true;
   //pointer to script instanced logic node
   uScriptAct_InvertVector4 logic_uScriptAct_InvertVector4_uScriptAct_InvertVector4_435 = new uScriptAct_InvertVector4( );
   UnityEngine.Vector4 logic_uScriptAct_InvertVector4_Target_435 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   System.Boolean logic_uScriptAct_InvertVector4_IgnoreX_435 = (bool) false;
   System.Boolean logic_uScriptAct_InvertVector4_IgnoreY_435 = (bool) false;
   System.Boolean logic_uScriptAct_InvertVector4_IgnoreZ_435 = (bool) false;
   System.Boolean logic_uScriptAct_InvertVector4_IgnoreW_435 = (bool) false;
   UnityEngine.Vector4 logic_uScriptAct_InvertVector4_Value_435;
   bool logic_uScriptAct_InvertVector4_Out_435 = true;
   //pointer to script instanced logic node
   uScriptAct_MaxFloat logic_uScriptAct_MaxFloat_uScriptAct_MaxFloat_436 = new uScriptAct_MaxFloat( );
   System.Single[] logic_uScriptAct_MaxFloat_Values_436 = new System.Single[] {};
   System.Single logic_uScriptAct_MaxFloat_Result_436;
   bool logic_uScriptAct_MaxFloat_Out_436 = true;
   //pointer to script instanced logic node
   uScriptAct_MaxInt logic_uScriptAct_MaxInt_uScriptAct_MaxInt_437 = new uScriptAct_MaxInt( );
   System.Int32[] logic_uScriptAct_MaxInt_Values_437 = new System.Int32[] {};
   System.Int32 logic_uScriptAct_MaxInt_Result_437;
   bool logic_uScriptAct_MaxInt_Out_437 = true;
   //pointer to script instanced logic node
   uScriptAct_MinFloat logic_uScriptAct_MinFloat_uScriptAct_MinFloat_438 = new uScriptAct_MinFloat( );
   System.Single[] logic_uScriptAct_MinFloat_Values_438 = new System.Single[] {};
   System.Single logic_uScriptAct_MinFloat_Result_438;
   bool logic_uScriptAct_MinFloat_Out_438 = true;
   //pointer to script instanced logic node
   uScriptAct_MinInt logic_uScriptAct_MinInt_uScriptAct_MinInt_439 = new uScriptAct_MinInt( );
   System.Int32[] logic_uScriptAct_MinInt_Values_439 = new System.Int32[] {};
   System.Int32 logic_uScriptAct_MinInt_Result_439;
   bool logic_uScriptAct_MinInt_Out_439 = true;
   //pointer to script instanced logic node
   uScriptAct_MultiplyFloat logic_uScriptAct_MultiplyFloat_uScriptAct_MultiplyFloat_440 = new uScriptAct_MultiplyFloat( );
   System.Single[] logic_uScriptAct_MultiplyFloat_A_440 = new System.Single[] {};
   System.Single[] logic_uScriptAct_MultiplyFloat_B_440 = new System.Single[] {};
   System.Single logic_uScriptAct_MultiplyFloat_FloatResult_440;
   System.Int32 logic_uScriptAct_MultiplyFloat_IntResult_440;
   bool logic_uScriptAct_MultiplyFloat_Out_440 = true;
   //pointer to script instanced logic node
   uScriptAct_MultiplyInt logic_uScriptAct_MultiplyInt_uScriptAct_MultiplyInt_441 = new uScriptAct_MultiplyInt( );
   System.Int32[] logic_uScriptAct_MultiplyInt_A_441 = new System.Int32[] {};
   System.Int32[] logic_uScriptAct_MultiplyInt_B_441 = new System.Int32[] {};
   System.Int32 logic_uScriptAct_MultiplyInt_IntResult_441;
   System.Single logic_uScriptAct_MultiplyInt_FloatResult_441;
   bool logic_uScriptAct_MultiplyInt_Out_441 = true;
   //pointer to script instanced logic node
   uScriptAct_QuaternionEuler logic_uScriptAct_QuaternionEuler_uScriptAct_QuaternionEuler_442 = new uScriptAct_QuaternionEuler( );
   System.Single logic_uScriptAct_QuaternionEuler_x_442 = (float) 0;
   System.Single logic_uScriptAct_QuaternionEuler_y_442 = (float) 0;
   System.Single logic_uScriptAct_QuaternionEuler_z_442 = (float) 0;
   UnityEngine.Quaternion logic_uScriptAct_QuaternionEuler_result_442;
   bool logic_uScriptAct_QuaternionEuler_Out_442 = true;
   //pointer to script instanced logic node
   uScriptAct_QuaternionFromVectors logic_uScriptAct_QuaternionFromVectors_uScriptAct_QuaternionFromVectors_443 = new uScriptAct_QuaternionFromVectors( );
   UnityEngine.Vector3 logic_uScriptAct_QuaternionFromVectors_forward_443 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_QuaternionFromVectors_up_443 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Quaternion logic_uScriptAct_QuaternionFromVectors_result_443;
   bool logic_uScriptAct_QuaternionFromVectors_Out_443 = true;
   //pointer to script instanced logic node
   uScriptAct_RoundFloat logic_uScriptAct_RoundFloat_uScriptAct_RoundFloat_444 = new uScriptAct_RoundFloat( );
   System.Single logic_uScriptAct_RoundFloat_Target_444 = (float) 0;
   System.Single logic_uScriptAct_RoundFloat_FloatResult_444;
   System.Int32 logic_uScriptAct_RoundFloat_IntResult_444;
   bool logic_uScriptAct_RoundFloat_Out_444 = true;
   //pointer to script instanced logic node
   uScriptAct_ScaleVector2 logic_uScriptAct_ScaleVector2_uScriptAct_ScaleVector2_445 = new uScriptAct_ScaleVector2( );
   UnityEngine.Vector2 logic_uScriptAct_ScaleVector2_v_445 = new Vector2( (float)0, (float)0 );
   System.Single logic_uScriptAct_ScaleVector2_s_445 = (float) 0;
   UnityEngine.Vector2 logic_uScriptAct_ScaleVector2_result_445;
   bool logic_uScriptAct_ScaleVector2_Out_445 = true;
   //pointer to script instanced logic node
   uScriptAct_ScaleVector3 logic_uScriptAct_ScaleVector3_uScriptAct_ScaleVector3_446 = new uScriptAct_ScaleVector3( );
   UnityEngine.Vector3 logic_uScriptAct_ScaleVector3_v_446 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_ScaleVector3_s_446 = (float) 0;
   UnityEngine.Vector3 logic_uScriptAct_ScaleVector3_result_446;
   bool logic_uScriptAct_ScaleVector3_Out_446 = true;
   //pointer to script instanced logic node
   uScriptAct_ScaleVector4 logic_uScriptAct_ScaleVector4_uScriptAct_ScaleVector4_447 = new uScriptAct_ScaleVector4( );
   UnityEngine.Vector4 logic_uScriptAct_ScaleVector4_v_447 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   System.Single logic_uScriptAct_ScaleVector4_s_447 = (float) 0;
   UnityEngine.Vector4 logic_uScriptAct_ScaleVector4_result_447;
   bool logic_uScriptAct_ScaleVector4_Out_447 = true;
   //pointer to script instanced logic node
   uScriptAct_SubtractFloat logic_uScriptAct_SubtractFloat_uScriptAct_SubtractFloat_448 = new uScriptAct_SubtractFloat( );
   System.Single logic_uScriptAct_SubtractFloat_A_448 = (float) 0;
   System.Single logic_uScriptAct_SubtractFloat_B_448 = (float) 0;
   System.Single logic_uScriptAct_SubtractFloat_FloatResult_448;
   System.Int32 logic_uScriptAct_SubtractFloat_IntResult_448;
   bool logic_uScriptAct_SubtractFloat_Out_448 = true;
   //pointer to script instanced logic node
   uScriptAct_SubtractInt logic_uScriptAct_SubtractInt_uScriptAct_SubtractInt_449 = new uScriptAct_SubtractInt( );
   System.Int32 logic_uScriptAct_SubtractInt_A_449 = (int) 0;
   System.Int32 logic_uScriptAct_SubtractInt_B_449 = (int) 0;
   System.Int32 logic_uScriptAct_SubtractInt_IntResult_449;
   System.Single logic_uScriptAct_SubtractInt_FloatResult_449;
   bool logic_uScriptAct_SubtractInt_Out_449 = true;
   //pointer to script instanced logic node
   uScriptAct_SubtractRect logic_uScriptAct_SubtractRect_uScriptAct_SubtractRect_450 = new uScriptAct_SubtractRect( );
   UnityEngine.Rect[] logic_uScriptAct_SubtractRect_A_450 = new Rect[] {};
   UnityEngine.Rect[] logic_uScriptAct_SubtractRect_B_450 = new Rect[] {};
   UnityEngine.Rect logic_uScriptAct_SubtractRect_Result_450;
   bool logic_uScriptAct_SubtractRect_Out_450 = true;
   //pointer to script instanced logic node
   uScriptAct_SubtractVector2 logic_uScriptAct_SubtractVector2_uScriptAct_SubtractVector2_451 = new uScriptAct_SubtractVector2( );
   UnityEngine.Vector2 logic_uScriptAct_SubtractVector2_A_451 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_SubtractVector2_B_451 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 logic_uScriptAct_SubtractVector2_Result_451;
   bool logic_uScriptAct_SubtractVector2_Out_451 = true;
   //pointer to script instanced logic node
   uScriptAct_SubtractVector3 logic_uScriptAct_SubtractVector3_uScriptAct_SubtractVector3_452 = new uScriptAct_SubtractVector3( );
   UnityEngine.Vector3 logic_uScriptAct_SubtractVector3_A_452 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_SubtractVector3_B_452 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_SubtractVector3_Result_452;
   bool logic_uScriptAct_SubtractVector3_Out_452 = true;
   //pointer to script instanced logic node
   uScriptAct_SubtractVector4 logic_uScriptAct_SubtractVector4_uScriptAct_SubtractVector4_453 = new uScriptAct_SubtractVector4( );
   UnityEngine.Vector4[] logic_uScriptAct_SubtractVector4_A_453 = new Vector4[] {};
   UnityEngine.Vector4[] logic_uScriptAct_SubtractVector4_B_453 = new Vector4[] {};
   UnityEngine.Vector4 logic_uScriptAct_SubtractVector4_Result_453;
   bool logic_uScriptAct_SubtractVector4_Out_453 = true;
   //pointer to script instanced logic node
   uScriptAct_VectorsFromQuaternion logic_uScriptAct_VectorsFromQuaternion_uScriptAct_VectorsFromQuaternion_454 = new uScriptAct_VectorsFromQuaternion( );
   UnityEngine.Quaternion logic_uScriptAct_VectorsFromQuaternion_quaternion_454 = new Quaternion( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 logic_uScriptAct_VectorsFromQuaternion_forward_454;
   UnityEngine.Vector3 logic_uScriptAct_VectorsFromQuaternion_up_454;
   UnityEngine.Vector3 logic_uScriptAct_VectorsFromQuaternion_right_454;
   bool logic_uScriptAct_VectorsFromQuaternion_Out_454 = true;
   //pointer to script instanced logic node
   uScriptAct_Trigonometry logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455 = new uScriptAct_Trigonometry( );
   System.Single logic_uScriptAct_Trigonometry_input_455 = (float) 0;
   System.Single logic_uScriptAct_Trigonometry_output_455;
   bool logic_uScriptAct_Trigonometry_Out_455 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_456 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_456 = "";
   System.Object[] logic_uScriptAct_Log_Target_456 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_456 = "";
   bool logic_uScriptAct_Log_Out_456 = true;
   //pointer to script instanced logic node
   CodeGenTest_Nested logic_CodeGenTest_Nested_CodeGenTest_Nested_458 = new CodeGenTest_Nested( );
   System.Object logic_CodeGenTest_Nested_Socket_1_458 = "";
   System.Object[] logic_CodeGenTest_Nested_Int_Name_Test_458 = new System.Object[] {};
   System.Object logic_CodeGenTest_Nested_Socket_3_458 = "";
   //pointer to script instanced logic node
   uScriptAct_AccessListAudioClip logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465 = new uScriptAct_AccessListAudioClip( );
   UnityEngine.AudioClip[] logic_uScriptAct_AccessListAudioClip_List_465 = new UnityEngine.AudioClip[ 0 ];
   System.Int32 logic_uScriptAct_AccessListAudioClip_Index_465 = (int) 0;
   UnityEngine.AudioClip logic_uScriptAct_AccessListAudioClip_Value_465;
   bool logic_uScriptAct_AccessListAudioClip_Out_465 = true;
   //pointer to script instanced logic node
   uScriptAct_ForEachListAudioClip logic_uScriptAct_ForEachListAudioClip_uScriptAct_ForEachListAudioClip_466 = new uScriptAct_ForEachListAudioClip( );
   UnityEngine.AudioClip[] logic_uScriptAct_ForEachListAudioClip_List_466 = new UnityEngine.AudioClip[ 0 ];
   UnityEngine.AudioClip logic_uScriptAct_ForEachListAudioClip_Value_466;
   System.Int32 logic_uScriptAct_ForEachListAudioClip_currentIndex_466;
   bool logic_uScriptAct_ForEachListAudioClip_Immediate_466 = true;
   bool logic_uScriptAct_ForEachListAudioClip_Done_466 = true;
   bool logic_uScriptAct_ForEachListAudioClip_Iteration_466 = true;
   //pointer to script instanced logic node
   uScriptAct_ForEachListAudioClipAuto logic_uScriptAct_ForEachListAudioClipAuto_uScriptAct_ForEachListAudioClipAuto_468 = new uScriptAct_ForEachListAudioClipAuto( );
   UnityEngine.AudioClip[] logic_uScriptAct_ForEachListAudioClipAuto_List_468 = new UnityEngine.AudioClip[ 0 ];
   UnityEngine.AudioClip logic_uScriptAct_ForEachListAudioClipAuto_Value_468;
   System.Int32 logic_uScriptAct_ForEachListAudioClipAuto_currentIndex_468;
   bool logic_uScriptAct_ForEachListAudioClipAuto_Immediate_468 = true;
   bool logic_uScriptAct_ForEachListAudioClipAuto_Done_468 = true;
   bool logic_uScriptAct_ForEachListAudioClipAuto_Iteration_468 = true;
   bool logic_uScriptAct_ForEachListAudioClipAuto_Driven_468 = false;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_469 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_469 = "";
   System.Object[] logic_uScriptAct_Log_Target_469 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_469 = "";
   bool logic_uScriptAct_Log_Out_469 = true;
   //pointer to script instanced logic node
   uScriptAct_IsInListAudioClip logic_uScriptAct_IsInListAudioClip_uScriptAct_IsInListAudioClip_471 = new uScriptAct_IsInListAudioClip( );
   UnityEngine.AudioClip[] logic_uScriptAct_IsInListAudioClip_Target_471 = new UnityEngine.AudioClip[ 0 ];
   UnityEngine.AudioClip[] logic_uScriptAct_IsInListAudioClip_List_471 = new UnityEngine.AudioClip[ 0 ];
   System.Int32 logic_uScriptAct_IsInListAudioClip_Index_471;
   bool logic_uScriptAct_IsInListAudioClip_InList_471 = true;
   bool logic_uScriptAct_IsInListAudioClip_NotInList_471 = true;
   //pointer to script instanced logic node
   uScriptAct_ModifyListAudioClip logic_uScriptAct_ModifyListAudioClip_uScriptAct_ModifyListAudioClip_472 = new uScriptAct_ModifyListAudioClip( );
   UnityEngine.AudioClip[] logic_uScriptAct_ModifyListAudioClip_Target_472 = new UnityEngine.AudioClip[ 0 ];
   UnityEngine.AudioClip[] logic_uScriptAct_ModifyListAudioClip_List_472 = new UnityEngine.AudioClip[ 0 ];
   System.Int32 logic_uScriptAct_ModifyListAudioClip_ListCount_472;
   bool logic_uScriptAct_ModifyListAudioClip_Out_472 = true;
   //pointer to script instanced logic node
   uScriptAct_ReplaceValueInListAudioClip logic_uScriptAct_ReplaceValueInListAudioClip_uScriptAct_ReplaceValueInListAudioClip_473 = new uScriptAct_ReplaceValueInListAudioClip( );
   UnityEngine.AudioClip[] logic_uScriptAct_ReplaceValueInListAudioClip_TargetList_473 = new UnityEngine.AudioClip[ 0 ];
   UnityEngine.AudioClip logic_uScriptAct_ReplaceValueInListAudioClip_OldValue_473 = null;
   UnityEngine.AudioClip logic_uScriptAct_ReplaceValueInListAudioClip_NewValue_473 = null;
   UnityEngine.AudioClip[] logic_uScriptAct_ReplaceValueInListAudioClip_ModifiedList_473;
   System.Int32 logic_uScriptAct_ReplaceValueInListAudioClip_ValuesFound_473;
   bool logic_uScriptAct_ReplaceValueInListAudioClip_Out_473 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_478 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_478 = "";
   System.Object[] logic_uScriptAct_Log_Target_478 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_478 = "";
   bool logic_uScriptAct_Log_Out_478 = true;
   //pointer to script instanced logic node
   uScriptAct_GenerateMD5Hash logic_uScriptAct_GenerateMD5Hash_uScriptAct_GenerateMD5Hash_479 = new uScriptAct_GenerateMD5Hash( );
   System.String logic_uScriptAct_GenerateMD5Hash_Key_479 = "";
   System.String logic_uScriptAct_GenerateMD5Hash_Hash_479;
   bool logic_uScriptAct_GenerateMD5Hash_Out_479 = true;
   //pointer to script instanced logic node
   uScriptAct_CheckMD5Hash logic_uScriptAct_CheckMD5Hash_uScriptAct_CheckMD5Hash_480 = new uScriptAct_CheckMD5Hash( );
   System.String logic_uScriptAct_CheckMD5Hash_Key_480 = "";
   System.String logic_uScriptAct_CheckMD5Hash_Hash_480 = "";
   bool logic_uScriptAct_CheckMD5Hash_Good_480 = true;
   bool logic_uScriptAct_CheckMD5Hash_Bad_480 = true;
   //pointer to script instanced logic node
   uScriptAct_Log logic_uScriptAct_Log_uScriptAct_Log_481 = new uScriptAct_Log( );
   System.Object logic_uScriptAct_Log_Prefix_481 = "";
   System.Object[] logic_uScriptAct_Log_Target_481 = new System.Object[] {};
   System.Object logic_uScriptAct_Log_Postfix_481 = "";
   bool logic_uScriptAct_Log_Out_481 = true;
   //pointer to script instanced logic node
   uScriptAct_CreateGameObject logic_uScriptAct_CreateGameObject_uScriptAct_CreateGameObject_484 = new uScriptAct_CreateGameObject( );
   System.String logic_uScriptAct_CreateGameObject_Name_484 = "GameObject";
   UnityEngine.Vector3 logic_uScriptAct_CreateGameObject_Location_484 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.GameObject logic_uScriptAct_CreateGameObject_newGameObject_484;
   bool logic_uScriptAct_CreateGameObject_Out_484 = true;
   //pointer to script instanced logic node
   uScriptAct_SetParent logic_uScriptAct_SetParent_uScriptAct_SetParent_486 = new uScriptAct_SetParent( );
   UnityEngine.GameObject[] logic_uScriptAct_SetParent_Target_486 = new UnityEngine.GameObject[] {};
   UnityEngine.GameObject logic_uScriptAct_SetParent_Parent_486 = null;
   bool logic_uScriptAct_SetParent_Out_486 = true;
   
   //event nodes
   System.Boolean event_UnityEngine_GameObject_HasFocus_0 = (bool) false;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_0 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_1 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_7 = null;
   System.String event_UnityEngine_GameObject_EventName_7 = "";
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_8 = null;
   System.String event_UnityEngine_GameObject_EventName_8 = "";
   System.Boolean event_UnityEngine_GameObject_EventData_8 = (bool) false;
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_9 = null;
   System.String event_UnityEngine_GameObject_EventName_9 = "";
   UnityEngine.Color event_UnityEngine_GameObject_EventData_9 = new UnityEngine.Color( (float)0, (float)0, (float)0, (float)1 );
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_10 = null;
   System.String event_UnityEngine_GameObject_EventName_10 = "";
   System.Single event_UnityEngine_GameObject_EventData_10 = (float) 0;
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_11 = null;
   System.String event_UnityEngine_GameObject_EventName_11 = "";
   UnityEngine.GameObject event_UnityEngine_GameObject_EventData_11 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_12 = null;
   System.String event_UnityEngine_GameObject_EventName_12 = "";
   System.Int32 event_UnityEngine_GameObject_EventData_12 = (int) 0;
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_13 = null;
   System.String event_UnityEngine_GameObject_EventName_13 = "";
   UnityEngine.Object event_UnityEngine_GameObject_EventData_13 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_14 = null;
   System.String event_UnityEngine_GameObject_EventName_14 = "";
   System.String event_UnityEngine_GameObject_EventData_14 = "";
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_15 = null;
   System.String event_UnityEngine_GameObject_EventName_15 = "";
   UnityEngine.Vector2 event_UnityEngine_GameObject_EventData_15 = new Vector2( (float)0, (float)0 );
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_16 = null;
   System.String event_UnityEngine_GameObject_EventName_16 = "";
   UnityEngine.Vector3 event_UnityEngine_GameObject_EventData_16 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.GameObject event_UnityEngine_GameObject_Sender_17 = null;
   System.String event_UnityEngine_GameObject_EventName_17 = "";
   UnityEngine.Vector4 event_UnityEngine_GameObject_EventData_17 = new Vector4( (float)0, (float)0, (float)0, (float)0 );
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_21 = null;
   System.Boolean event_UnityEngine_GameObject_GUIChanged_22 = (bool) false;
   System.String event_UnityEngine_GameObject_FocusedControl_22 = "";
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_22 = null;
   System.Int32 event_UnityEngine_GameObject_Level_23 = (int) 0;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_23 = null;
   UnityEngine.Vector3 event_UnityEngine_GameObject_Acceleration_33 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single event_UnityEngine_GameObject_DeltaTime_33 = (float) 0;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_33 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_34 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_35 = null;
   System.Single event_UnityEngine_GameObject_Horizontal_36 = (float) 0;
   System.Single event_UnityEngine_GameObject_Vertical_36 = (float) 0;
   System.Boolean event_UnityEngine_GameObject_Fire1_36 = (bool) false;
   System.Boolean event_UnityEngine_GameObject_Fire2_36 = (bool) false;
   System.Boolean event_UnityEngine_GameObject_Fire3_36 = (bool) false;
   System.Boolean event_UnityEngine_GameObject_Jump_36 = (bool) false;
   System.Single event_UnityEngine_GameObject_MouseX_36 = (float) 0;
   System.Single event_UnityEngine_GameObject_MouseY_36 = (float) 0;
   System.Single event_UnityEngine_GameObject_MouseScrollWheel_36 = (float) 0;
   System.Single event_UnityEngine_GameObject_WindowShakeX_36 = (float) 0;
   System.Single event_UnityEngine_GameObject_WindowShakeY_36 = (float) 0;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_36 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_38 = null;
   System.Int32 event_UnityEngine_GameObject_FingerId_39 = (int) 0;
   UnityEngine.Vector2 event_UnityEngine_GameObject_Position_39 = new Vector2( (float)0, (float)0 );
   UnityEngine.Vector2 event_UnityEngine_GameObject_DeltaPosition_39 = new Vector2( (float)0, (float)0 );
   System.Single event_UnityEngine_GameObject_DeltaTime_39 = (float) 0;
   System.Int32 event_UnityEngine_GameObject_TapCount_39 = (int) 0;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_39 = null;
   System.String event_UnityEngine_GameObject_Failure_48 = "";
   UnityEngine.NetworkConnectionError event_UnityEngine_GameObject_Error_49 = UnityEngine.NetworkConnectionError.NoError;
   UnityEngine.NetworkMessageInfo event_UnityEngine_GameObject_MessageInfo_50 = new UnityEngine.NetworkMessageInfo( );
   UnityEngine.MasterServerEvent event_UnityEngine_GameObject_MasterServerEvent_51 = UnityEngine.MasterServerEvent.RegistrationFailedGameName;
   UnityEngine.BitStream event_UnityEngine_GameObject_BitStream_52 = null;
   UnityEngine.NetworkMessageInfo event_UnityEngine_GameObject_MessageInfo_52 = new UnityEngine.NetworkMessageInfo( );
   UnityEngine.NetworkPlayer event_UnityEngine_GameObject_NetworkPlayer_54 = new UnityEngine.NetworkPlayer( );
   UnityEngine.GameObject event_UnityEngine_GameObject_GameObject_56 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_GameObject_58 = null;
   UnityEngine.CharacterController event_UnityEngine_GameObject_Controller_58 = null;
   UnityEngine.Collider event_UnityEngine_GameObject_Collider_58 = null;
   UnityEngine.Rigidbody event_UnityEngine_GameObject_RigidBody_58 = null;
   UnityEngine.Transform event_UnityEngine_GameObject_Transform_58 = null;
   UnityEngine.Vector3 event_UnityEngine_GameObject_Point_58 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 event_UnityEngine_GameObject_Normal_58 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Vector3 event_UnityEngine_GameObject_MoveDirection_58 = new Vector3( (float)0, (float)0, (float)0 );
   System.Single event_UnityEngine_GameObject_MoveLength_58 = (float) 0;
   System.Single event_UnityEngine_GameObject_BreakForce_59 = (float) 0;
   UnityEngine.Vector3 event_UnityEngine_GameObject_RelativeVelocity_60 = new Vector3( (float)0, (float)0, (float)0 );
   UnityEngine.Rigidbody event_UnityEngine_GameObject_RigidBody_60 = null;
   UnityEngine.Collider event_UnityEngine_GameObject_Collider_60 = null;
   UnityEngine.Transform event_UnityEngine_GameObject_Transform_60 = null;
   UnityEngine.ContactPoint[] event_UnityEngine_GameObject_Contacts_60 = new UnityEngine.ContactPoint[ 0 ];
   UnityEngine.GameObject event_UnityEngine_GameObject_GameObject_60 = null;
   UnityEngine.RenderTexture event_UnityEngine_GameObject_SourceTexture_66 = null;
   UnityEngine.RenderTexture event_UnityEngine_GameObject_DestinationTexture_66 = null;
   System.Int32 event_UnityEngine_GameObject_TimesToTrigger_68 = (int) 0;
   UnityEngine.GameObject event_UnityEngine_GameObject_GameObject_68 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_73 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_140 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_164 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_194 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_225 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_274 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_347 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_396 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_410 = null;
   UnityEngine.GameObject event_UnityEngine_GameObject_Instance_459 = null;
   
   //property nodes
   
   //method nodes
   #pragma warning restore 414
   
   //functions to refresh properties from entities
   
   void SyncUnityHooks( )
   {
      SyncEventListeners( );
      //if our game object reference was changed then we need to reset event listeners
      if ( local_160_UnityEngine_GameObject_previous != local_160_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_160_UnityEngine_GameObject_previous = local_160_UnityEngine_GameObject;
         
         //setup new listeners
      }
      {
      };
      //if our game object reference was changed then we need to reset event listeners
      if ( local_189_UnityEngine_GameObject_previous != local_189_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_189_UnityEngine_GameObject_previous = local_189_UnityEngine_GameObject;
         
         //setup new listeners
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_303_UnityEngine_GameObject_previous != local_303_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_303_UnityEngine_GameObject_previous = local_303_UnityEngine_GameObject;
         
         //setup new listeners
      }
      if ( null == local_MasterGO_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         local_MasterGO_UnityEngine_GameObject = uScript_MasterComponent.LatestMaster;
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_MasterGO_UnityEngine_GameObject_previous != local_MasterGO_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         if ( null != local_MasterGO_UnityEngine_GameObject_previous )
         {
            {
               uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventColor>();
               if ( null != component )
               {
                  component.OnCustomEventColor -= Instance_OnCustomEventColor_9;
               }
            }
            {
               uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEvent>();
               if ( null != component )
               {
                  component.OnCustomEvent -= Instance_OnCustomEvent_7;
               }
            }
            {
               uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector4>();
               if ( null != component )
               {
                  component.OnCustomEventVector4 -= Instance_OnCustomEventVector4_17;
               }
            }
            {
               uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventObject>();
               if ( null != component )
               {
                  component.OnCustomEventObject -= Instance_OnCustomEventObject_13;
               }
            }
            {
               uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventInt>();
               if ( null != component )
               {
                  component.OnCustomEventInt -= Instance_OnCustomEventInt_12;
               }
            }
            {
               uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventFloat>();
               if ( null != component )
               {
                  component.OnCustomEventFloat -= Instance_OnCustomEventFloat_10;
               }
            }
            {
               uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventGameObject>();
               if ( null != component )
               {
                  component.OnCustomEventGameObject -= Instance_OnCustomEventGameObject_11;
               }
            }
            {
               uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector3>();
               if ( null != component )
               {
                  component.OnCustomEventVector3 -= Instance_OnCustomEventVector3_16;
               }
            }
            {
               uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventString>();
               if ( null != component )
               {
                  component.OnCustomEventString -= Instance_OnCustomEventString_14;
               }
            }
            {
               uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector2>();
               if ( null != component )
               {
                  component.OnCustomEventVector2 -= Instance_OnCustomEventVector2_15;
               }
            }
            {
               uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventBool>();
               if ( null != component )
               {
                  component.OnCustomEventBool -= Instance_OnCustomEventBool_8;
               }
            }
            {
               uScript_GameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_GameObject>();
               if ( null != component )
               {
                  component.EnableEvent -= Instance_EnableEvent_28;
                  component.DisableEvent -= Instance_DisableEvent_28;
                  component.DestroyEvent -= Instance_DestroyEvent_28;
               }
            }
            {
               uScript_Visibility component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Visibility>();
               if ( null != component )
               {
                  component.BecameVisible -= Instance_BecameVisible_29;
                  component.BecameInvisible -= Instance_BecameInvisible_29;
               }
            }
            {
               uScript_Mouse component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Mouse>();
               if ( null != component )
               {
                  component.OnEnter -= Instance_OnEnter_37;
                  component.OnOver -= Instance_OnOver_37;
                  component.OnExit -= Instance_OnExit_37;
                  component.OnDown -= Instance_OnDown_37;
                  component.OnUp -= Instance_OnUp_37;
                  component.OnDrag -= Instance_OnDrag_37;
               }
            }
            {
               uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkClientConnection>();
               if ( null != component )
               {
                  component.ConnectedToServer -= Instance_ConnectedToServer_48;
                  component.DisconnectedFromServer -= Instance_DisconnectedFromServer_48;
               }
            }
            {
               uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkFailedConnection>();
               if ( null != component )
               {
                  component.FailedToConnect -= Instance_FailedToConnect_49;
                  component.FailedToConnectToMaster -= Instance_FailedToConnectToMaster_49;
               }
            }
            {
               uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkInstantiate>();
               if ( null != component )
               {
                  component.OnInstantiate -= Instance_OnInstantiate_50;
               }
            }
            {
               uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkMasterServer>();
               if ( null != component )
               {
                  component.OnEvent -= Instance_OnEvent_51;
               }
            }
            {
               uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkSerialization>();
               if ( null != component )
               {
                  component.OnSerialize -= Instance_OnSerialize_52;
               }
            }
            {
               uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerInitialized>();
               if ( null != component )
               {
                  component.OnInitialized -= Instance_OnInitialized_53;
               }
            }
            {
               uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerPlayer>();
               if ( null != component )
               {
                  component.PlayerConnected -= Instance_PlayerConnected_54;
                  component.PlayerDisconnected -= Instance_PlayerDisconnected_54;
               }
            }
            {
               uScript_Particle component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Particle>();
               if ( null != component )
               {
                  component.Collision -= Instance_Collision_56;
               }
            }
            {
               uScript_Joint component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Joint>();
               if ( null != component )
               {
                  component.JointBreak -= Instance_JointBreak_59;
               }
            }
            {
               uScript_Collision component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Collision>();
               if ( null != component )
               {
                  component.OnEnterCollision -= Instance_OnEnterCollision_60;
                  component.OnExitCollision -= Instance_OnExitCollision_60;
                  component.WhileInsideCollision -= Instance_WhileInsideCollision_60;
               }
            }
            {
               uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_ProxyController>();
               if ( null != component )
               {
                  component.OnHit -= Instance_OnHit_58;
               }
            }
            {
               uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_PostEffect>();
               if ( null != component )
               {
                  component.RenderImage -= Instance_RenderImage_66;
               }
            }
            {
               uScript_Render component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Render>();
               if ( null != component )
               {
                  component.PreCull -= Instance_PreCull_67;
                  component.PreRender -= Instance_PreRender_67;
                  component.PostRender -= Instance_PostRender_67;
                  component.RenderObject -= Instance_RenderObject_67;
                  component.WillRenderObject -= Instance_WillRenderObject_67;
               }
            }
            {
               uScript_Triggers component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Triggers>();
               if ( null != component )
               {
                  component.OnEnterTrigger -= Instance_OnEnterTrigger_68;
                  component.OnExitTrigger -= Instance_OnExitTrigger_68;
                  component.WhileInsideTrigger -= Instance_WhileInsideTrigger_68;
               }
            }
         }
         
         local_MasterGO_UnityEngine_GameObject_previous = local_MasterGO_UnityEngine_GameObject;
         
         //setup new listeners
         if ( null != local_MasterGO_UnityEngine_GameObject )
         {
            {
               uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventColor>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventColor>();
               }
               if ( null != component )
               {
                  component.OnCustomEventColor += Instance_OnCustomEventColor_9;
               }
            }
            {
               uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEvent>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEvent>();
               }
               if ( null != component )
               {
                  component.OnCustomEvent += Instance_OnCustomEvent_7;
               }
            }
            {
               uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector4>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector4>();
               }
               if ( null != component )
               {
                  component.OnCustomEventVector4 += Instance_OnCustomEventVector4_17;
               }
            }
            {
               uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventObject>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventObject>();
               }
               if ( null != component )
               {
                  component.OnCustomEventObject += Instance_OnCustomEventObject_13;
               }
            }
            {
               uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventInt>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventInt>();
               }
               if ( null != component )
               {
                  component.OnCustomEventInt += Instance_OnCustomEventInt_12;
               }
            }
            {
               uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventFloat>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventFloat>();
               }
               if ( null != component )
               {
                  component.OnCustomEventFloat += Instance_OnCustomEventFloat_10;
               }
            }
            {
               uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventGameObject>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventGameObject>();
               }
               if ( null != component )
               {
                  component.OnCustomEventGameObject += Instance_OnCustomEventGameObject_11;
               }
            }
            {
               uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector3>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector3>();
               }
               if ( null != component )
               {
                  component.OnCustomEventVector3 += Instance_OnCustomEventVector3_16;
               }
            }
            {
               uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventString>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventString>();
               }
               if ( null != component )
               {
                  component.OnCustomEventString += Instance_OnCustomEventString_14;
               }
            }
            {
               uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector2>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector2>();
               }
               if ( null != component )
               {
                  component.OnCustomEventVector2 += Instance_OnCustomEventVector2_15;
               }
            }
            {
               uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventBool>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventBool>();
               }
               if ( null != component )
               {
                  component.OnCustomEventBool += Instance_OnCustomEventBool_8;
               }
            }
            {
               uScript_GameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_GameObject>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_GameObject>();
               }
               if ( null != component )
               {
                  component.EnableEvent += Instance_EnableEvent_28;
                  component.DisableEvent += Instance_DisableEvent_28;
                  component.DestroyEvent += Instance_DestroyEvent_28;
               }
            }
            {
               uScript_Visibility component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Visibility>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Visibility>();
               }
               if ( null != component )
               {
                  component.BecameVisible += Instance_BecameVisible_29;
                  component.BecameInvisible += Instance_BecameInvisible_29;
               }
            }
            {
               uScript_Mouse component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Mouse>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Mouse>();
               }
               if ( null != component )
               {
                  component.OnEnter += Instance_OnEnter_37;
                  component.OnOver += Instance_OnOver_37;
                  component.OnExit += Instance_OnExit_37;
                  component.OnDown += Instance_OnDown_37;
                  component.OnUp += Instance_OnUp_37;
                  component.OnDrag += Instance_OnDrag_37;
               }
            }
            {
               uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkClientConnection>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkClientConnection>();
               }
               if ( null != component )
               {
                  component.ConnectedToServer += Instance_ConnectedToServer_48;
                  component.DisconnectedFromServer += Instance_DisconnectedFromServer_48;
               }
            }
            {
               uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkFailedConnection>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkFailedConnection>();
               }
               if ( null != component )
               {
                  component.FailedToConnect += Instance_FailedToConnect_49;
                  component.FailedToConnectToMaster += Instance_FailedToConnectToMaster_49;
               }
            }
            {
               uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkInstantiate>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkInstantiate>();
               }
               if ( null != component )
               {
                  component.OnInstantiate += Instance_OnInstantiate_50;
               }
            }
            {
               uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkMasterServer>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkMasterServer>();
               }
               if ( null != component )
               {
                  component.OnEvent += Instance_OnEvent_51;
               }
            }
            {
               uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkSerialization>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkSerialization>();
               }
               if ( null != component )
               {
                  component.OnSerialize += Instance_OnSerialize_52;
               }
            }
            {
               uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerInitialized>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerInitialized>();
               }
               if ( null != component )
               {
                  component.OnInitialized += Instance_OnInitialized_53;
               }
            }
            {
               uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerPlayer>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerPlayer>();
               }
               if ( null != component )
               {
                  component.PlayerConnected += Instance_PlayerConnected_54;
                  component.PlayerDisconnected += Instance_PlayerDisconnected_54;
               }
            }
            {
               uScript_Particle component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Particle>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Particle>();
               }
               if ( null != component )
               {
                  component.Collision += Instance_Collision_56;
               }
            }
            {
               uScript_Joint component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Joint>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Joint>();
               }
               if ( null != component )
               {
                  component.JointBreak += Instance_JointBreak_59;
               }
            }
            {
               uScript_Collision component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Collision>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Collision>();
               }
               if ( null != component )
               {
                  component.OnEnterCollision += Instance_OnEnterCollision_60;
                  component.OnExitCollision += Instance_OnExitCollision_60;
                  component.WhileInsideCollision += Instance_WhileInsideCollision_60;
               }
            }
            {
               uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_ProxyController>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_ProxyController>();
               }
               if ( null != component )
               {
                  component.OnHit += Instance_OnHit_58;
               }
            }
            {
               uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_PostEffect>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_PostEffect>();
               }
               if ( null != component )
               {
                  component.RenderImage += Instance_RenderImage_66;
               }
            }
            {
               uScript_Render component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Render>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Render>();
               }
               if ( null != component )
               {
                  component.PreCull += Instance_PreCull_67;
                  component.PreRender += Instance_PreRender_67;
                  component.PostRender += Instance_PostRender_67;
                  component.RenderObject += Instance_RenderObject_67;
                  component.WillRenderObject += Instance_WillRenderObject_67;
               }
            }
            {
               uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
               }
               if ( null != component )
               {
                  component.TimesToTrigger = event_UnityEngine_GameObject_TimesToTrigger_68;
               }
            }
            {
               uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
               }
               if ( null != component )
               {
                  component.OnEnterTrigger += Instance_OnEnterTrigger_68;
                  component.OnExitTrigger += Instance_OnExitTrigger_68;
                  component.WhileInsideTrigger += Instance_WhileInsideTrigger_68;
               }
            }
         }
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_392_UnityEngine_GameObject_previous != local_392_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_392_UnityEngine_GameObject_previous = local_392_UnityEngine_GameObject;
         
         //setup new listeners
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_485_UnityEngine_GameObject_previous != local_485_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_485_UnityEngine_GameObject_previous = local_485_UnityEngine_GameObject;
         
         //setup new listeners
      }
      if ( null == owner_Connection_460 || false == m_RegisteredForEvents )
      {
         owner_Connection_460 = parentGameObject;
      }
   }
   
   void RegisterForUnityHooks( )
   {
      SyncEventListeners( );
      //if our game object reference was changed then we need to reset event listeners
      if ( local_160_UnityEngine_GameObject_previous != local_160_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_160_UnityEngine_GameObject_previous = local_160_UnityEngine_GameObject;
         
         //setup new listeners
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_189_UnityEngine_GameObject_previous != local_189_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_189_UnityEngine_GameObject_previous = local_189_UnityEngine_GameObject;
         
         //setup new listeners
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_303_UnityEngine_GameObject_previous != local_303_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_303_UnityEngine_GameObject_previous = local_303_UnityEngine_GameObject;
         
         //setup new listeners
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_MasterGO_UnityEngine_GameObject_previous != local_MasterGO_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         if ( null != local_MasterGO_UnityEngine_GameObject_previous )
         {
            {
               uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventColor>();
               if ( null != component )
               {
                  component.OnCustomEventColor -= Instance_OnCustomEventColor_9;
               }
            }
            {
               uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEvent>();
               if ( null != component )
               {
                  component.OnCustomEvent -= Instance_OnCustomEvent_7;
               }
            }
            {
               uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector4>();
               if ( null != component )
               {
                  component.OnCustomEventVector4 -= Instance_OnCustomEventVector4_17;
               }
            }
            {
               uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventObject>();
               if ( null != component )
               {
                  component.OnCustomEventObject -= Instance_OnCustomEventObject_13;
               }
            }
            {
               uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventInt>();
               if ( null != component )
               {
                  component.OnCustomEventInt -= Instance_OnCustomEventInt_12;
               }
            }
            {
               uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventFloat>();
               if ( null != component )
               {
                  component.OnCustomEventFloat -= Instance_OnCustomEventFloat_10;
               }
            }
            {
               uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventGameObject>();
               if ( null != component )
               {
                  component.OnCustomEventGameObject -= Instance_OnCustomEventGameObject_11;
               }
            }
            {
               uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector3>();
               if ( null != component )
               {
                  component.OnCustomEventVector3 -= Instance_OnCustomEventVector3_16;
               }
            }
            {
               uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventString>();
               if ( null != component )
               {
                  component.OnCustomEventString -= Instance_OnCustomEventString_14;
               }
            }
            {
               uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector2>();
               if ( null != component )
               {
                  component.OnCustomEventVector2 -= Instance_OnCustomEventVector2_15;
               }
            }
            {
               uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventBool>();
               if ( null != component )
               {
                  component.OnCustomEventBool -= Instance_OnCustomEventBool_8;
               }
            }
            {
               uScript_GameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_GameObject>();
               if ( null != component )
               {
                  component.EnableEvent -= Instance_EnableEvent_28;
                  component.DisableEvent -= Instance_DisableEvent_28;
                  component.DestroyEvent -= Instance_DestroyEvent_28;
               }
            }
            {
               uScript_Visibility component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Visibility>();
               if ( null != component )
               {
                  component.BecameVisible -= Instance_BecameVisible_29;
                  component.BecameInvisible -= Instance_BecameInvisible_29;
               }
            }
            {
               uScript_Mouse component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Mouse>();
               if ( null != component )
               {
                  component.OnEnter -= Instance_OnEnter_37;
                  component.OnOver -= Instance_OnOver_37;
                  component.OnExit -= Instance_OnExit_37;
                  component.OnDown -= Instance_OnDown_37;
                  component.OnUp -= Instance_OnUp_37;
                  component.OnDrag -= Instance_OnDrag_37;
               }
            }
            {
               uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkClientConnection>();
               if ( null != component )
               {
                  component.ConnectedToServer -= Instance_ConnectedToServer_48;
                  component.DisconnectedFromServer -= Instance_DisconnectedFromServer_48;
               }
            }
            {
               uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkFailedConnection>();
               if ( null != component )
               {
                  component.FailedToConnect -= Instance_FailedToConnect_49;
                  component.FailedToConnectToMaster -= Instance_FailedToConnectToMaster_49;
               }
            }
            {
               uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkInstantiate>();
               if ( null != component )
               {
                  component.OnInstantiate -= Instance_OnInstantiate_50;
               }
            }
            {
               uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkMasterServer>();
               if ( null != component )
               {
                  component.OnEvent -= Instance_OnEvent_51;
               }
            }
            {
               uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkSerialization>();
               if ( null != component )
               {
                  component.OnSerialize -= Instance_OnSerialize_52;
               }
            }
            {
               uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerInitialized>();
               if ( null != component )
               {
                  component.OnInitialized -= Instance_OnInitialized_53;
               }
            }
            {
               uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerPlayer>();
               if ( null != component )
               {
                  component.PlayerConnected -= Instance_PlayerConnected_54;
                  component.PlayerDisconnected -= Instance_PlayerDisconnected_54;
               }
            }
            {
               uScript_Particle component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Particle>();
               if ( null != component )
               {
                  component.Collision -= Instance_Collision_56;
               }
            }
            {
               uScript_Joint component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Joint>();
               if ( null != component )
               {
                  component.JointBreak -= Instance_JointBreak_59;
               }
            }
            {
               uScript_Collision component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Collision>();
               if ( null != component )
               {
                  component.OnEnterCollision -= Instance_OnEnterCollision_60;
                  component.OnExitCollision -= Instance_OnExitCollision_60;
                  component.WhileInsideCollision -= Instance_WhileInsideCollision_60;
               }
            }
            {
               uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_ProxyController>();
               if ( null != component )
               {
                  component.OnHit -= Instance_OnHit_58;
               }
            }
            {
               uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_PostEffect>();
               if ( null != component )
               {
                  component.RenderImage -= Instance_RenderImage_66;
               }
            }
            {
               uScript_Render component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Render>();
               if ( null != component )
               {
                  component.PreCull -= Instance_PreCull_67;
                  component.PreRender -= Instance_PreRender_67;
                  component.PostRender -= Instance_PostRender_67;
                  component.RenderObject -= Instance_RenderObject_67;
                  component.WillRenderObject -= Instance_WillRenderObject_67;
               }
            }
            {
               uScript_Triggers component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Triggers>();
               if ( null != component )
               {
                  component.OnEnterTrigger -= Instance_OnEnterTrigger_68;
                  component.OnExitTrigger -= Instance_OnExitTrigger_68;
                  component.WhileInsideTrigger -= Instance_WhileInsideTrigger_68;
               }
            }
         }
         
         local_MasterGO_UnityEngine_GameObject_previous = local_MasterGO_UnityEngine_GameObject;
         
         //setup new listeners
         if ( null != local_MasterGO_UnityEngine_GameObject )
         {
            {
               uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventColor>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventColor>();
               }
               if ( null != component )
               {
                  component.OnCustomEventColor += Instance_OnCustomEventColor_9;
               }
            }
            {
               uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEvent>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEvent>();
               }
               if ( null != component )
               {
                  component.OnCustomEvent += Instance_OnCustomEvent_7;
               }
            }
            {
               uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector4>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector4>();
               }
               if ( null != component )
               {
                  component.OnCustomEventVector4 += Instance_OnCustomEventVector4_17;
               }
            }
            {
               uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventObject>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventObject>();
               }
               if ( null != component )
               {
                  component.OnCustomEventObject += Instance_OnCustomEventObject_13;
               }
            }
            {
               uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventInt>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventInt>();
               }
               if ( null != component )
               {
                  component.OnCustomEventInt += Instance_OnCustomEventInt_12;
               }
            }
            {
               uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventFloat>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventFloat>();
               }
               if ( null != component )
               {
                  component.OnCustomEventFloat += Instance_OnCustomEventFloat_10;
               }
            }
            {
               uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventGameObject>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventGameObject>();
               }
               if ( null != component )
               {
                  component.OnCustomEventGameObject += Instance_OnCustomEventGameObject_11;
               }
            }
            {
               uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector3>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector3>();
               }
               if ( null != component )
               {
                  component.OnCustomEventVector3 += Instance_OnCustomEventVector3_16;
               }
            }
            {
               uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventString>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventString>();
               }
               if ( null != component )
               {
                  component.OnCustomEventString += Instance_OnCustomEventString_14;
               }
            }
            {
               uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector2>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector2>();
               }
               if ( null != component )
               {
                  component.OnCustomEventVector2 += Instance_OnCustomEventVector2_15;
               }
            }
            {
               uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventBool>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventBool>();
               }
               if ( null != component )
               {
                  component.OnCustomEventBool += Instance_OnCustomEventBool_8;
               }
            }
            {
               uScript_GameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_GameObject>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_GameObject>();
               }
               if ( null != component )
               {
                  component.EnableEvent += Instance_EnableEvent_28;
                  component.DisableEvent += Instance_DisableEvent_28;
                  component.DestroyEvent += Instance_DestroyEvent_28;
               }
            }
            {
               uScript_Visibility component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Visibility>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Visibility>();
               }
               if ( null != component )
               {
                  component.BecameVisible += Instance_BecameVisible_29;
                  component.BecameInvisible += Instance_BecameInvisible_29;
               }
            }
            {
               uScript_Mouse component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Mouse>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Mouse>();
               }
               if ( null != component )
               {
                  component.OnEnter += Instance_OnEnter_37;
                  component.OnOver += Instance_OnOver_37;
                  component.OnExit += Instance_OnExit_37;
                  component.OnDown += Instance_OnDown_37;
                  component.OnUp += Instance_OnUp_37;
                  component.OnDrag += Instance_OnDrag_37;
               }
            }
            {
               uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkClientConnection>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkClientConnection>();
               }
               if ( null != component )
               {
                  component.ConnectedToServer += Instance_ConnectedToServer_48;
                  component.DisconnectedFromServer += Instance_DisconnectedFromServer_48;
               }
            }
            {
               uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkFailedConnection>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkFailedConnection>();
               }
               if ( null != component )
               {
                  component.FailedToConnect += Instance_FailedToConnect_49;
                  component.FailedToConnectToMaster += Instance_FailedToConnectToMaster_49;
               }
            }
            {
               uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkInstantiate>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkInstantiate>();
               }
               if ( null != component )
               {
                  component.OnInstantiate += Instance_OnInstantiate_50;
               }
            }
            {
               uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkMasterServer>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkMasterServer>();
               }
               if ( null != component )
               {
                  component.OnEvent += Instance_OnEvent_51;
               }
            }
            {
               uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkSerialization>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkSerialization>();
               }
               if ( null != component )
               {
                  component.OnSerialize += Instance_OnSerialize_52;
               }
            }
            {
               uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerInitialized>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerInitialized>();
               }
               if ( null != component )
               {
                  component.OnInitialized += Instance_OnInitialized_53;
               }
            }
            {
               uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerPlayer>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerPlayer>();
               }
               if ( null != component )
               {
                  component.PlayerConnected += Instance_PlayerConnected_54;
                  component.PlayerDisconnected += Instance_PlayerDisconnected_54;
               }
            }
            {
               uScript_Particle component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Particle>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Particle>();
               }
               if ( null != component )
               {
                  component.Collision += Instance_Collision_56;
               }
            }
            {
               uScript_Joint component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Joint>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Joint>();
               }
               if ( null != component )
               {
                  component.JointBreak += Instance_JointBreak_59;
               }
            }
            {
               uScript_Collision component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Collision>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Collision>();
               }
               if ( null != component )
               {
                  component.OnEnterCollision += Instance_OnEnterCollision_60;
                  component.OnExitCollision += Instance_OnExitCollision_60;
                  component.WhileInsideCollision += Instance_WhileInsideCollision_60;
               }
            }
            {
               uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_ProxyController>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_ProxyController>();
               }
               if ( null != component )
               {
                  component.OnHit += Instance_OnHit_58;
               }
            }
            {
               uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_PostEffect>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_PostEffect>();
               }
               if ( null != component )
               {
                  component.RenderImage += Instance_RenderImage_66;
               }
            }
            {
               uScript_Render component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Render>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Render>();
               }
               if ( null != component )
               {
                  component.PreCull += Instance_PreCull_67;
                  component.PreRender += Instance_PreRender_67;
                  component.PostRender += Instance_PostRender_67;
                  component.RenderObject += Instance_RenderObject_67;
                  component.WillRenderObject += Instance_WillRenderObject_67;
               }
            }
            {
               uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
               }
               if ( null != component )
               {
                  component.TimesToTrigger = event_UnityEngine_GameObject_TimesToTrigger_68;
               }
            }
            {
               uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
               if ( null == component )
               {
                  component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
               }
               if ( null != component )
               {
                  component.OnEnterTrigger += Instance_OnEnterTrigger_68;
                  component.OnExitTrigger += Instance_OnExitTrigger_68;
                  component.WhileInsideTrigger += Instance_WhileInsideTrigger_68;
               }
            }
         }
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_392_UnityEngine_GameObject_previous != local_392_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_392_UnityEngine_GameObject_previous = local_392_UnityEngine_GameObject;
         
         //setup new listeners
      }
      //if our game object reference was changed then we need to reset event listeners
      if ( local_485_UnityEngine_GameObject_previous != local_485_UnityEngine_GameObject || false == m_RegisteredForEvents )
      {
         //tear down old listeners
         
         local_485_UnityEngine_GameObject_previous = local_485_UnityEngine_GameObject;
         
         //setup new listeners
      }
   }
   
   void SyncEventListeners( )
   {
      if ( null == event_UnityEngine_GameObject_Instance_0 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_0 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_0 )
         {
            {
               uScript_ApplicationFocus component = event_UnityEngine_GameObject_Instance_0.GetComponent<uScript_ApplicationFocus>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_0.AddComponent<uScript_ApplicationFocus>();
               }
               if ( null != component )
               {
                  component.FocusEvent += Instance_FocusEvent_0;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_1 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_1 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_1 )
         {
            {
               uScript_ApplicationQuit component = event_UnityEngine_GameObject_Instance_1.GetComponent<uScript_ApplicationQuit>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_1.AddComponent<uScript_ApplicationQuit>();
               }
               if ( null != component )
               {
                  component.QuitEvent += Instance_QuitEvent_1;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_21 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_21 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_21 )
         {
            {
               uScript_Update component = event_UnityEngine_GameObject_Instance_21.GetComponent<uScript_Update>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_21.AddComponent<uScript_Update>();
               }
               if ( null != component )
               {
                  component.OnUpdate += Instance_OnUpdate_21;
                  component.OnLateUpdate += Instance_OnLateUpdate_21;
                  component.OnFixedUpdate += Instance_OnFixedUpdate_21;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_22 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_22 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_22 )
         {
            {
               if ( null == thisScriptsOnGuiListener )
               {
                  //OnGUI need unique listeners so calls like GUI.depth will work across uScripts
                  thisScriptsOnGuiListener = event_UnityEngine_GameObject_Instance_22.AddComponent<uScript_GUI>();
               }
               uScript_GUI component = thisScriptsOnGuiListener;
               if ( null != component )
               {
                  component.OnGui += Instance_OnGui_22;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_23 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_23 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_23 )
         {
            {
               uScript_Level component = event_UnityEngine_GameObject_Instance_23.GetComponent<uScript_Level>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_23.AddComponent<uScript_Level>();
               }
               if ( null != component )
               {
                  component.LevelWasLoaded += Instance_LevelWasLoaded_23;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_33 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_33 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_33 )
         {
            {
               uScript_Accelerometer component = event_UnityEngine_GameObject_Instance_33.GetComponent<uScript_Accelerometer>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_33.AddComponent<uScript_Accelerometer>();
               }
               if ( null != component )
               {
                  component.OnAccelerationEvent += Instance_OnAccelerationEvent_33;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_34 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_34 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_34 )
         {
            {
               uScript_DeviceOrientation component = event_UnityEngine_GameObject_Instance_34.GetComponent<uScript_DeviceOrientation>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_34.AddComponent<uScript_DeviceOrientation>();
               }
               if ( null != component )
               {
                  component.OnDevicePortrait += Instance_OnDevicePortrait_34;
                  component.OnDevicePortraitUpsideDown += Instance_OnDevicePortraitUpsideDown_34;
                  component.OnDeviceLandscapeLeft += Instance_OnDeviceLandscapeLeft_34;
                  component.OnDeviceLandscapeRight += Instance_OnDeviceLandscapeRight_34;
                  component.OnDeviceFaceUp += Instance_OnDeviceFaceUp_34;
                  component.OnDeviceFaceDown += Instance_OnDeviceFaceDown_34;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_35 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_35 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_35 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_35.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_35.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_35;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_36 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_36 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_36 )
         {
            {
               uScript_ManagedInput component = event_UnityEngine_GameObject_Instance_36.GetComponent<uScript_ManagedInput>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_36.AddComponent<uScript_ManagedInput>();
               }
               if ( null != component )
               {
                  component.OnInputEvent += Instance_OnInputEvent_36;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_38 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_38 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_38 )
         {
            {
               uScript_OnScreenKeyboard component = event_UnityEngine_GameObject_Instance_38.GetComponent<uScript_OnScreenKeyboard>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_38.AddComponent<uScript_OnScreenKeyboard>();
               }
               if ( null != component )
               {
                  component.OnKeyboardSlidOut += Instance_OnKeyboardSlidOut_38;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_39 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_39 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_39 )
         {
            {
               uScript_Touch component = event_UnityEngine_GameObject_Instance_39.GetComponent<uScript_Touch>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_39.AddComponent<uScript_Touch>();
               }
               if ( null != component )
               {
                  component.OnTouchBegan += Instance_OnTouchBegan_39;
                  component.OnTouchMoved += Instance_OnTouchMoved_39;
                  component.OnTouchStationary += Instance_OnTouchStationary_39;
                  component.OnTouchEnded += Instance_OnTouchEnded_39;
                  component.OnTouchCanceled += Instance_OnTouchCanceled_39;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_73 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_73 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_73 )
         {
            {
               uScript_Global component = event_UnityEngine_GameObject_Instance_73.GetComponent<uScript_Global>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_73.AddComponent<uScript_Global>();
               }
               if ( null != component )
               {
                  component.uScriptStart += Instance_uScriptStart_73;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_140 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_140 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_140 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_140.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_140.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_140;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_164 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_164 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_164 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_164.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_164.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_164;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_194 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_194 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_194 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_194.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_194.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_194;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_225 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_225 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_225 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_225.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_225.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_225;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_274 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_274 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_274 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_274.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_274.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_274;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_347 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_347 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_347 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_347.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_347.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_347;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_396 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_396 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_396 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_396.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_396.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_396;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_410 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_410 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_410 )
         {
            {
               uScript_Input component = event_UnityEngine_GameObject_Instance_410.GetComponent<uScript_Input>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_410.AddComponent<uScript_Input>();
               }
               if ( null != component )
               {
                  component.KeyEvent += Instance_KeyEvent_410;
               }
            }
         }
      }
      if ( null == event_UnityEngine_GameObject_Instance_459 || false == m_RegisteredForEvents )
      {
         event_UnityEngine_GameObject_Instance_459 = uScript_MasterComponent.LatestMaster;
         if ( null != event_UnityEngine_GameObject_Instance_459 )
         {
            {
               uScript_Global component = event_UnityEngine_GameObject_Instance_459.GetComponent<uScript_Global>();
               if ( null == component )
               {
                  component = event_UnityEngine_GameObject_Instance_459.AddComponent<uScript_Global>();
               }
               if ( null != component )
               {
                  component.uScriptStart += Instance_uScriptStart_459;
               }
            }
         }
      }
   }
   
   void UnregisterEventListeners( )
   {
      {
      };
      if ( null != local_MasterGO_UnityEngine_GameObject )
      {
         {
            uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventColor>();
            if ( null != component )
            {
               component.OnCustomEventColor -= Instance_OnCustomEventColor_9;
            }
         }
         {
            uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEvent>();
            if ( null != component )
            {
               component.OnCustomEvent -= Instance_OnCustomEvent_7;
            }
         }
         {
            uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector4>();
            if ( null != component )
            {
               component.OnCustomEventVector4 -= Instance_OnCustomEventVector4_17;
            }
         }
         {
            uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventObject>();
            if ( null != component )
            {
               component.OnCustomEventObject -= Instance_OnCustomEventObject_13;
            }
         }
         {
            uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventInt>();
            if ( null != component )
            {
               component.OnCustomEventInt -= Instance_OnCustomEventInt_12;
            }
         }
         {
            uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventFloat>();
            if ( null != component )
            {
               component.OnCustomEventFloat -= Instance_OnCustomEventFloat_10;
            }
         }
         {
            uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventGameObject>();
            if ( null != component )
            {
               component.OnCustomEventGameObject -= Instance_OnCustomEventGameObject_11;
            }
         }
         {
            uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector3>();
            if ( null != component )
            {
               component.OnCustomEventVector3 -= Instance_OnCustomEventVector3_16;
            }
         }
         {
            uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventString>();
            if ( null != component )
            {
               component.OnCustomEventString -= Instance_OnCustomEventString_14;
            }
         }
         {
            uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector2>();
            if ( null != component )
            {
               component.OnCustomEventVector2 -= Instance_OnCustomEventVector2_15;
            }
         }
         {
            uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventBool>();
            if ( null != component )
            {
               component.OnCustomEventBool -= Instance_OnCustomEventBool_8;
            }
         }
         {
            uScript_GameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_GameObject>();
            if ( null != component )
            {
               component.EnableEvent -= Instance_EnableEvent_28;
               component.DisableEvent -= Instance_DisableEvent_28;
               component.DestroyEvent -= Instance_DestroyEvent_28;
            }
         }
         {
            uScript_Visibility component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Visibility>();
            if ( null != component )
            {
               component.BecameVisible -= Instance_BecameVisible_29;
               component.BecameInvisible -= Instance_BecameInvisible_29;
            }
         }
         {
            uScript_Mouse component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Mouse>();
            if ( null != component )
            {
               component.OnEnter -= Instance_OnEnter_37;
               component.OnOver -= Instance_OnOver_37;
               component.OnExit -= Instance_OnExit_37;
               component.OnDown -= Instance_OnDown_37;
               component.OnUp -= Instance_OnUp_37;
               component.OnDrag -= Instance_OnDrag_37;
            }
         }
         {
            uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkClientConnection>();
            if ( null != component )
            {
               component.ConnectedToServer -= Instance_ConnectedToServer_48;
               component.DisconnectedFromServer -= Instance_DisconnectedFromServer_48;
            }
         }
         {
            uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkFailedConnection>();
            if ( null != component )
            {
               component.FailedToConnect -= Instance_FailedToConnect_49;
               component.FailedToConnectToMaster -= Instance_FailedToConnectToMaster_49;
            }
         }
         {
            uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkInstantiate>();
            if ( null != component )
            {
               component.OnInstantiate -= Instance_OnInstantiate_50;
            }
         }
         {
            uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkMasterServer>();
            if ( null != component )
            {
               component.OnEvent -= Instance_OnEvent_51;
            }
         }
         {
            uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkSerialization>();
            if ( null != component )
            {
               component.OnSerialize -= Instance_OnSerialize_52;
            }
         }
         {
            uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerInitialized>();
            if ( null != component )
            {
               component.OnInitialized -= Instance_OnInitialized_53;
            }
         }
         {
            uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerPlayer>();
            if ( null != component )
            {
               component.PlayerConnected -= Instance_PlayerConnected_54;
               component.PlayerDisconnected -= Instance_PlayerDisconnected_54;
            }
         }
         {
            uScript_Particle component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Particle>();
            if ( null != component )
            {
               component.Collision -= Instance_Collision_56;
            }
         }
         {
            uScript_Joint component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Joint>();
            if ( null != component )
            {
               component.JointBreak -= Instance_JointBreak_59;
            }
         }
         {
            uScript_Collision component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Collision>();
            if ( null != component )
            {
               component.OnEnterCollision -= Instance_OnEnterCollision_60;
               component.OnExitCollision -= Instance_OnExitCollision_60;
               component.WhileInsideCollision -= Instance_WhileInsideCollision_60;
            }
         }
         {
            uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_ProxyController>();
            if ( null != component )
            {
               component.OnHit -= Instance_OnHit_58;
            }
         }
         {
            uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_PostEffect>();
            if ( null != component )
            {
               component.RenderImage -= Instance_RenderImage_66;
            }
         }
         {
            uScript_Render component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Render>();
            if ( null != component )
            {
               component.PreCull -= Instance_PreCull_67;
               component.PreRender -= Instance_PreRender_67;
               component.PostRender -= Instance_PostRender_67;
               component.RenderObject -= Instance_RenderObject_67;
               component.WillRenderObject -= Instance_WillRenderObject_67;
            }
         }
         {
            uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
            if ( null != component )
            {
               component.OnEnterTrigger -= Instance_OnEnterTrigger_68;
               component.OnExitTrigger -= Instance_OnExitTrigger_68;
               component.WhileInsideTrigger -= Instance_WhileInsideTrigger_68;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_0 )
      {
         {
            uScript_ApplicationFocus component = event_UnityEngine_GameObject_Instance_0.GetComponent<uScript_ApplicationFocus>();
            if ( null != component )
            {
               component.FocusEvent -= Instance_FocusEvent_0;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_1 )
      {
         {
            uScript_ApplicationQuit component = event_UnityEngine_GameObject_Instance_1.GetComponent<uScript_ApplicationQuit>();
            if ( null != component )
            {
               component.QuitEvent -= Instance_QuitEvent_1;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_21 )
      {
         {
            uScript_Update component = event_UnityEngine_GameObject_Instance_21.GetComponent<uScript_Update>();
            if ( null != component )
            {
               component.OnUpdate -= Instance_OnUpdate_21;
               component.OnLateUpdate -= Instance_OnLateUpdate_21;
               component.OnFixedUpdate -= Instance_OnFixedUpdate_21;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_22 )
      {
         {
            if ( null == thisScriptsOnGuiListener )
            {
               //OnGUI need unique listeners so calls like GUI.depth will work across uScripts
               thisScriptsOnGuiListener = event_UnityEngine_GameObject_Instance_22.AddComponent<uScript_GUI>();
            }
            uScript_GUI component = thisScriptsOnGuiListener;
            if ( null != component )
            {
               component.OnGui -= Instance_OnGui_22;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_23 )
      {
         {
            uScript_Level component = event_UnityEngine_GameObject_Instance_23.GetComponent<uScript_Level>();
            if ( null != component )
            {
               component.LevelWasLoaded -= Instance_LevelWasLoaded_23;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_33 )
      {
         {
            uScript_Accelerometer component = event_UnityEngine_GameObject_Instance_33.GetComponent<uScript_Accelerometer>();
            if ( null != component )
            {
               component.OnAccelerationEvent -= Instance_OnAccelerationEvent_33;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_34 )
      {
         {
            uScript_DeviceOrientation component = event_UnityEngine_GameObject_Instance_34.GetComponent<uScript_DeviceOrientation>();
            if ( null != component )
            {
               component.OnDevicePortrait -= Instance_OnDevicePortrait_34;
               component.OnDevicePortraitUpsideDown -= Instance_OnDevicePortraitUpsideDown_34;
               component.OnDeviceLandscapeLeft -= Instance_OnDeviceLandscapeLeft_34;
               component.OnDeviceLandscapeRight -= Instance_OnDeviceLandscapeRight_34;
               component.OnDeviceFaceUp -= Instance_OnDeviceFaceUp_34;
               component.OnDeviceFaceDown -= Instance_OnDeviceFaceDown_34;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_35 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_35.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_35;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_36 )
      {
         {
            uScript_ManagedInput component = event_UnityEngine_GameObject_Instance_36.GetComponent<uScript_ManagedInput>();
            if ( null != component )
            {
               component.OnInputEvent -= Instance_OnInputEvent_36;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_38 )
      {
         {
            uScript_OnScreenKeyboard component = event_UnityEngine_GameObject_Instance_38.GetComponent<uScript_OnScreenKeyboard>();
            if ( null != component )
            {
               component.OnKeyboardSlidOut -= Instance_OnKeyboardSlidOut_38;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_39 )
      {
         {
            uScript_Touch component = event_UnityEngine_GameObject_Instance_39.GetComponent<uScript_Touch>();
            if ( null != component )
            {
               component.OnTouchBegan -= Instance_OnTouchBegan_39;
               component.OnTouchMoved -= Instance_OnTouchMoved_39;
               component.OnTouchStationary -= Instance_OnTouchStationary_39;
               component.OnTouchEnded -= Instance_OnTouchEnded_39;
               component.OnTouchCanceled -= Instance_OnTouchCanceled_39;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_73 )
      {
         {
            uScript_Global component = event_UnityEngine_GameObject_Instance_73.GetComponent<uScript_Global>();
            if ( null != component )
            {
               component.uScriptStart -= Instance_uScriptStart_73;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_140 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_140.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_140;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_164 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_164.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_164;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_194 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_194.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_194;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_225 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_225.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_225;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_274 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_274.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_274;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_347 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_347.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_347;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_396 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_396.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_396;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_410 )
      {
         {
            uScript_Input component = event_UnityEngine_GameObject_Instance_410.GetComponent<uScript_Input>();
            if ( null != component )
            {
               component.KeyEvent -= Instance_KeyEvent_410;
            }
         }
      }
      if ( null != event_UnityEngine_GameObject_Instance_459 )
      {
         {
            uScript_Global component = event_UnityEngine_GameObject_Instance_459.GetComponent<uScript_Global>();
            if ( null != component )
            {
               component.uScriptStart -= Instance_uScriptStart_459;
            }
         }
      }
   }
   
   public override void SetParent(GameObject g)
   {
      parentGameObject = g;
      
      logic_uScriptAct_Log_uScriptAct_Log_2.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_6.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_20.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_24.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_25.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_27.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_30.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_31.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_41.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_42.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_43.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_44.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_45.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_46.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_47.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_61.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_62.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_63.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_64.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_65.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_70.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_71.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_72.SetParent(g);
      logic_uScriptCon_CheckDistance_uScriptCon_CheckDistance_74.SetParent(g);
      logic_uScriptCon_CompareBool_uScriptCon_CompareBool_76.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_77.SetParent(g);
      logic_uScriptCon_CompareBoolEquality_uScriptCon_CompareBoolEquality_78.SetParent(g);
      logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79.SetParent(g);
      logic_uScriptCon_CompareGameObjects_uScriptCon_CompareGameObjects_80.SetParent(g);
      logic_uScriptCon_CompareInt_uScriptCon_CompareInt_81.SetParent(g);
      logic_uScriptCon_CompareString_uScriptCon_CompareString_82.SetParent(g);
      logic_uScriptCon_CompareVector2_uScriptCon_CompareVector2_83.SetParent(g);
      logic_uScriptCon_CompareVector3_uScriptCon_CompareVector3_84.SetParent(g);
      logic_uScriptCon_CompareVector4_uScriptCon_CompareVector4_85.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_86.SetParent(g);
      logic_uScriptCon_GameObjectHasTag_uScriptCon_GameObjectHasTag_87.SetParent(g);
      logic_uScriptCon_IsPlatform_uScriptCon_IsPlatform_88.SetParent(g);
      logic_uScriptCon_IsPowerOfTwo_uScriptCon_IsPowerOfTwo_89.SetParent(g);
      logic_uScriptCon_StringContains_uScriptCon_StringContains_90.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_91.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_92.SetParent(g);
      logic_uScriptCon_FloatCounter_uScriptCon_FloatCounter_93.SetParent(g);
      logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.SetParent(g);
      logic_uScriptCon_Gate_uScriptCon_Gate_95.SetParent(g);
      logic_uScriptCon_TimedGate_uScriptCon_TimedGate_96.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_97.SetParent(g);
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.SetParent(g);
      logic_uScriptCon_RandomSwitch_uScriptCon_RandomSwitch_99.SetParent(g);
      logic_uScriptCon_Switch_uScriptCon_Switch_100.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_101.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_102.SetParent(g);
      logic_uScriptAct_PrintList_uScriptAct_PrintList_104.SetParent(g);
      logic_uScriptAct_PrintText_uScriptAct_PrintText_106.SetParent(g);
      logic_uScriptAct_GUIGetBackgroundColor_uScriptAct_GUIGetBackgroundColor_108.SetParent(g);
      logic_uScriptAct_GUIGetColor_uScriptAct_GUIGetColor_109.SetParent(g);
      logic_uScriptAct_GUIGetContentColor_uScriptAct_GUIGetContentColor_110.SetParent(g);
      logic_uScriptAct_GUIGetEnabledState_uScriptAct_GUIGetEnabledState_111.SetParent(g);
      logic_uScriptAct_GUIGetToolTip_uScriptAct_GUIGetToolTip_112.SetParent(g);
      logic_uScriptAct_GUISetBackgroundColor_uScriptAct_GUISetBackgroundColor_113.SetParent(g);
      logic_uScriptAct_GUISetColor_uScriptAct_GUISetColor_114.SetParent(g);
      logic_uScriptAct_GUISetContentColor_uScriptAct_GUISetContentColor_115.SetParent(g);
      logic_uScriptAct_GUISetEnabledState_uScriptAct_GUISetEnabledState_116.SetParent(g);
      logic_uScriptAct_GUISetFocusedControl_uScriptAct_GUISetFocusedControl_117.SetParent(g);
      logic_uScriptAct_GUISetSkin_uScriptAct_GUISetSkin_118.SetParent(g);
      logic_uScriptAct_GUIBeginGroup_uScriptAct_GUIBeginGroup_119.SetParent(g);
      logic_uScriptAct_GUIBox_uScriptAct_GUIBox_120.SetParent(g);
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.SetParent(g);
      logic_uScriptAct_GUIEndGroup_uScriptAct_GUIEndGroup_122.SetParent(g);
      logic_uScriptAct_GUIHorizontalScrollbar_uScriptAct_GUIHorizontalScrollbar_123.SetParent(g);
      logic_uScriptAct_GUILabel_uScriptAct_GUILabel_124.SetParent(g);
      logic_uScriptAct_GUIPasswordField_uScriptAct_GUIPasswordField_125.SetParent(g);
      logic_uScriptAct_GUITextArea_uScriptAct_GUITextArea_126.SetParent(g);
      logic_uScriptAct_GUITextField_uScriptAct_GUITextField_127.SetParent(g);
      logic_uScriptAct_GUITexture_uScriptAct_GUITexture_128.SetParent(g);
      logic_uScriptAct_GUIToggle_uScriptAct_GUIToggle_129.SetParent(g);
      logic_uScriptAct_GUIVerticalScrollbar_uScriptAct_GUIVerticalScrollbar_130.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_131.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_132.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_133.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_134.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_135.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_136.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_137.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_138.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_139.SetParent(g);
      logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_141.SetParent(g);
      logic_uScriptAct_SendCustomEvent_uScriptAct_SendCustomEvent_142.SetParent(g);
      logic_uScriptAct_SendCustomEventBool_uScriptAct_SendCustomEventBool_143.SetParent(g);
      logic_uScriptAct_SendCustomEventColor_uScriptAct_SendCustomEventColor_144.SetParent(g);
      logic_uScriptAct_SendCustomEventFloat_uScriptAct_SendCustomEventFloat_145.SetParent(g);
      logic_uScriptAct_SendCustomEventGameObject_uScriptAct_SendCustomEventGameObject_146.SetParent(g);
      logic_uScriptAct_SendCustomEventInt_uScriptAct_SendCustomEventInt_147.SetParent(g);
      logic_uScriptAct_SendCustomEventObject_uScriptAct_SendCustomEventObject_148.SetParent(g);
      logic_uScriptAct_SendCustomEventString_uScriptAct_SendCustomEventString_149.SetParent(g);
      logic_uScriptAct_SendCustomEventVector2_uScriptAct_SendCustomEventVector2_150.SetParent(g);
      logic_uScriptAct_SendCustomEventVector3_uScriptAct_SendCustomEventVector3_151.SetParent(g);
      logic_uScriptAct_SendCustomEventVector4_uScriptAct_SendCustomEventVector4_152.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_153.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_162.SetParent(g);
      logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_165.SetParent(g);
      logic_uScriptAct_LoadAudioClip_uScriptAct_LoadAudioClip_166.SetParent(g);
      logic_uScriptAct_LoadCubemap_uScriptAct_LoadCubemap_167.SetParent(g);
      logic_uScriptAct_LoadFlare_uScriptAct_LoadFlare_168.SetParent(g);
      logic_uScriptAct_LoadFont_uScriptAct_LoadFont_169.SetParent(g);
      logic_uScriptAct_LoadGUISkin_uScriptAct_LoadGUISkin_170.SetParent(g);
      logic_uScriptAct_LoadMaterial_uScriptAct_LoadMaterial_171.SetParent(g);
      logic_uScriptAct_LoadMesh_uScriptAct_LoadMesh_172.SetParent(g);
      logic_uScriptAct_LoadPhysicMaterial_uScriptAct_LoadPhysicMaterial_173.SetParent(g);
      logic_uScriptAct_LoadPrefab_uScriptAct_LoadPrefab_174.SetParent(g);
      logic_uScriptAct_LoadShader_uScriptAct_LoadShader_175.SetParent(g);
      logic_uScriptAct_LoadTextAsset_uScriptAct_LoadTextAsset_176.SetParent(g);
      logic_uScriptAct_LoadTexture2D_uScriptAct_LoadTexture2D_177.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_178.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_179.SetParent(g);
      logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_193.SetParent(g);
      logic_uScriptAct_PlayAnimation_uScriptAct_PlayAnimation_195.SetParent(g);
      logic_uScriptAct_RewindAnimation_uScriptAct_RewindAnimation_197.SetParent(g);
      logic_uScriptAct_StopAnimation_uScriptAct_StopAnimation_198.SetParent(g);
      logic_uScriptAct_ApplicationInfo_uScriptAct_ApplicationInfo_199.SetParent(g);
      logic_uScriptAct_DeletePreferenceKey_uScriptAct_DeletePreferenceKey_200.SetParent(g);
      logic_uScriptAct_DoesPreferenceKeyExist_uScriptAct_DoesPreferenceKeyExist_201.SetParent(g);
      logic_uScriptAct_GetPreferenceKeyBool_uScriptAct_GetPreferenceKeyBool_202.SetParent(g);
      logic_uScriptAct_GetPreferenceKeyFloat_uScriptAct_GetPreferenceKeyFloat_203.SetParent(g);
      logic_uScriptAct_GetPreferenceKeyInt_uScriptAct_GetPreferenceKeyInt_204.SetParent(g);
      logic_uScriptAct_GetPreferenceKeyRect_uScriptAct_GetPreferenceKeyRect_205.SetParent(g);
      logic_uScriptAct_GetPreferenceKeyString_uScriptAct_GetPreferenceKeyString_206.SetParent(g);
      logic_uScriptAct_GetPreferenceKeyVector2_uScriptAct_GetPreferenceKeyVector2_207.SetParent(g);
      logic_uScriptAct_GetPreferenceKeyVector3_uScriptAct_GetPreferenceKeyVector3_208.SetParent(g);
      logic_uScriptAct_GetPreferenceKeyVector4_uScriptAct_GetPreferenceKeyVector4_209.SetParent(g);
      logic_uScriptAct_OpenBrowser_uScriptAct_OpenBrowser_210.SetParent(g);
      logic_uScriptAct_Quit_uScriptAct_Quit_211.SetParent(g);
      logic_uScriptAct_SetPreferenceKeyBool_uScriptAct_SetPreferenceKeyBool_212.SetParent(g);
      logic_uScriptAct_SetPreferenceKeyFloat_uScriptAct_SetPreferenceKeyFloat_213.SetParent(g);
      logic_uScriptAct_SetPreferenceKeyInt_uScriptAct_SetPreferenceKeyInt_214.SetParent(g);
      logic_uScriptAct_SetPreferenceKeyRect_uScriptAct_SetPreferenceKeyRect_215.SetParent(g);
      logic_uScriptAct_SetPreferenceKeyString_uScriptAct_SetPreferenceKeyString_216.SetParent(g);
      logic_uScriptAct_SetPreferenceKeyVector2_uScriptAct_SetPreferenceKeyVector2_217.SetParent(g);
      logic_uScriptAct_SetPreferenceKeyVector3_uScriptAct_SetPreferenceKeyVector3_218.SetParent(g);
      logic_uScriptAct_SetPreferenceKeyVector4_uScriptAct_SetPreferenceKeyVector4_219.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_220.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_221.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_224.SetParent(g);
      logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_226.SetParent(g);
      logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.SetParent(g);
      logic_uScriptAct_SetActiveAudioListener_uScriptAct_SetActiveAudioListener_228.SetParent(g);
      logic_uScriptAct_SetCameraDepth_uScriptAct_SetCameraDepth_229.SetParent(g);
      logic_uScriptAct_SwitchCameras_uScriptAct_SwitchCameras_230.SetParent(g);
      logic_uScriptAct_UpdateCameraOrbit_uScriptAct_UpdateCameraOrbit_231.SetParent(g);
      logic_uScriptAct_LoadLevel_uScriptAct_LoadLevel_232.SetParent(g);
      logic_uScriptAct_LoadLevelByIndex_uScriptAct_LoadLevelByIndex_233.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_234.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_235.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_236.SetParent(g);
      logic_uScriptAct_Particles_uScriptAct_Particles_237.SetParent(g);
      logic_uScriptAct_AddForce_uScriptAct_AddForce_238.SetParent(g);
      logic_uScriptAct_AddRelativeForce_uScriptAct_AddRelativeForce_239.SetParent(g);
      logic_uScriptAct_AddRelativeTorque_uScriptAct_AddRelativeTorque_240.SetParent(g);
      logic_uScriptAct_AddTorque_uScriptAct_AddTorque_241.SetParent(g);
      logic_uScriptAct_CheckLayerCollision_uScriptAct_CheckLayerCollision_242.SetParent(g);
      logic_uScriptAct_GetGravity_uScriptAct_GetGravity_243.SetParent(g);
      logic_uScriptAct_GetRigidbodyVelocity_uScriptAct_GetRigidbodyVelocity_244.SetParent(g);
      logic_uScriptAct_IgnoreCollision_uScriptAct_IgnoreCollision_245.SetParent(g);
      logic_uScriptAct_IgnoreLayerCollision_uScriptAct_IgnoreLayerCollision_246.SetParent(g);
      logic_uScriptAct_Raycast_uScriptAct_Raycast_247.SetParent(g);
      logic_uScriptAct_RaycastFromCamera_uScriptAct_RaycastFromCamera_248.SetParent(g);
      logic_uScriptAct_RaycastFromCursor_uScriptAct_RaycastFromCursor_249.SetParent(g);
      logic_uScriptAct_RaycastFromScreenPoint_uScriptAct_RaycastFromScreenPoint_250.SetParent(g);
      logic_uScriptAct_SetGravity_uScriptAct_SetGravity_251.SetParent(g);
      logic_uScriptAct_SetJointDrive_uScriptAct_SetJointDrive_252.SetParent(g);
      logic_uScriptAct_SetRigidbodyVelocity_uScriptAct_SetRigidbodyVelocity_253.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_254.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_255.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_256.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_257.SetParent(g);
      logic_uScriptAct_GetMousePosition_uScriptAct_GetMousePosition_258.SetParent(g);
      logic_uScriptAct_GetScreenSize_uScriptAct_GetScreenSize_259.SetParent(g);
      logic_uScriptAct_LockMouseCursor_uScriptAct_LockMouseCursor_260.SetParent(g);
      logic_uScriptAct_ShowMouseCursor_uScriptAct_ShowMouseCursor_261.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_262.SetParent(g);
      logic_uScriptAct_CountTime_uScriptAct_CountTime_264.SetParent(g);
      logic_uScriptAct_Delay_uScriptAct_Delay_265.SetParent(g);
      logic_uScriptAct_GetDeltaTime_uScriptAct_GetDeltaTime_266.SetParent(g);
      logic_uScriptAct_GetGameTime_uScriptAct_GetGameTime_267.SetParent(g);
      logic_uScriptAct_GetRunTime_uScriptAct_GetRunTime_268.SetParent(g);
      logic_uScriptAct_GetSystemDate_uScriptAct_GetSystemDate_269.SetParent(g);
      logic_uScriptAct_GetSystemTime_uScriptAct_GetSystemTime_270.SetParent(g);
      logic_uScriptAct_SetGameTime_uScriptAct_SetGameTime_271.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_273.SetParent(g);
      logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_276.SetParent(g);
      logic_uScriptAct_Toggle_uScriptAct_Toggle_277.SetParent(g);
      logic_uScriptAct_ToggleBool_uScriptAct_ToggleBool_278.SetParent(g);
      logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_280.SetParent(g);
      logic_uScriptAct_CaptureScreenshot_uScriptAct_CaptureScreenshot_281.SetParent(g);
      logic_uScriptAct_GetObjectFromList_uScriptAct_GetObjectFromList_282.SetParent(g);
      logic_uScriptAct_OutputFramesPerSecond_uScriptAct_OutputFramesPerSecond_283.SetParent(g);
      logic_uScriptAct_ShuffleList_uScriptAct_ShuffleList_284.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_285.SetParent(g);
      logic_uScriptAct_SetBool_uScriptAct_SetBool_286.SetParent(g);
      logic_uScriptAct_SetRandomBool_uScriptAct_SetRandomBool_288.SetParent(g);
      logic_uScriptAct_GetComponentsColor_uScriptAct_GetComponentsColor_289.SetParent(g);
      logic_uScriptAct_SetColor_uScriptAct_SetColor_290.SetParent(g);
      logic_uScriptAct_SetColorAlpha_uScriptAct_SetColorAlpha_291.SetParent(g);
      logic_uScriptAct_SetComponentsColor_uScriptAct_SetComponentsColor_292.SetParent(g);
      logic_uScriptAct_SetRandomColor_uScriptAct_SetRandomColor_293.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_295.SetParent(g);
      logic_uScriptAct_SetFloat_uScriptAct_SetFloat_297.SetParent(g);
      logic_uScriptAct_SetRandomFloat_uScriptAct_SetRandomFloat_298.SetParent(g);
      logic_uScriptAct_SetGameObject_uScriptAct_SetGameObject_299.SetParent(g);
      logic_uScriptAct_SetRandomGameObject_uScriptAct_SetRandomGameObject_300.SetParent(g);
      logic_uScriptAct_SetInt_uScriptAct_SetInt_304.SetParent(g);
      logic_uScriptAct_SetRandomInt_uScriptAct_SetRandomInt_305.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_306.SetParent(g);
      logic_uScriptAct_SetQuaternion_uScriptAct_SetQuaternion_308.SetParent(g);
      logic_uScriptAct_CreateRelativeRect_uScriptAct_CreateRelativeRect_310.SetParent(g);
      logic_uScriptAct_CreateRelativeRectMouse_uScriptAct_CreateRelativeRectMouse_311.SetParent(g);
      logic_uScriptAct_GetComponentsRect_uScriptAct_GetComponentsRect_312.SetParent(g);
      logic_uScriptAct_SetComponentsRect_uScriptAct_SetComponentsRect_313.SetParent(g);
      logic_uScriptAct_SetRect_uScriptAct_SetRect_314.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_316.SetParent(g);
      logic_uScriptAct_ChangeCase_uScriptAct_ChangeCase_317.SetParent(g);
      logic_uScriptAct_Concatenate_uScriptAct_Concatenate_318.SetParent(g);
      logic_uScriptAct_GetStringLength_uScriptAct_GetStringLength_319.SetParent(g);
      logic_uScriptAct_GetSubString_uScriptAct_GetSubString_320.SetParent(g);
      logic_uScriptAct_PadString_uScriptAct_PadString_321.SetParent(g);
      logic_uScriptAct_ReplaceCharacters_uScriptAct_ReplaceCharacters_322.SetParent(g);
      logic_uScriptAct_SetString_uScriptAct_SetString_323.SetParent(g);
      logic_uScriptAct_TrimString_uScriptAct_TrimString_324.SetParent(g);
      logic_uScriptAct_SetTexture2D_uScriptAct_SetTexture2D_326.SetParent(g);
      logic_uScriptAct_GetComponentsVector2_uScriptAct_GetComponentsVector2_327.SetParent(g);
      logic_uScriptAct_SetComponentsVector2_uScriptAct_SetComponentsVector2_328.SetParent(g);
      logic_uScriptAct_SetRandomVector2_uScriptAct_SetRandomVector2_329.SetParent(g);
      logic_uScriptAct_SetVector2_uScriptAct_SetVector2_330.SetParent(g);
      logic_uScriptAct_GetComponentsVector3_uScriptAct_GetComponentsVector3_332.SetParent(g);
      logic_uScriptAct_SetRandomVector3_uScriptAct_SetRandomVector3_333.SetParent(g);
      logic_uScriptAct_SetRandomVector3_uScriptAct_SetRandomVector3_334.SetParent(g);
      logic_uScriptAct_SetVector3_uScriptAct_SetVector3_335.SetParent(g);
      logic_uScriptAct_GetComponentsVector4_uScriptAct_GetComponentsVector4_337.SetParent(g);
      logic_uScriptAct_SetComponentsVector4_uScriptAct_SetComponentsVector4_338.SetParent(g);
      logic_uScriptAct_SetRandomVector4_uScriptAct_SetRandomVector4_339.SetParent(g);
      logic_uScriptAct_SetVector4_uScriptAct_SetVector4_340.SetParent(g);
      logic_uScriptAct_SetRandomSeed_uScriptAct_SetRandomSeed_341.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_342.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_343.SetParent(g);
      logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_346.SetParent(g);
      logic_uScriptAct_AssignMaterial_uScriptAct_AssignMaterial_348.SetParent(g);
      logic_uScriptAct_AssignMaterialColor_uScriptAct_AssignMaterialColor_350.SetParent(g);
      logic_uScriptAct_AttachScript_uScriptAct_AttachScript_351.SetParent(g);
      logic_uScriptAct_AttachToGameObject_uScriptAct_AttachToGameObject_353.SetParent(g);
      logic_uScriptAct_CreatePrimitive_uScriptAct_CreatePrimitive_354.SetParent(g);
      logic_uScriptAct_Destroy_uScriptAct_Destroy_355.SetParent(g);
      logic_uScriptAct_DestroyComponent_uScriptAct_DestroyComponent_356.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_358.SetParent(g);
      logic_uScriptAct_GetAllChildren_uScriptAct_GetAllChildren_359.SetParent(g);
      logic_uScriptAct_GetChildrenByName_uScriptAct_GetChildrenByName_360.SetParent(g);
      logic_uScriptAct_GetChildrenByTag_uScriptAct_GetChildrenByTag_361.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_362.SetParent(g);
      logic_uScriptAct_GetDistance_uScriptAct_GetDistance_363.SetParent(g);
      logic_uScriptAct_GetGameObjectByName_uScriptAct_GetGameObjectByName_364.SetParent(g);
      logic_uScriptAct_GetGameObjectsByTag_uScriptAct_GetGameObjectsByTag_365.SetParent(g);
      logic_uScriptAct_GetGameObjectMaterial_uScriptAct_GetGameObjectMaterial_366.SetParent(g);
      logic_uScriptAct_GetPositionAndRotation_uScriptAct_GetPositionAndRotation_367.SetParent(g);
      logic_uScriptAct_GetGameObjectScale_uScriptAct_GetGameObjectScale_368.SetParent(g);
      logic_uScriptAct_GetVector2Distance_uScriptAct_GetVector2Distance_370.SetParent(g);
      logic_uScriptAct_GetVector3Distance_uScriptAct_GetVector3Distance_371.SetParent(g);
      logic_uScriptAct_GetVector4Distance_uScriptAct_GetVector4Distance_372.SetParent(g);
      logic_uScriptAct_IsActive_uScriptAct_IsActive_373.SetParent(g);
      logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.SetParent(g);
      logic_uScriptAct_LookAt_uScriptAct_LookAt_375.SetParent(g);
      logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_377.SetParent(g);
      logic_uScriptAct_NormalizeVector2_uScriptAct_NormalizeVector2_378.SetParent(g);
      logic_uScriptAct_NormalizeVector4_uScriptAct_NormalizeVector4_379.SetParent(g);
      logic_uScriptAct_NormalizeVector3_uScriptAct_NormalizeVector3_380.SetParent(g);
      logic_uScriptAct_Rotate_uScriptAct_Rotate_381.SetParent(g);
      logic_uScriptAct_SetGameObjectEulerAngles_uScriptAct_SetGameObjectEulerAngles_382.SetParent(g);
      logic_uScriptAct_SetGameObjectPosition_uScriptAct_SetGameObjectPosition_383.SetParent(g);
      logic_uScriptAct_SetRandomPosition_uScriptAct_SetRandomPosition_384.SetParent(g);
      logic_uScriptAct_SetRandomRotation_uScriptAct_SetRandomRotation_385.SetParent(g);
      logic_uScriptAct_SetRandomScale_uScriptAct_SetRandomScale_386.SetParent(g);
      logic_uScriptAct_SetGameObjectRotation_uScriptAct_SetGameObjectRotation_387.SetParent(g);
      logic_uScriptAct_SetGameObjectScale_uScriptAct_SetGameObjectScale_388.SetParent(g);
      logic_uScriptAct_SpawnPrefab_uScriptAct_SpawnPrefab_389.SetParent(g);
      logic_uScriptAct_SpawnPrefabAtLocation_uScriptAct_SpawnPrefabAtLocation_390.SetParent(g);
      logic_uScriptAct_Teleport_uScriptAct_Teleport_391.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_393.SetParent(g);
      logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_395.SetParent(g);
      logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.SetParent(g);
      logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.SetParent(g);
      logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.SetParent(g);
      logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.SetParent(g);
      logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.SetParent(g);
      logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.SetParent(g);
      logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.SetParent(g);
      logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.SetParent(g);
      logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_406.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_407.SetParent(g);
      logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_409.SetParent(g);
      logic_uScriptAct_AddFloat_uScriptAct_AddFloat_411.SetParent(g);
      logic_uScriptAct_AddInt_uScriptAct_AddInt_412.SetParent(g);
      logic_uScriptAct_AddRect_uScriptAct_AddRect_413.SetParent(g);
      logic_uScriptAct_AddVector3_uScriptAct_AddVector3_414.SetParent(g);
      logic_uScriptAct_AddVector4_uScriptAct_AddVector4_415.SetParent(g);
      logic_uScriptAct_ClampFloat_uScriptAct_ClampFloat_416.SetParent(g);
      logic_uScriptAct_ClampInt_uScriptAct_ClampInt_417.SetParent(g);
      logic_uScriptAct_ConvertRectToVector4_uScriptAct_ConvertRectToVector4_418.SetParent(g);
      logic_uScriptAct_ConvertVariable_uScriptAct_ConvertVariable_419.SetParent(g);
      logic_uScriptAct_ConvertVector4ToRect_uScriptAct_ConvertVector4ToRect_420.SetParent(g);
      logic_uScriptAct_DivideFloat_uScriptAct_DivideFloat_421.SetParent(g);
      logic_uScriptAct_DivideInt_uScriptAct_DivideInt_422.SetParent(g);
      logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.SetParent(g);
      logic_uScriptAct_FilterFloat_uScriptAct_FilterFloat_424.SetParent(g);
      logic_uScriptAct_FilterRect_uScriptAct_FilterRect_425.SetParent(g);
      logic_uScriptAct_FilterVector_uScriptAct_FilterVector_426.SetParent(g);
      logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.SetParent(g);
      logic_uScriptAct_MathConstants_uScriptAct_MathConstants_428.SetParent(g);
      logic_uScriptAct_InvertBool_uScriptAct_InvertBool_429.SetParent(g);
      logic_uScriptAct_InvertFloat_uScriptAct_InvertFloat_430.SetParent(g);
      logic_uScriptAct_InvertInt_uScriptAct_InvertInt_431.SetParent(g);
      logic_uScriptAct_InvertString_uScriptAct_InvertString_432.SetParent(g);
      logic_uScriptAct_InvertVector2_uScriptAct_InvertVector2_433.SetParent(g);
      logic_uScriptAct_InvertVector3_uScriptAct_InvertVector3_434.SetParent(g);
      logic_uScriptAct_InvertVector4_uScriptAct_InvertVector4_435.SetParent(g);
      logic_uScriptAct_MaxFloat_uScriptAct_MaxFloat_436.SetParent(g);
      logic_uScriptAct_MaxInt_uScriptAct_MaxInt_437.SetParent(g);
      logic_uScriptAct_MinFloat_uScriptAct_MinFloat_438.SetParent(g);
      logic_uScriptAct_MinInt_uScriptAct_MinInt_439.SetParent(g);
      logic_uScriptAct_MultiplyFloat_uScriptAct_MultiplyFloat_440.SetParent(g);
      logic_uScriptAct_MultiplyInt_uScriptAct_MultiplyInt_441.SetParent(g);
      logic_uScriptAct_QuaternionEuler_uScriptAct_QuaternionEuler_442.SetParent(g);
      logic_uScriptAct_QuaternionFromVectors_uScriptAct_QuaternionFromVectors_443.SetParent(g);
      logic_uScriptAct_RoundFloat_uScriptAct_RoundFloat_444.SetParent(g);
      logic_uScriptAct_ScaleVector2_uScriptAct_ScaleVector2_445.SetParent(g);
      logic_uScriptAct_ScaleVector3_uScriptAct_ScaleVector3_446.SetParent(g);
      logic_uScriptAct_ScaleVector4_uScriptAct_ScaleVector4_447.SetParent(g);
      logic_uScriptAct_SubtractFloat_uScriptAct_SubtractFloat_448.SetParent(g);
      logic_uScriptAct_SubtractInt_uScriptAct_SubtractInt_449.SetParent(g);
      logic_uScriptAct_SubtractRect_uScriptAct_SubtractRect_450.SetParent(g);
      logic_uScriptAct_SubtractVector2_uScriptAct_SubtractVector2_451.SetParent(g);
      logic_uScriptAct_SubtractVector3_uScriptAct_SubtractVector3_452.SetParent(g);
      logic_uScriptAct_SubtractVector4_uScriptAct_SubtractVector4_453.SetParent(g);
      logic_uScriptAct_VectorsFromQuaternion_uScriptAct_VectorsFromQuaternion_454.SetParent(g);
      logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_456.SetParent(g);
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.SetParent(g);
      logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.SetParent(g);
      logic_uScriptAct_ForEachListAudioClip_uScriptAct_ForEachListAudioClip_466.SetParent(g);
      logic_uScriptAct_ForEachListAudioClipAuto_uScriptAct_ForEachListAudioClipAuto_468.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_469.SetParent(g);
      logic_uScriptAct_IsInListAudioClip_uScriptAct_IsInListAudioClip_471.SetParent(g);
      logic_uScriptAct_ModifyListAudioClip_uScriptAct_ModifyListAudioClip_472.SetParent(g);
      logic_uScriptAct_ReplaceValueInListAudioClip_uScriptAct_ReplaceValueInListAudioClip_473.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_478.SetParent(g);
      logic_uScriptAct_GenerateMD5Hash_uScriptAct_GenerateMD5Hash_479.SetParent(g);
      logic_uScriptAct_CheckMD5Hash_uScriptAct_CheckMD5Hash_480.SetParent(g);
      logic_uScriptAct_Log_uScriptAct_Log_481.SetParent(g);
      logic_uScriptAct_CreateGameObject_uScriptAct_CreateGameObject_484.SetParent(g);
      logic_uScriptAct_SetParent_uScriptAct_SetParent_486.SetParent(g);
   }
   public void Awake()
   {
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.Awake( );
      
      logic_uScriptCon_Gate_uScriptCon_Gate_95.Out += uScriptCon_Gate_Out_95;
      logic_uScriptCon_TimedGate_uScriptCon_TimedGate_96.Out += uScriptCon_TimedGate_Out_96;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output1 += uScriptCon_ManualSwitch_Output1_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output2 += uScriptCon_ManualSwitch_Output2_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output3 += uScriptCon_ManualSwitch_Output3_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output4 += uScriptCon_ManualSwitch_Output4_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output5 += uScriptCon_ManualSwitch_Output5_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output6 += uScriptCon_ManualSwitch_Output6_98;
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.OnButtonDown += uScriptAct_GUIButton_OnButtonDown_121;
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.OnButtonHeld += uScriptAct_GUIButton_OnButtonHeld_121;
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.OnButtonUp += uScriptAct_GUIButton_OnButtonUp_121;
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.OnButtonClicked += uScriptAct_GUIButton_OnButtonClicked_121;
      logic_uScriptAct_PlayAnimation_uScriptAct_PlayAnimation_195.Finished += uScriptAct_PlayAnimation_Finished_195;
      logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.Finished += uScriptAct_PlaySound_Finished_227;
      logic_uScriptAct_LoadLevel_uScriptAct_LoadLevel_232.Loaded += uScriptAct_LoadLevel_Loaded_232;
      logic_uScriptAct_LoadLevelByIndex_uScriptAct_LoadLevelByIndex_233.Loaded += uScriptAct_LoadLevelByIndex_Loaded_233;
      logic_uScriptAct_Toggle_uScriptAct_Toggle_277.OnOut += uScriptAct_Toggle_OnOut_277;
      logic_uScriptAct_Toggle_uScriptAct_Toggle_277.OffOut += uScriptAct_Toggle_OffOut_277;
      logic_uScriptAct_Toggle_uScriptAct_Toggle_277.ToggleOut += uScriptAct_Toggle_ToggleOut_277;
      logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.OnOut += uScriptAct_ToggleComponent_OnOut_279;
      logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.OffOut += uScriptAct_ToggleComponent_OffOut_279;
      logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.ToggleOut += uScriptAct_ToggleComponent_ToggleOut_279;
      logic_uScriptAct_LookAt_uScriptAct_LookAt_375.Finished += uScriptAct_LookAt_Finished_375;
      logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376.Finished += uScriptAct_MoveToLocation_Finished_376;
      logic_uScriptAct_SpawnPrefab_uScriptAct_SpawnPrefab_389.FinishedSpawning += uScriptAct_SpawnPrefab_FinishedSpawning_389;
      logic_uScriptAct_SpawnPrefabAtLocation_uScriptAct_SpawnPrefabAtLocation_390.FinishedSpawning += uScriptAct_SpawnPrefabAtLocation_FinishedSpawning_390;
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.Node_Is_Done += CodeGenTest_Nested_Node_Is_Done_458;
   }
   
   public void Start()
   {
      SyncUnityHooks( );
      m_RegisteredForEvents = true;
      
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.Start( );
   }
   
   public void OnEnable()
   {
      RegisterForUnityHooks( );
      m_RegisteredForEvents = true;
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.OnEnable( );
   }
   
   public void OnDisable()
   {
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.OnDisable( );
      UnregisterEventListeners( );
      m_RegisteredForEvents = false;
   }
   
   public void Update()
   {
      //reset each Update, and increments each method call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      if ( null != m_ContinueExecution )
      {
         ContinueExecution continueEx = m_ContinueExecution;
         m_ContinueExecution = null;
         m_Breakpoint = false;
         continueEx( );
         return;
      }
      UpdateEditorValues( );
      
      //other scripts might have added GameObjects with event scripts
      //so we need to verify all our event listeners are registered
      SyncEventListeners( );
      
      logic_uScriptCon_TimedGate_uScriptCon_TimedGate_96.Update( );
      logic_uScriptAct_PlayAnimation_uScriptAct_PlayAnimation_195.Update( );
      logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.Update( );
      logic_uScriptAct_LoadLevel_uScriptAct_LoadLevel_232.Update( );
      logic_uScriptAct_LoadLevelByIndex_uScriptAct_LoadLevelByIndex_233.Update( );
      logic_uScriptAct_CountTime_uScriptAct_CountTime_264.Update( );
      logic_uScriptAct_OutputFramesPerSecond_uScriptAct_OutputFramesPerSecond_283.Update( );
      logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.Update( );
      logic_uScriptAct_LookAt_uScriptAct_LookAt_375.Update( );
      logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376.Update( );
      logic_uScriptAct_Rotate_uScriptAct_Rotate_381.Update( );
      logic_uScriptAct_SpawnPrefab_uScriptAct_SpawnPrefab_389.Update( );
      logic_uScriptAct_SpawnPrefabAtLocation_uScriptAct_SpawnPrefabAtLocation_390.Update( );
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.Update( );
      if (true == logic_uScriptAct_Delay_DrivenDelay_265)
      {
         Relay_DrivenDelay_265();
      }
      if (true == logic_uScriptAct_Destroy_WaitOneTick_355)
      {
         Relay_WaitOneTick_355();
      }
      if (true == logic_uScriptAct_InterpolateColorLinear_Driven_397)
      {
         Relay_Driven_397();
      }
      if (true == logic_uScriptAct_InterpolateFloatLinear_Driven_398)
      {
         Relay_Driven_398();
      }
      if (true == logic_uScriptAct_InterpolateIntLinear_Driven_399)
      {
         Relay_Driven_399();
      }
      if (true == logic_uScriptAct_InterpolateQuaternionLinear_Driven_400)
      {
         Relay_Driven_400();
      }
      if (true == logic_uScriptAct_InterpolateQuaternionSlerp_Driven_401)
      {
         Relay_Driven_401();
      }
      if (true == logic_uScriptAct_InterpolateRectLinear_Driven_402)
      {
         Relay_Driven_402();
      }
      if (true == logic_uScriptAct_InterpolateVector2Linear_Driven_403)
      {
         Relay_Driven_403();
      }
      if (true == logic_uScriptAct_InterpolateVector3Linear_Driven_404)
      {
         Relay_Driven_404();
      }
      if (true == logic_uScriptAct_InterpolateVector4Linear_Driven_405)
      {
         Relay_Driven_405();
      }
      if (true == logic_uScriptAct_ForEachListAudioClipAuto_Driven_468)
      {
         Relay_Driven_468();
      }
   }
   
   public void OnDestroy()
   {
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.OnDestroy( );
      logic_uScriptCon_Gate_uScriptCon_Gate_95.Out -= uScriptCon_Gate_Out_95;
      logic_uScriptCon_TimedGate_uScriptCon_TimedGate_96.Out -= uScriptCon_TimedGate_Out_96;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output1 -= uScriptCon_ManualSwitch_Output1_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output2 -= uScriptCon_ManualSwitch_Output2_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output3 -= uScriptCon_ManualSwitch_Output3_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output4 -= uScriptCon_ManualSwitch_Output4_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output5 -= uScriptCon_ManualSwitch_Output5_98;
      logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.Output6 -= uScriptCon_ManualSwitch_Output6_98;
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.OnButtonDown -= uScriptAct_GUIButton_OnButtonDown_121;
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.OnButtonHeld -= uScriptAct_GUIButton_OnButtonHeld_121;
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.OnButtonUp -= uScriptAct_GUIButton_OnButtonUp_121;
      logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.OnButtonClicked -= uScriptAct_GUIButton_OnButtonClicked_121;
      logic_uScriptAct_PlayAnimation_uScriptAct_PlayAnimation_195.Finished -= uScriptAct_PlayAnimation_Finished_195;
      logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.Finished -= uScriptAct_PlaySound_Finished_227;
      logic_uScriptAct_LoadLevel_uScriptAct_LoadLevel_232.Loaded -= uScriptAct_LoadLevel_Loaded_232;
      logic_uScriptAct_LoadLevelByIndex_uScriptAct_LoadLevelByIndex_233.Loaded -= uScriptAct_LoadLevelByIndex_Loaded_233;
      logic_uScriptAct_Toggle_uScriptAct_Toggle_277.OnOut -= uScriptAct_Toggle_OnOut_277;
      logic_uScriptAct_Toggle_uScriptAct_Toggle_277.OffOut -= uScriptAct_Toggle_OffOut_277;
      logic_uScriptAct_Toggle_uScriptAct_Toggle_277.ToggleOut -= uScriptAct_Toggle_ToggleOut_277;
      logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.OnOut -= uScriptAct_ToggleComponent_OnOut_279;
      logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.OffOut -= uScriptAct_ToggleComponent_OffOut_279;
      logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.ToggleOut -= uScriptAct_ToggleComponent_ToggleOut_279;
      logic_uScriptAct_LookAt_uScriptAct_LookAt_375.Finished -= uScriptAct_LookAt_Finished_375;
      logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376.Finished -= uScriptAct_MoveToLocation_Finished_376;
      logic_uScriptAct_SpawnPrefab_uScriptAct_SpawnPrefab_389.FinishedSpawning -= uScriptAct_SpawnPrefab_FinishedSpawning_389;
      logic_uScriptAct_SpawnPrefabAtLocation_uScriptAct_SpawnPrefabAtLocation_390.FinishedSpawning -= uScriptAct_SpawnPrefabAtLocation_FinishedSpawning_390;
      logic_CodeGenTest_Nested_CodeGenTest_Nested_458.Node_Is_Done -= CodeGenTest_Nested_Node_Is_Done_458;
   }
   
   public void OnGUI()
   {
      logic_uScriptAct_PrintText_uScriptAct_PrintText_106.OnGUI( );
   }
   
   void Instance_FocusEvent_0(object o, uScript_ApplicationFocus.ApplicationFocusEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_HasFocus_0 = e.HasFocus;
      //relay event to nodes
      Relay_FocusEvent_0( );
   }
   
   void Instance_QuitEvent_1(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_QuitEvent_1( );
   }
   
   void Instance_OnCustomEvent_7(object o, uScript_CustomEvent.CustomEventBoolArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_7 = e.Sender;
      event_UnityEngine_GameObject_EventName_7 = e.EventName;
      //relay event to nodes
      Relay_OnCustomEvent_7( );
   }
   
   void Instance_OnCustomEventBool_8(object o, uScript_CustomEventBool.CustomEventBoolArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_8 = e.Sender;
      event_UnityEngine_GameObject_EventName_8 = e.EventName;
      event_UnityEngine_GameObject_EventData_8 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventBool_8( );
   }
   
   void Instance_OnCustomEventColor_9(object o, uScript_CustomEventColor.CustomEventColorArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_9 = e.Sender;
      event_UnityEngine_GameObject_EventName_9 = e.EventName;
      event_UnityEngine_GameObject_EventData_9 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventColor_9( );
   }
   
   void Instance_OnCustomEventFloat_10(object o, uScript_CustomEventFloat.CustomEventFloatArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_10 = e.Sender;
      event_UnityEngine_GameObject_EventName_10 = e.EventName;
      event_UnityEngine_GameObject_EventData_10 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventFloat_10( );
   }
   
   void Instance_OnCustomEventGameObject_11(object o, uScript_CustomEventGameObject.CustomEventGameObjectArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_11 = e.Sender;
      event_UnityEngine_GameObject_EventName_11 = e.EventName;
      event_UnityEngine_GameObject_EventData_11 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventGameObject_11( );
   }
   
   void Instance_OnCustomEventInt_12(object o, uScript_CustomEventInt.CustomEventIntArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_12 = e.Sender;
      event_UnityEngine_GameObject_EventName_12 = e.EventName;
      event_UnityEngine_GameObject_EventData_12 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventInt_12( );
   }
   
   void Instance_OnCustomEventObject_13(object o, uScript_CustomEventObject.CustomEventObjectArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_13 = e.Sender;
      event_UnityEngine_GameObject_EventName_13 = e.EventName;
      event_UnityEngine_GameObject_EventData_13 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventObject_13( );
   }
   
   void Instance_OnCustomEventString_14(object o, uScript_CustomEventString.CustomEventStringArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_14 = e.Sender;
      event_UnityEngine_GameObject_EventName_14 = e.EventName;
      event_UnityEngine_GameObject_EventData_14 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventString_14( );
   }
   
   void Instance_OnCustomEventVector2_15(object o, uScript_CustomEventVector2.CustomEventVector2Args e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_15 = e.Sender;
      event_UnityEngine_GameObject_EventName_15 = e.EventName;
      event_UnityEngine_GameObject_EventData_15 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventVector2_15( );
   }
   
   void Instance_OnCustomEventVector3_16(object o, uScript_CustomEventVector3.CustomEventVector3Args e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_16 = e.Sender;
      event_UnityEngine_GameObject_EventName_16 = e.EventName;
      event_UnityEngine_GameObject_EventData_16 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventVector3_16( );
   }
   
   void Instance_OnCustomEventVector4_17(object o, uScript_CustomEventVector4.CustomEventVector4Args e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Sender_17 = e.Sender;
      event_UnityEngine_GameObject_EventName_17 = e.EventName;
      event_UnityEngine_GameObject_EventData_17 = e.EventData;
      //relay event to nodes
      Relay_OnCustomEventVector4_17( );
   }
   
   void Instance_OnUpdate_21(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnUpdate_21( );
   }
   
   void Instance_OnLateUpdate_21(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnLateUpdate_21( );
   }
   
   void Instance_OnFixedUpdate_21(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnFixedUpdate_21( );
   }
   
   void Instance_OnGui_22(object o, uScript_GUI.GUIEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_GUIChanged_22 = e.GUIChanged;
      event_UnityEngine_GameObject_FocusedControl_22 = e.FocusedControl;
      //relay event to nodes
      Relay_OnGui_22( );
   }
   
   void Instance_LevelWasLoaded_23(object o, uScript_Level.LevelWasLoadedEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Level_23 = e.Level;
      //relay event to nodes
      Relay_LevelWasLoaded_23( );
   }
   
   void Instance_EnableEvent_28(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_EnableEvent_28( );
   }
   
   void Instance_DisableEvent_28(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_DisableEvent_28( );
   }
   
   void Instance_DestroyEvent_28(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_DestroyEvent_28( );
   }
   
   void Instance_BecameVisible_29(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_BecameVisible_29( );
   }
   
   void Instance_BecameInvisible_29(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_BecameInvisible_29( );
   }
   
   void Instance_OnAccelerationEvent_33(object o, uScript_Accelerometer.AccelerometerEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Acceleration_33 = e.Acceleration;
      event_UnityEngine_GameObject_DeltaTime_33 = e.DeltaTime;
      //relay event to nodes
      Relay_OnAccelerationEvent_33( );
   }
   
   void Instance_OnDevicePortrait_34(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnDevicePortrait_34( );
   }
   
   void Instance_OnDevicePortraitUpsideDown_34(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnDevicePortraitUpsideDown_34( );
   }
   
   void Instance_OnDeviceLandscapeLeft_34(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnDeviceLandscapeLeft_34( );
   }
   
   void Instance_OnDeviceLandscapeRight_34(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnDeviceLandscapeRight_34( );
   }
   
   void Instance_OnDeviceFaceUp_34(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnDeviceFaceUp_34( );
   }
   
   void Instance_OnDeviceFaceDown_34(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnDeviceFaceDown_34( );
   }
   
   void Instance_KeyEvent_35(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_35( );
   }
   
   void Instance_OnInputEvent_36(object o, uScript_ManagedInput.CustomEventBoolArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Horizontal_36 = e.Horizontal;
      event_UnityEngine_GameObject_Vertical_36 = e.Vertical;
      event_UnityEngine_GameObject_Fire1_36 = e.Fire1;
      event_UnityEngine_GameObject_Fire2_36 = e.Fire2;
      event_UnityEngine_GameObject_Fire3_36 = e.Fire3;
      event_UnityEngine_GameObject_Jump_36 = e.Jump;
      event_UnityEngine_GameObject_MouseX_36 = e.MouseX;
      event_UnityEngine_GameObject_MouseY_36 = e.MouseY;
      event_UnityEngine_GameObject_MouseScrollWheel_36 = e.MouseScrollWheel;
      event_UnityEngine_GameObject_WindowShakeX_36 = e.WindowShakeX;
      event_UnityEngine_GameObject_WindowShakeY_36 = e.WindowShakeY;
      //relay event to nodes
      Relay_OnInputEvent_36( );
   }
   
   void Instance_OnEnter_37(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnEnter_37( );
   }
   
   void Instance_OnOver_37(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnOver_37( );
   }
   
   void Instance_OnExit_37(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnExit_37( );
   }
   
   void Instance_OnDown_37(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnDown_37( );
   }
   
   void Instance_OnUp_37(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnUp_37( );
   }
   
   void Instance_OnDrag_37(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnDrag_37( );
   }
   
   void Instance_OnKeyboardSlidOut_38(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnKeyboardSlidOut_38( );
   }
   
   void Instance_OnTouchBegan_39(object o, uScript_Touch.TouchEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_FingerId_39 = e.FingerId;
      event_UnityEngine_GameObject_Position_39 = e.Position;
      event_UnityEngine_GameObject_DeltaPosition_39 = e.DeltaPosition;
      event_UnityEngine_GameObject_DeltaTime_39 = e.DeltaTime;
      event_UnityEngine_GameObject_TapCount_39 = e.TapCount;
      //relay event to nodes
      Relay_OnTouchBegan_39( );
   }
   
   void Instance_OnTouchMoved_39(object o, uScript_Touch.TouchEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_FingerId_39 = e.FingerId;
      event_UnityEngine_GameObject_Position_39 = e.Position;
      event_UnityEngine_GameObject_DeltaPosition_39 = e.DeltaPosition;
      event_UnityEngine_GameObject_DeltaTime_39 = e.DeltaTime;
      event_UnityEngine_GameObject_TapCount_39 = e.TapCount;
      //relay event to nodes
      Relay_OnTouchMoved_39( );
   }
   
   void Instance_OnTouchStationary_39(object o, uScript_Touch.TouchEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_FingerId_39 = e.FingerId;
      event_UnityEngine_GameObject_Position_39 = e.Position;
      event_UnityEngine_GameObject_DeltaPosition_39 = e.DeltaPosition;
      event_UnityEngine_GameObject_DeltaTime_39 = e.DeltaTime;
      event_UnityEngine_GameObject_TapCount_39 = e.TapCount;
      //relay event to nodes
      Relay_OnTouchStationary_39( );
   }
   
   void Instance_OnTouchEnded_39(object o, uScript_Touch.TouchEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_FingerId_39 = e.FingerId;
      event_UnityEngine_GameObject_Position_39 = e.Position;
      event_UnityEngine_GameObject_DeltaPosition_39 = e.DeltaPosition;
      event_UnityEngine_GameObject_DeltaTime_39 = e.DeltaTime;
      event_UnityEngine_GameObject_TapCount_39 = e.TapCount;
      //relay event to nodes
      Relay_OnTouchEnded_39( );
   }
   
   void Instance_OnTouchCanceled_39(object o, uScript_Touch.TouchEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_FingerId_39 = e.FingerId;
      event_UnityEngine_GameObject_Position_39 = e.Position;
      event_UnityEngine_GameObject_DeltaPosition_39 = e.DeltaPosition;
      event_UnityEngine_GameObject_DeltaTime_39 = e.DeltaTime;
      event_UnityEngine_GameObject_TapCount_39 = e.TapCount;
      //relay event to nodes
      Relay_OnTouchCanceled_39( );
   }
   
   void Instance_ConnectedToServer_48(object o, uScript_NetworkClientConnection.NetworkClientConnectionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Failure_48 = e.Failure;
      //relay event to nodes
      Relay_ConnectedToServer_48( );
   }
   
   void Instance_DisconnectedFromServer_48(object o, uScript_NetworkClientConnection.NetworkClientConnectionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Failure_48 = e.Failure;
      //relay event to nodes
      Relay_DisconnectedFromServer_48( );
   }
   
   void Instance_FailedToConnect_49(object o, uScript_NetworkFailedConnection.NetworkFailedConnectionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Error_49 = e.Error;
      //relay event to nodes
      Relay_FailedToConnect_49( );
   }
   
   void Instance_FailedToConnectToMaster_49(object o, uScript_NetworkFailedConnection.NetworkFailedConnectionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_Error_49 = e.Error;
      //relay event to nodes
      Relay_FailedToConnectToMaster_49( );
   }
   
   void Instance_OnInstantiate_50(object o, uScript_NetworkInstantiate.NetworkInstantiateEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_MessageInfo_50 = e.MessageInfo;
      //relay event to nodes
      Relay_OnInstantiate_50( );
   }
   
   void Instance_OnEvent_51(object o, uScript_NetworkMasterServer.NetworkMasterServerEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_MasterServerEvent_51 = e.MasterServerEvent;
      //relay event to nodes
      Relay_OnEvent_51( );
   }
   
   void Instance_OnSerialize_52(object o, uScript_NetworkSerialization.NetworkSerializationEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_BitStream_52 = e.BitStream;
      event_UnityEngine_GameObject_MessageInfo_52 = e.MessageInfo;
      //relay event to nodes
      Relay_OnSerialize_52( );
   }
   
   void Instance_OnInitialized_53(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_OnInitialized_53( );
   }
   
   void Instance_PlayerConnected_54(object o, uScript_NetworkServerPlayer.NetworkServerPlayerEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_NetworkPlayer_54 = e.NetworkPlayer;
      //relay event to nodes
      Relay_PlayerConnected_54( );
   }
   
   void Instance_PlayerDisconnected_54(object o, uScript_NetworkServerPlayer.NetworkServerPlayerEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_NetworkPlayer_54 = e.NetworkPlayer;
      //relay event to nodes
      Relay_PlayerDisconnected_54( );
   }
   
   void Instance_Collision_56(object o, uScript_Particle.ParticleCollisionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_GameObject_56 = e.GameObject;
      //relay event to nodes
      Relay_Collision_56( );
   }
   
   void Instance_OnHit_58(object o, uScript_ProxyController.ProxyControllerCollisionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_GameObject_58 = e.GameObject;
      event_UnityEngine_GameObject_Controller_58 = e.Controller;
      event_UnityEngine_GameObject_Collider_58 = e.Collider;
      event_UnityEngine_GameObject_RigidBody_58 = e.RigidBody;
      event_UnityEngine_GameObject_Transform_58 = e.Transform;
      event_UnityEngine_GameObject_Point_58 = e.Point;
      event_UnityEngine_GameObject_Normal_58 = e.Normal;
      event_UnityEngine_GameObject_MoveDirection_58 = e.MoveDirection;
      event_UnityEngine_GameObject_MoveLength_58 = e.MoveLength;
      //relay event to nodes
      Relay_OnHit_58( );
   }
   
   void Instance_JointBreak_59(object o, uScript_Joint.JointBreakEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_BreakForce_59 = e.BreakForce;
      //relay event to nodes
      Relay_JointBreak_59( );
   }
   
   void Instance_OnEnterCollision_60(object o, uScript_Collision.CollisionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_RelativeVelocity_60 = e.RelativeVelocity;
      event_UnityEngine_GameObject_RigidBody_60 = e.RigidBody;
      event_UnityEngine_GameObject_Collider_60 = e.Collider;
      event_UnityEngine_GameObject_Transform_60 = e.Transform;
      event_UnityEngine_GameObject_Contacts_60 = e.Contacts;
      event_UnityEngine_GameObject_GameObject_60 = e.GameObject;
      //relay event to nodes
      Relay_OnEnterCollision_60( );
   }
   
   void Instance_OnExitCollision_60(object o, uScript_Collision.CollisionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_RelativeVelocity_60 = e.RelativeVelocity;
      event_UnityEngine_GameObject_RigidBody_60 = e.RigidBody;
      event_UnityEngine_GameObject_Collider_60 = e.Collider;
      event_UnityEngine_GameObject_Transform_60 = e.Transform;
      event_UnityEngine_GameObject_Contacts_60 = e.Contacts;
      event_UnityEngine_GameObject_GameObject_60 = e.GameObject;
      //relay event to nodes
      Relay_OnExitCollision_60( );
   }
   
   void Instance_WhileInsideCollision_60(object o, uScript_Collision.CollisionEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_RelativeVelocity_60 = e.RelativeVelocity;
      event_UnityEngine_GameObject_RigidBody_60 = e.RigidBody;
      event_UnityEngine_GameObject_Collider_60 = e.Collider;
      event_UnityEngine_GameObject_Transform_60 = e.Transform;
      event_UnityEngine_GameObject_Contacts_60 = e.Contacts;
      event_UnityEngine_GameObject_GameObject_60 = e.GameObject;
      //relay event to nodes
      Relay_WhileInsideCollision_60( );
   }
   
   void Instance_RenderImage_66(object o, uScript_PostEffect.PostEffectEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_SourceTexture_66 = e.SourceTexture;
      event_UnityEngine_GameObject_DestinationTexture_66 = e.DestinationTexture;
      //relay event to nodes
      Relay_RenderImage_66( );
   }
   
   void Instance_PreCull_67(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_PreCull_67( );
   }
   
   void Instance_PreRender_67(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_PreRender_67( );
   }
   
   void Instance_PostRender_67(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_PostRender_67( );
   }
   
   void Instance_RenderObject_67(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_RenderObject_67( );
   }
   
   void Instance_WillRenderObject_67(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_WillRenderObject_67( );
   }
   
   void Instance_OnEnterTrigger_68(object o, uScript_Triggers.TriggerEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_GameObject_68 = e.GameObject;
      //relay event to nodes
      Relay_OnEnterTrigger_68( );
   }
   
   void Instance_OnExitTrigger_68(object o, uScript_Triggers.TriggerEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_GameObject_68 = e.GameObject;
      //relay event to nodes
      Relay_OnExitTrigger_68( );
   }
   
   void Instance_WhileInsideTrigger_68(object o, uScript_Triggers.TriggerEventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      event_UnityEngine_GameObject_GameObject_68 = e.GameObject;
      //relay event to nodes
      Relay_WhileInsideTrigger_68( );
   }
   
   void Instance_uScriptStart_73(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_uScriptStart_73( );
   }
   
   void Instance_KeyEvent_140(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_140( );
   }
   
   void Instance_KeyEvent_164(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_164( );
   }
   
   void Instance_KeyEvent_194(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_194( );
   }
   
   void Instance_KeyEvent_225(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_225( );
   }
   
   void Instance_KeyEvent_274(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_274( );
   }
   
   void Instance_KeyEvent_347(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_347( );
   }
   
   void Instance_KeyEvent_396(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_396( );
   }
   
   void Instance_KeyEvent_410(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_KeyEvent_410( );
   }
   
   void Instance_uScriptStart_459(object o, System.EventArgs e)
   {
      //reset event call
      //if it ever goes above MaxRelayCallCount before being reset
      //then we assume it is stuck in an infinite loop
      if ( relayCallCount < MaxRelayCallCount ) relayCallCount = 0;
      
      //fill globals
      //relay event to nodes
      Relay_uScriptStart_459( );
   }
   
   void uScriptCon_Gate_Out_95(object o, System.EventArgs e)
   {
      //fill globals
      //links to IsOpen = 0
      //relay event to nodes
      Relay_Out_95( );
   }
   
   void uScriptCon_TimedGate_Out_96(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Out_96( );
   }
   
   void uScriptCon_ManualSwitch_Output1_98(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Output1_98( );
   }
   
   void uScriptCon_ManualSwitch_Output2_98(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Output2_98( );
   }
   
   void uScriptCon_ManualSwitch_Output3_98(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Output3_98( );
   }
   
   void uScriptCon_ManualSwitch_Output4_98(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Output4_98( );
   }
   
   void uScriptCon_ManualSwitch_Output5_98(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Output5_98( );
   }
   
   void uScriptCon_ManualSwitch_Output6_98(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Output6_98( );
   }
   
   void uScriptAct_GUIButton_OnButtonDown_121(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_OnButtonDown_121( );
   }
   
   void uScriptAct_GUIButton_OnButtonHeld_121(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_OnButtonHeld_121( );
   }
   
   void uScriptAct_GUIButton_OnButtonUp_121(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_OnButtonUp_121( );
   }
   
   void uScriptAct_GUIButton_OnButtonClicked_121(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_OnButtonClicked_121( );
   }
   
   void uScriptAct_PlayAnimation_Finished_195(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Finished_195( );
   }
   
   void uScriptAct_PlaySound_Finished_227(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Finished_227( );
   }
   
   void uScriptAct_LoadLevel_Loaded_232(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Loaded_232( );
   }
   
   void uScriptAct_LoadLevelByIndex_Loaded_233(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Loaded_233( );
   }
   
   void uScriptAct_Toggle_OnOut_277(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_OnOut_277( );
   }
   
   void uScriptAct_Toggle_OffOut_277(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_OffOut_277( );
   }
   
   void uScriptAct_Toggle_ToggleOut_277(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_ToggleOut_277( );
   }
   
   void uScriptAct_ToggleComponent_OnOut_279(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_OnOut_279( );
   }
   
   void uScriptAct_ToggleComponent_OffOut_279(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_OffOut_279( );
   }
   
   void uScriptAct_ToggleComponent_ToggleOut_279(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_ToggleOut_279( );
   }
   
   void uScriptAct_LookAt_Finished_375(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Finished_375( );
   }
   
   void uScriptAct_MoveToLocation_Finished_376(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Finished_376( );
   }
   
   void uScriptAct_SpawnPrefab_FinishedSpawning_389(object o, System.EventArgs e)
   {
      //fill globals
      //links to SpawnedGameObject = 1
      local_392_UnityEngine_GameObject = logic_uScriptAct_SpawnPrefab_SpawnedGameObject_389;
      {
         //if our game object reference was changed then we need to reset event listeners
         if ( local_392_UnityEngine_GameObject_previous != local_392_UnityEngine_GameObject || false == m_RegisteredForEvents )
         {
            //tear down old listeners
            
            local_392_UnityEngine_GameObject_previous = local_392_UnityEngine_GameObject;
            
            //setup new listeners
         }
      }
      //links to SpawnedInstancedID = 0
      //relay event to nodes
      Relay_FinishedSpawning_389( );
   }
   
   void uScriptAct_SpawnPrefabAtLocation_FinishedSpawning_390(object o, System.EventArgs e)
   {
      //fill globals
      //links to SpawnedGameObject = 0
      //links to SpawnedInstancedID = 0
      //relay event to nodes
      Relay_FinishedSpawning_390( );
   }
   
   void CodeGenTest_Nested_Node_Is_Done_458(object o, System.EventArgs e)
   {
      //fill globals
      //relay event to nodes
      Relay_Node_Is_Done_458( );
   }
   
   void Relay_FocusEvent_0()
   {
      if (true == CheckDebugBreak("5249e810-8011-4af6-b144-a1eacb21239a", "Application Focus", Relay_FocusEvent_0)) return; 
      Relay_In_2();
   }
   
   void Relay_QuitEvent_1()
   {
      if (true == CheckDebugBreak("fed0475d-3060-46c0-8c33-56add62e7419", "Application Quit", Relay_QuitEvent_1)) return; 
      Relay_In_6();
   }
   
   void Relay_In_2()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("306bd7bd-e180-49ef-ad0c-d2ae93fb873e", "Log", Relay_In_2)) return; 
         {
            {
               logic_uScriptAct_Log_Prefix_2 = local_3_System_String;
               
            }
            {
               List<System.Object> properties = new List<System.Object>();
               properties.Add((System.Object)local_Named_Variable_System_String);
               logic_uScriptAct_Log_Target_2 = properties.ToArray();
            }
            {
               logic_uScriptAct_Log_Postfix_2 = local_4_System_String;
               
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_2.In(logic_uScriptAct_Log_Prefix_2, logic_uScriptAct_Log_Target_2, logic_uScriptAct_Log_Postfix_2);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_6()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c0640021-1ec9-49b4-8ed2-1c252c63d1e7", "Log", Relay_In_6)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_6.In(logic_uScriptAct_Log_Prefix_6, logic_uScriptAct_Log_Target_6, logic_uScriptAct_Log_Postfix_6);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnCustomEvent_7()
   {
      if (true == CheckDebugBreak("b64b5b49-0c59-497e-8579-c60e9dfe49e8", "Custom Event", Relay_OnCustomEvent_7)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventBool_8()
   {
      if (true == CheckDebugBreak("c3d5afcc-d1c9-4fd5-b652-736a156be362", "Custom Event (Bool)", Relay_OnCustomEventBool_8)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventColor_9()
   {
      if (true == CheckDebugBreak("5e10c895-9686-4ae0-be3c-c3817e6ddb85", "Custom Event (Color)", Relay_OnCustomEventColor_9)) return; 
      local_19_System_String = event_UnityEngine_GameObject_EventName_9;
      Relay_In_20();
   }
   
   void Relay_OnCustomEventFloat_10()
   {
      if (true == CheckDebugBreak("382058ef-0dd8-4c7b-9dfe-91c8c2aa0e36", "Custom Event (Float)", Relay_OnCustomEventFloat_10)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventGameObject_11()
   {
      if (true == CheckDebugBreak("e4e85a6f-4498-4222-9309-c0b9ddb7cdfa", "Custom Event (GameObject)", Relay_OnCustomEventGameObject_11)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventInt_12()
   {
      if (true == CheckDebugBreak("4229cbc2-06ce-40bd-9c27-bff56c414838", "Custom Event (Int)", Relay_OnCustomEventInt_12)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventObject_13()
   {
      if (true == CheckDebugBreak("6a4412eb-92e1-4824-a1ab-90f790017ce5", "Custom Event (Object)", Relay_OnCustomEventObject_13)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventString_14()
   {
      if (true == CheckDebugBreak("982aa3ee-f9e1-482f-83c0-0dfa25e046e1", "Custom Event (String)", Relay_OnCustomEventString_14)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventVector2_15()
   {
      if (true == CheckDebugBreak("2b841a97-54fe-420a-a9f9-09a9e117a919", "Custom Event (Vector2)", Relay_OnCustomEventVector2_15)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventVector3_16()
   {
      if (true == CheckDebugBreak("5803201b-adda-4e1e-b1a5-9a51647e8ea6", "Custom Event (Vector3)", Relay_OnCustomEventVector3_16)) return; 
      Relay_In_20();
   }
   
   void Relay_OnCustomEventVector4_17()
   {
      if (true == CheckDebugBreak("5e2e9ce1-d144-4385-be64-aecedf858721", "Custom Event (Vector4)", Relay_OnCustomEventVector4_17)) return; 
      Relay_In_20();
   }
   
   void Relay_In_20()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("beae2a94-1925-4044-be31-895d91691913", "Log", Relay_In_20)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_20.In(logic_uScriptAct_Log_Prefix_20, logic_uScriptAct_Log_Target_20, logic_uScriptAct_Log_Postfix_20);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnUpdate_21()
   {
      if (true == CheckDebugBreak("d1b827f1-07d9-4f30-9a32-f22ca8a61a27", "Global Update", Relay_OnUpdate_21)) return; 
      Relay_In_24();
   }
   
   void Relay_OnLateUpdate_21()
   {
      if (true == CheckDebugBreak("d1b827f1-07d9-4f30-9a32-f22ca8a61a27", "Global Update", Relay_OnLateUpdate_21)) return; 
      Relay_In_24();
   }
   
   void Relay_OnFixedUpdate_21()
   {
      if (true == CheckDebugBreak("d1b827f1-07d9-4f30-9a32-f22ca8a61a27", "Global Update", Relay_OnFixedUpdate_21)) return; 
      Relay_In_24();
   }
   
   void Relay_OnGui_22()
   {
      if (true == CheckDebugBreak("50e4eee8-9dfe-41a5-b805-c697a0af6714", "GUI Events", Relay_OnGui_22)) return; 
      Relay_In_27();
   }
   
   void Relay_LevelWasLoaded_23()
   {
      if (true == CheckDebugBreak("dfcdd053-54d1-436a-9655-1632de36d696", "Level Load", Relay_LevelWasLoaded_23)) return; 
      Relay_In_25();
   }
   
   void Relay_In_24()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb7bdc31-d43c-4b9b-8ec0-839d4737bd0a", "Log", Relay_In_24)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_24.In(logic_uScriptAct_Log_Prefix_24, logic_uScriptAct_Log_Target_24, logic_uScriptAct_Log_Postfix_24);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_25()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f5cfb0f9-fd73-4f9c-8432-82f4c3988053", "Log", Relay_In_25)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_25.In(logic_uScriptAct_Log_Prefix_25, logic_uScriptAct_Log_Target_25, logic_uScriptAct_Log_Postfix_25);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_27()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f9f38efe-d015-4ed5-99e0-0d01fecf7dfb", "Log", Relay_In_27)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_27.In(logic_uScriptAct_Log_Prefix_27, logic_uScriptAct_Log_Target_27, logic_uScriptAct_Log_Postfix_27);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Log_uScriptAct_Log_27.Out;
         
         if ( test_0 == true )
         {
            Relay_In_108();
            Relay_In_119();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_EnableEvent_28()
   {
      if (true == CheckDebugBreak("4ab0acbb-9221-4cc9-9244-26d648bc1082", "GameObject Events", Relay_EnableEvent_28)) return; 
      Relay_ShowLabel_106();
   }
   
   void Relay_DisableEvent_28()
   {
      if (true == CheckDebugBreak("4ab0acbb-9221-4cc9-9244-26d648bc1082", "GameObject Events", Relay_DisableEvent_28)) return; 
      Relay_In_30();
      Relay_HideLabel_106();
   }
   
   void Relay_DestroyEvent_28()
   {
      if (true == CheckDebugBreak("4ab0acbb-9221-4cc9-9244-26d648bc1082", "GameObject Events", Relay_DestroyEvent_28)) return; 
      Relay_In_30();
   }
   
   void Relay_BecameVisible_29()
   {
      if (true == CheckDebugBreak("b7ab768f-71d2-450d-a809-cd8cac6dacbb", "Visibility Events", Relay_BecameVisible_29)) return; 
      Relay_In_31();
   }
   
   void Relay_BecameInvisible_29()
   {
      if (true == CheckDebugBreak("b7ab768f-71d2-450d-a809-cd8cac6dacbb", "Visibility Events", Relay_BecameInvisible_29)) return; 
      Relay_In_31();
   }
   
   void Relay_In_30()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("742c8218-a759-4394-b3cd-68952a92e4df", "Log", Relay_In_30)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_30.In(logic_uScriptAct_Log_Prefix_30, logic_uScriptAct_Log_Target_30, logic_uScriptAct_Log_Postfix_30);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_31()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6dbac129-47b8-4213-8718-f0d48bc74cde", "Log", Relay_In_31)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_31.In(logic_uScriptAct_Log_Prefix_31, logic_uScriptAct_Log_Target_31, logic_uScriptAct_Log_Postfix_31);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnAccelerationEvent_33()
   {
      if (true == CheckDebugBreak("9ccc7462-c084-4960-a39d-d0e1575baa2a", "Accelerometer Events", Relay_OnAccelerationEvent_33)) return; 
      Relay_In_41();
   }
   
   void Relay_OnDevicePortrait_34()
   {
      if (true == CheckDebugBreak("1b042531-5783-4395-9e6c-b1e4cc92010d", "Device Orientation Events", Relay_OnDevicePortrait_34)) return; 
      Relay_In_42();
   }
   
   void Relay_OnDevicePortraitUpsideDown_34()
   {
      if (true == CheckDebugBreak("1b042531-5783-4395-9e6c-b1e4cc92010d", "Device Orientation Events", Relay_OnDevicePortraitUpsideDown_34)) return; 
      Relay_In_42();
   }
   
   void Relay_OnDeviceLandscapeLeft_34()
   {
      if (true == CheckDebugBreak("1b042531-5783-4395-9e6c-b1e4cc92010d", "Device Orientation Events", Relay_OnDeviceLandscapeLeft_34)) return; 
      Relay_In_42();
   }
   
   void Relay_OnDeviceLandscapeRight_34()
   {
      if (true == CheckDebugBreak("1b042531-5783-4395-9e6c-b1e4cc92010d", "Device Orientation Events", Relay_OnDeviceLandscapeRight_34)) return; 
      Relay_In_42();
   }
   
   void Relay_OnDeviceFaceUp_34()
   {
      if (true == CheckDebugBreak("1b042531-5783-4395-9e6c-b1e4cc92010d", "Device Orientation Events", Relay_OnDeviceFaceUp_34)) return; 
      Relay_In_42();
   }
   
   void Relay_OnDeviceFaceDown_34()
   {
      if (true == CheckDebugBreak("1b042531-5783-4395-9e6c-b1e4cc92010d", "Device Orientation Events", Relay_OnDeviceFaceDown_34)) return; 
      Relay_In_42();
   }
   
   void Relay_KeyEvent_35()
   {
      if (true == CheckDebugBreak("3972e7d7-4f74-4d5d-9a32-1bd5e27004c6", "Input Events", Relay_KeyEvent_35)) return; 
      Relay_In_44();
   }
   
   void Relay_OnInputEvent_36()
   {
      if (true == CheckDebugBreak("ac7fb206-648c-439c-a7e6-9664f6e7284e", "Managed Input Events", Relay_OnInputEvent_36)) return; 
      Relay_In_46();
   }
   
   void Relay_OnEnter_37()
   {
      if (true == CheckDebugBreak("de94afe5-796f-4ab9-9675-5492fb0e91f6", "Mouse Cursor Events", Relay_OnEnter_37)) return; 
      Relay_In_43();
   }
   
   void Relay_OnOver_37()
   {
      if (true == CheckDebugBreak("de94afe5-796f-4ab9-9675-5492fb0e91f6", "Mouse Cursor Events", Relay_OnOver_37)) return; 
      Relay_In_43();
   }
   
   void Relay_OnExit_37()
   {
      if (true == CheckDebugBreak("de94afe5-796f-4ab9-9675-5492fb0e91f6", "Mouse Cursor Events", Relay_OnExit_37)) return; 
      Relay_In_43();
   }
   
   void Relay_OnDown_37()
   {
      if (true == CheckDebugBreak("de94afe5-796f-4ab9-9675-5492fb0e91f6", "Mouse Cursor Events", Relay_OnDown_37)) return; 
      Relay_In_43();
   }
   
   void Relay_OnUp_37()
   {
      if (true == CheckDebugBreak("de94afe5-796f-4ab9-9675-5492fb0e91f6", "Mouse Cursor Events", Relay_OnUp_37)) return; 
      Relay_In_43();
   }
   
   void Relay_OnDrag_37()
   {
      if (true == CheckDebugBreak("de94afe5-796f-4ab9-9675-5492fb0e91f6", "Mouse Cursor Events", Relay_OnDrag_37)) return; 
      Relay_In_43();
   }
   
   void Relay_OnKeyboardSlidOut_38()
   {
      if (true == CheckDebugBreak("8c225a6f-b289-4dd3-98a5-ac7557892fad", "On-Screen Keyboard Events", Relay_OnKeyboardSlidOut_38)) return; 
      Relay_In_47();
   }
   
   void Relay_OnTouchBegan_39()
   {
      if (true == CheckDebugBreak("58ab34c7-3228-402a-8334-3555da8384b1", "Touch Events", Relay_OnTouchBegan_39)) return; 
      Relay_In_45();
   }
   
   void Relay_OnTouchMoved_39()
   {
      if (true == CheckDebugBreak("58ab34c7-3228-402a-8334-3555da8384b1", "Touch Events", Relay_OnTouchMoved_39)) return; 
      Relay_In_45();
   }
   
   void Relay_OnTouchStationary_39()
   {
      if (true == CheckDebugBreak("58ab34c7-3228-402a-8334-3555da8384b1", "Touch Events", Relay_OnTouchStationary_39)) return; 
      Relay_In_45();
   }
   
   void Relay_OnTouchEnded_39()
   {
      if (true == CheckDebugBreak("58ab34c7-3228-402a-8334-3555da8384b1", "Touch Events", Relay_OnTouchEnded_39)) return; 
      Relay_In_45();
   }
   
   void Relay_OnTouchCanceled_39()
   {
      if (true == CheckDebugBreak("58ab34c7-3228-402a-8334-3555da8384b1", "Touch Events", Relay_OnTouchCanceled_39)) return; 
      Relay_In_45();
   }
   
   void Relay_In_41()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e3045b93-b7ef-471f-9ba3-85dcecc91a8f", "Log", Relay_In_41)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_41.In(logic_uScriptAct_Log_Prefix_41, logic_uScriptAct_Log_Target_41, logic_uScriptAct_Log_Postfix_41);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_42()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a4b40b80-1e93-436a-959d-c3d9c386dd8e", "Log", Relay_In_42)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_42.In(logic_uScriptAct_Log_Prefix_42, logic_uScriptAct_Log_Target_42, logic_uScriptAct_Log_Postfix_42);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_43()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a9b62893-9ad5-4acb-bb59-5c3af55406c5", "Log", Relay_In_43)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_43.In(logic_uScriptAct_Log_Prefix_43, logic_uScriptAct_Log_Target_43, logic_uScriptAct_Log_Postfix_43);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_44()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a11a00fd-22c5-4b58-b18a-274a49d1b1bb", "Log", Relay_In_44)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_44.In(logic_uScriptAct_Log_Prefix_44, logic_uScriptAct_Log_Target_44, logic_uScriptAct_Log_Postfix_44);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_45()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b03d7839-8819-4f07-b4ef-9540de775c96", "Log", Relay_In_45)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_45.In(logic_uScriptAct_Log_Prefix_45, logic_uScriptAct_Log_Target_45, logic_uScriptAct_Log_Postfix_45);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_46()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("616ec9b5-0300-4b6a-831b-be89c7854448", "Log", Relay_In_46)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_46.In(logic_uScriptAct_Log_Prefix_46, logic_uScriptAct_Log_Target_46, logic_uScriptAct_Log_Postfix_46);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_47()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("cb88fad4-c8a8-4543-b624-8c77b6a0d324", "Log", Relay_In_47)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_47.In(logic_uScriptAct_Log_Prefix_47, logic_uScriptAct_Log_Target_47, logic_uScriptAct_Log_Postfix_47);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_ConnectedToServer_48()
   {
      if (true == CheckDebugBreak("d733a5b7-31b0-4bbf-88a4-2cc4f4eae7e8", "Network Client Connection", Relay_ConnectedToServer_48)) return; 
      Relay_In_61();
   }
   
   void Relay_DisconnectedFromServer_48()
   {
      if (true == CheckDebugBreak("d733a5b7-31b0-4bbf-88a4-2cc4f4eae7e8", "Network Client Connection", Relay_DisconnectedFromServer_48)) return; 
      Relay_In_61();
   }
   
   void Relay_FailedToConnect_49()
   {
      if (true == CheckDebugBreak("e4e6a0d7-c7b9-43f7-b3a6-be1e5361095a", "Network Failed Connection", Relay_FailedToConnect_49)) return; 
      Relay_In_61();
   }
   
   void Relay_FailedToConnectToMaster_49()
   {
      if (true == CheckDebugBreak("e4e6a0d7-c7b9-43f7-b3a6-be1e5361095a", "Network Failed Connection", Relay_FailedToConnectToMaster_49)) return; 
      Relay_In_61();
   }
   
   void Relay_OnInstantiate_50()
   {
      if (true == CheckDebugBreak("c231d072-c927-4a50-b475-f0346e722441", "Network Instantiate", Relay_OnInstantiate_50)) return; 
      Relay_In_61();
   }
   
   void Relay_OnEvent_51()
   {
      if (true == CheckDebugBreak("4d2ec7d5-fdc9-41ed-b189-a86c814564be", "Network Master Server", Relay_OnEvent_51)) return; 
      Relay_In_61();
   }
   
   void Relay_OnSerialize_52()
   {
      if (true == CheckDebugBreak("292f9439-837e-4c94-8131-24a3cefcea74", "Network Serialization", Relay_OnSerialize_52)) return; 
      Relay_In_61();
   }
   
   void Relay_OnInitialized_53()
   {
      if (true == CheckDebugBreak("949b0156-2461-4637-b988-13fe1b467a8a", "Network Server Initialized", Relay_OnInitialized_53)) return; 
      Relay_In_61();
   }
   
   void Relay_PlayerConnected_54()
   {
      if (true == CheckDebugBreak("9a7caaf5-fcc3-495c-8129-bcd66c02b384", "Network Server Player", Relay_PlayerConnected_54)) return; 
      Relay_In_61();
   }
   
   void Relay_PlayerDisconnected_54()
   {
      if (true == CheckDebugBreak("9a7caaf5-fcc3-495c-8129-bcd66c02b384", "Network Server Player", Relay_PlayerDisconnected_54)) return; 
      Relay_In_61();
   }
   
   void Relay_Collision_56()
   {
      if (true == CheckDebugBreak("8ec9f06c-b6ce-4648-8f99-3ac2c712d158", "Particle Collision", Relay_Collision_56)) return; 
      Relay_In_62();
   }
   
   void Relay_OnHit_58()
   {
      if (true == CheckDebugBreak("d2fc6117-c285-4418-beb9-84e42ed13a4a", "Controller Collision", Relay_OnHit_58)) return; 
      Relay_In_65();
   }
   
   void Relay_JointBreak_59()
   {
      if (true == CheckDebugBreak("e7d09578-6608-43c1-859c-a740687f6929", "Joint Break", Relay_JointBreak_59)) return; 
      Relay_In_63();
   }
   
   void Relay_OnEnterCollision_60()
   {
      if (true == CheckDebugBreak("43ef98b3-234d-4ec7-afad-73033ee19f46", "On Collision", Relay_OnEnterCollision_60)) return; 
      Relay_In_64();
   }
   
   void Relay_OnExitCollision_60()
   {
      if (true == CheckDebugBreak("43ef98b3-234d-4ec7-afad-73033ee19f46", "On Collision", Relay_OnExitCollision_60)) return; 
      Relay_In_64();
   }
   
   void Relay_WhileInsideCollision_60()
   {
      if (true == CheckDebugBreak("43ef98b3-234d-4ec7-afad-73033ee19f46", "On Collision", Relay_WhileInsideCollision_60)) return; 
      Relay_In_64();
   }
   
   void Relay_In_61()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("74c8bc8c-2467-40ee-afae-cc24c033801a", "Log", Relay_In_61)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_61.In(logic_uScriptAct_Log_Prefix_61, logic_uScriptAct_Log_Target_61, logic_uScriptAct_Log_Postfix_61);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_62()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ce515e58-86df-4ee9-af5d-602becf84929", "Log", Relay_In_62)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_62.In(logic_uScriptAct_Log_Prefix_62, logic_uScriptAct_Log_Target_62, logic_uScriptAct_Log_Postfix_62);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_63()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f299e004-87d7-45aa-ba2b-08041fccccac", "Log", Relay_In_63)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_63.In(logic_uScriptAct_Log_Prefix_63, logic_uScriptAct_Log_Target_63, logic_uScriptAct_Log_Postfix_63);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_64()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c9d4bb7d-e034-4906-8163-298004dd69f0", "Log", Relay_In_64)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_64.In(logic_uScriptAct_Log_Prefix_64, logic_uScriptAct_Log_Target_64, logic_uScriptAct_Log_Postfix_64);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_65()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("cee184d0-f567-4bca-b810-8f83390b98b5", "Log", Relay_In_65)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_65.In(logic_uScriptAct_Log_Prefix_65, logic_uScriptAct_Log_Target_65, logic_uScriptAct_Log_Postfix_65);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_RenderImage_66()
   {
      if (true == CheckDebugBreak("2e502e15-0c76-44fb-ad1d-30a7e0b57e21", "Post Effect Events", Relay_RenderImage_66)) return; 
      Relay_In_70();
   }
   
   void Relay_PreCull_67()
   {
      if (true == CheckDebugBreak("a31bd27c-1ad3-4737-a72d-b5a3ea802bb6", "Render Events", Relay_PreCull_67)) return; 
      Relay_In_71();
   }
   
   void Relay_PreRender_67()
   {
      if (true == CheckDebugBreak("a31bd27c-1ad3-4737-a72d-b5a3ea802bb6", "Render Events", Relay_PreRender_67)) return; 
      Relay_In_71();
   }
   
   void Relay_PostRender_67()
   {
      if (true == CheckDebugBreak("a31bd27c-1ad3-4737-a72d-b5a3ea802bb6", "Render Events", Relay_PostRender_67)) return; 
      Relay_In_71();
   }
   
   void Relay_RenderObject_67()
   {
      if (true == CheckDebugBreak("a31bd27c-1ad3-4737-a72d-b5a3ea802bb6", "Render Events", Relay_RenderObject_67)) return; 
      Relay_In_71();
   }
   
   void Relay_WillRenderObject_67()
   {
      if (true == CheckDebugBreak("a31bd27c-1ad3-4737-a72d-b5a3ea802bb6", "Render Events", Relay_WillRenderObject_67)) return; 
      Relay_In_71();
   }
   
   void Relay_OnEnterTrigger_68()
   {
      if (true == CheckDebugBreak("4f6f50df-b6fc-45ae-8578-69cb9730b824", "Trigger Events", Relay_OnEnterTrigger_68)) return; 
      Relay_In_72();
   }
   
   void Relay_OnExitTrigger_68()
   {
      if (true == CheckDebugBreak("4f6f50df-b6fc-45ae-8578-69cb9730b824", "Trigger Events", Relay_OnExitTrigger_68)) return; 
      Relay_In_72();
   }
   
   void Relay_WhileInsideTrigger_68()
   {
      if (true == CheckDebugBreak("4f6f50df-b6fc-45ae-8578-69cb9730b824", "Trigger Events", Relay_WhileInsideTrigger_68)) return; 
      Relay_In_72();
   }
   
   void Relay_In_70()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("bdcbbbe5-690c-4b5d-a13b-18099cee8c40", "Log", Relay_In_70)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_70.In(logic_uScriptAct_Log_Prefix_70, logic_uScriptAct_Log_Target_70, logic_uScriptAct_Log_Postfix_70);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_71()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7f17cb9f-5311-45f1-b338-2918efb04a08", "Log", Relay_In_71)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_71.In(logic_uScriptAct_Log_Prefix_71, logic_uScriptAct_Log_Target_71, logic_uScriptAct_Log_Postfix_71);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_72()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("95afb828-eb25-48a3-b602-fa356aaebcf0", "Log", Relay_In_72)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_72.In(logic_uScriptAct_Log_Prefix_72, logic_uScriptAct_Log_Target_72, logic_uScriptAct_Log_Postfix_72);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_uScriptStart_73()
   {
      if (true == CheckDebugBreak("80ed47c7-3107-45eb-8988-8ff67b0f95eb", "uScript Events", Relay_uScriptStart_73)) return; 
      Relay_In_74();
      Relay_In_93();
      Relay_In_98();
   }
   
   void Relay_In_74()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ede69a15-49ae-497b-82d2-41a5fa5b6c1d", "Check Distance", Relay_In_74)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_CheckDistance_uScriptCon_CheckDistance_74.In(logic_uScriptCon_CheckDistance_A_74, logic_uScriptCon_CheckDistance_B_74, logic_uScriptCon_CheckDistance_Distance_74);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_CheckDistance_uScriptCon_CheckDistance_74.Closer;
         bool test_1 = logic_uScriptCon_CheckDistance_uScriptCon_CheckDistance_74.Further;
         bool test_2 = logic_uScriptCon_CheckDistance_uScriptCon_CheckDistance_74.Equal;
         
         if ( test_0 == true )
         {
            Relay_In_76();
         }
         if ( test_1 == true )
         {
            Relay_In_77();
         }
         if ( test_2 == true )
         {
            Relay_In_77();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Check Distance.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_76()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("656811a5-65ae-473b-b8c2-7db302457ce8", "Compare Bool", Relay_In_76)) return; 
         {
            {
            }
         }
         logic_uScriptCon_CompareBool_uScriptCon_CompareBool_76.In(logic_uScriptCon_CompareBool_Bool_76);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_CompareBool_uScriptCon_CompareBool_76.True;
         bool test_1 = logic_uScriptCon_CompareBool_uScriptCon_CompareBool_76.False;
         
         if ( test_0 == true )
         {
            Relay_In_78();
         }
         if ( test_1 == true )
         {
            Relay_In_77();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare Bool.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_77()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("961f5237-2c08-47a6-ba19-2b1d6e77ee28", "Log", Relay_In_77)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_77.In(logic_uScriptAct_Log_Prefix_77, logic_uScriptAct_Log_Target_77, logic_uScriptAct_Log_Postfix_77);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_78()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7e051208-9107-4aea-a2d8-1df778c2b275", "Compare Bool Equality", Relay_In_78)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_CompareBoolEquality_uScriptCon_CompareBoolEquality_78.In(logic_uScriptCon_CompareBoolEquality_A_78, logic_uScriptCon_CompareBoolEquality_B_78);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_CompareBoolEquality_uScriptCon_CompareBoolEquality_78.EqualTo;
         bool test_1 = logic_uScriptCon_CompareBoolEquality_uScriptCon_CompareBoolEquality_78.NotEqualTo;
         
         if ( test_0 == true )
         {
            Relay_In_79();
         }
         if ( test_1 == true )
         {
            Relay_In_80();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare Bool Equality.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_79()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("23bd23c9-57a9-4496-89fc-2e087eab4701", "Compare Float", Relay_In_79)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79.In(logic_uScriptCon_CompareFloat_A_79, logic_uScriptCon_CompareFloat_B_79);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79.GreaterThan;
         bool test_1 = logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79.GreaterThanOrEqualTo;
         bool test_2 = logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79.EqualTo;
         bool test_3 = logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79.NotEqualTo;
         bool test_4 = logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79.LessThanOrEqualTo;
         bool test_5 = logic_uScriptCon_CompareFloat_uScriptCon_CompareFloat_79.LessThan;
         
         if ( test_0 == true )
         {
            Relay_In_83();
         }
         if ( test_1 == true )
         {
            Relay_In_84();
         }
         if ( test_2 == true )
         {
            Relay_In_85();
         }
         if ( test_3 == true )
         {
            Relay_In_86();
         }
         if ( test_4 == true )
         {
            Relay_In_86();
         }
         if ( test_5 == true )
         {
            Relay_In_86();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_80()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2bab199a-9b9f-4e60-b3ef-397c60255d7a", "Compare GameObjects", Relay_In_80)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_CompareGameObjects_uScriptCon_CompareGameObjects_80.In(logic_uScriptCon_CompareGameObjects_A_80, logic_uScriptCon_CompareGameObjects_B_80, logic_uScriptCon_CompareGameObjects_CompareByTag_80, logic_uScriptCon_CompareGameObjects_CompareByName_80, logic_uScriptCon_CompareGameObjects_ReportNull_80);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_CompareGameObjects_uScriptCon_CompareGameObjects_80.Same;
         bool test_1 = logic_uScriptCon_CompareGameObjects_uScriptCon_CompareGameObjects_80.Different;
         
         if ( test_0 == true )
         {
            Relay_In_82();
         }
         if ( test_1 == true )
         {
            Relay_In_81();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare GameObjects.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_81()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f61830e4-db76-4e4a-b437-9225a278277f", "Compare Int", Relay_In_81)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_CompareInt_uScriptCon_CompareInt_81.In(logic_uScriptCon_CompareInt_A_81, logic_uScriptCon_CompareInt_B_81);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_82()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("93d97096-2713-4d0b-b317-11e70ecd6134", "Compare String", Relay_In_82)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_CompareString_uScriptCon_CompareString_82.In(logic_uScriptCon_CompareString_A_82, logic_uScriptCon_CompareString_B_82);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare String.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_83()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("04b72023-7513-4b42-9a80-6e81899bce3e", "Compare Vector2", Relay_In_83)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_CompareVector2_uScriptCon_CompareVector2_83.In(logic_uScriptCon_CompareVector2_A_83, logic_uScriptCon_CompareVector2_B_83);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_CompareVector2_uScriptCon_CompareVector2_83.Same;
         bool test_1 = logic_uScriptCon_CompareVector2_uScriptCon_CompareVector2_83.Different;
         
         if ( test_0 == true )
         {
            Relay_In_88();
         }
         if ( test_1 == true )
         {
            Relay_In_89();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare Vector2.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_84()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9cea64af-6d10-49c5-b5af-8ee2290eac75", "Compare Vector3", Relay_In_84)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_CompareVector3_uScriptCon_CompareVector3_84.In(logic_uScriptCon_CompareVector3_A_84, logic_uScriptCon_CompareVector3_B_84);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_CompareVector3_uScriptCon_CompareVector3_84.Same;
         bool test_1 = logic_uScriptCon_CompareVector3_uScriptCon_CompareVector3_84.Different;
         
         if ( test_0 == true )
         {
            Relay_In_90();
         }
         if ( test_1 == true )
         {
            Relay_In_91();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_85()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3ccffeca-2107-413b-80bf-1333526841b3", "Compare Vector4", Relay_In_85)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_CompareVector4_uScriptCon_CompareVector4_85.In(logic_uScriptCon_CompareVector4_A_85, logic_uScriptCon_CompareVector4_B_85);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_CompareVector4_uScriptCon_CompareVector4_85.Same;
         bool test_1 = logic_uScriptCon_CompareVector4_uScriptCon_CompareVector4_85.Different;
         
         if ( test_0 == true )
         {
            Relay_In_91();
         }
         if ( test_1 == true )
         {
            Relay_In_91();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Compare Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_86()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c0821ef0-9961-4ed1-a310-99a0c6155419", "Log", Relay_In_86)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_86.In(logic_uScriptAct_Log_Prefix_86, logic_uScriptAct_Log_Target_86, logic_uScriptAct_Log_Postfix_86);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Log_uScriptAct_Log_86.Out;
         
         if ( test_0 == true )
         {
            Relay_In_87();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_87()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("85940cfa-d517-468a-8667-b0f0313ac442", "GameObject Has Tag", Relay_In_87)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_GameObjectHasTag_uScriptCon_GameObjectHasTag_87.In(logic_uScriptCon_GameObjectHasTag_GameObject_87, logic_uScriptCon_GameObjectHasTag_Tag_87);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GameObject Has Tag.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_88()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("017b8b82-3b3e-4164-8454-3f86add04fec", "Is Platform", Relay_In_88)) return; 
         {
            {
            }
         }
         logic_uScriptCon_IsPlatform_uScriptCon_IsPlatform_88.In(logic_uScriptCon_IsPlatform_ValidPlatforms_88);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_IsPlatform_uScriptCon_IsPlatform_88.IsPlatform;
         bool test_1 = logic_uScriptCon_IsPlatform_uScriptCon_IsPlatform_88.IsNotPlatform;
         
         if ( test_0 == true )
         {
            Relay_In_92();
         }
         if ( test_1 == true )
         {
            Relay_In_92();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Is Platform.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_89()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("547bf0cc-6ba8-41fc-a483-2e6c98ff7d28", "Is Power of Two", Relay_In_89)) return; 
         {
            {
            }
         }
         logic_uScriptCon_IsPowerOfTwo_uScriptCon_IsPowerOfTwo_89.In(logic_uScriptCon_IsPowerOfTwo_Target_89);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_IsPowerOfTwo_uScriptCon_IsPowerOfTwo_89.True;
         bool test_1 = logic_uScriptCon_IsPowerOfTwo_uScriptCon_IsPowerOfTwo_89.False;
         
         if ( test_0 == true )
         {
            Relay_In_92();
         }
         if ( test_1 == true )
         {
            Relay_In_92();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Is Power of Two.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_90()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d71d798f-b7c1-4763-b998-e7f7b7d6cd1a", "String Contains", Relay_In_90)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_StringContains_uScriptCon_StringContains_90.In(logic_uScriptCon_StringContains_Target_90, logic_uScriptCon_StringContains_Value_90);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_StringContains_uScriptCon_StringContains_90.True;
         bool test_1 = logic_uScriptCon_StringContains_uScriptCon_StringContains_90.False;
         
         if ( test_0 == true )
         {
            Relay_In_92();
         }
         if ( test_1 == true )
         {
            Relay_In_92();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at String Contains.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_91()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d599dd3c-dfd4-4614-902d-afdac2963d8d", "Log", Relay_In_91)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_91.In(logic_uScriptAct_Log_Prefix_91, logic_uScriptAct_Log_Target_91, logic_uScriptAct_Log_Postfix_91);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_92()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("923f1e36-ede8-422f-8d43-fc8dccb2b54f", "Log", Relay_In_92)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_92.In(logic_uScriptAct_Log_Prefix_92, logic_uScriptAct_Log_Target_92, logic_uScriptAct_Log_Postfix_92);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_93()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ef44a5a9-1a88-4453-a7cc-fa4f303e5fcd", "Float Counter", Relay_In_93)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_FloatCounter_uScriptCon_FloatCounter_93.In(logic_uScriptCon_FloatCounter_A_93, logic_uScriptCon_FloatCounter_B_93, out logic_uScriptCon_FloatCounter_currentValue_93);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_FloatCounter_uScriptCon_FloatCounter_93.GreaterThan;
         bool test_1 = logic_uScriptCon_FloatCounter_uScriptCon_FloatCounter_93.GreaterThanOrEqualTo;
         
         if ( test_0 == true )
         {
            Relay_In_94();
         }
         if ( test_1 == true )
         {
            Relay_Reset_94();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Float Counter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Reset_93()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ef44a5a9-1a88-4453-a7cc-fa4f303e5fcd", "Float Counter", Relay_Reset_93)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_FloatCounter_uScriptCon_FloatCounter_93.Reset(logic_uScriptCon_FloatCounter_A_93, logic_uScriptCon_FloatCounter_B_93, out logic_uScriptCon_FloatCounter_currentValue_93);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_FloatCounter_uScriptCon_FloatCounter_93.GreaterThan;
         bool test_1 = logic_uScriptCon_FloatCounter_uScriptCon_FloatCounter_93.GreaterThanOrEqualTo;
         
         if ( test_0 == true )
         {
            Relay_In_94();
         }
         if ( test_1 == true )
         {
            Relay_Reset_94();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Float Counter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_94()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c6948915-1df4-4ef7-bee1-9a95d282bda9", "Int Counter", Relay_In_94)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.In(logic_uScriptCon_IntCounter_A_94, logic_uScriptCon_IntCounter_B_94, out logic_uScriptCon_IntCounter_currentValue_94);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.GreaterThan;
         bool test_1 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.GreaterThanOrEqualTo;
         bool test_2 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.EqualTo;
         bool test_3 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.LessThanOrEqualTo;
         bool test_4 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.LessThan;
         
         if ( test_0 == true )
         {
            Relay_In_95();
         }
         if ( test_1 == true )
         {
            Relay_Open_95();
         }
         if ( test_2 == true )
         {
            Relay_Close_95();
         }
         if ( test_3 == true )
         {
            Relay_Toggle_95();
         }
         if ( test_4 == true )
         {
            Relay_In_96();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Int Counter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Reset_94()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c6948915-1df4-4ef7-bee1-9a95d282bda9", "Int Counter", Relay_Reset_94)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.Reset(logic_uScriptCon_IntCounter_A_94, logic_uScriptCon_IntCounter_B_94, out logic_uScriptCon_IntCounter_currentValue_94);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.GreaterThan;
         bool test_1 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.GreaterThanOrEqualTo;
         bool test_2 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.EqualTo;
         bool test_3 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.LessThanOrEqualTo;
         bool test_4 = logic_uScriptCon_IntCounter_uScriptCon_IntCounter_94.LessThan;
         
         if ( test_0 == true )
         {
            Relay_In_95();
         }
         if ( test_1 == true )
         {
            Relay_Open_95();
         }
         if ( test_2 == true )
         {
            Relay_Close_95();
         }
         if ( test_3 == true )
         {
            Relay_Toggle_95();
         }
         if ( test_4 == true )
         {
            Relay_In_96();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Int Counter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Out_95()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7c8cadc7-9463-43a8-8832-1bee47ef20ee", "Gate", Relay_Out_95)) return; 
         Relay_In_97();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Gate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_95()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7c8cadc7-9463-43a8-8832-1bee47ef20ee", "Gate", Relay_In_95)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_Gate_uScriptCon_Gate_95.In(logic_uScriptCon_Gate_StartOpen_95, logic_uScriptCon_Gate_AutoCloseCount_95, out logic_uScriptCon_Gate_IsOpen_95);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Gate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Open_95()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7c8cadc7-9463-43a8-8832-1bee47ef20ee", "Gate", Relay_Open_95)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_Gate_uScriptCon_Gate_95.Open(logic_uScriptCon_Gate_StartOpen_95, logic_uScriptCon_Gate_AutoCloseCount_95, out logic_uScriptCon_Gate_IsOpen_95);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Gate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Close_95()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7c8cadc7-9463-43a8-8832-1bee47ef20ee", "Gate", Relay_Close_95)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_Gate_uScriptCon_Gate_95.Close(logic_uScriptCon_Gate_StartOpen_95, logic_uScriptCon_Gate_AutoCloseCount_95, out logic_uScriptCon_Gate_IsOpen_95);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Gate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Toggle_95()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7c8cadc7-9463-43a8-8832-1bee47ef20ee", "Gate", Relay_Toggle_95)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptCon_Gate_uScriptCon_Gate_95.Toggle(logic_uScriptCon_Gate_StartOpen_95, logic_uScriptCon_Gate_AutoCloseCount_95, out logic_uScriptCon_Gate_IsOpen_95);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Gate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Out_96()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e1c706dd-91b8-4d41-a680-57ad2856bef0", "Timed Gate", Relay_Out_96)) return; 
         Relay_Reset_93();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Timed Gate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_96()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e1c706dd-91b8-4d41-a680-57ad2856bef0", "Timed Gate", Relay_In_96)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_TimedGate_uScriptCon_TimedGate_96.In(logic_uScriptCon_TimedGate_Duration_96, logic_uScriptCon_TimedGate_StartOpen_96);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_TimedGate_uScriptCon_TimedGate_96.TooSoon;
         
         if ( test_0 == true )
         {
            Relay_In_79();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Timed Gate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_97()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("442adde1-da1f-4d66-bd3e-41796b075de4", "Log", Relay_In_97)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_97.In(logic_uScriptAct_Log_Prefix_97, logic_uScriptAct_Log_Target_97, logic_uScriptAct_Log_Postfix_97);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Output1_98()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c56e0e89-5878-4b4e-8019-ace81d4b8b6b", "Manual Switch", Relay_Output1_98)) return; 
         Relay_In_99();
         Relay_In_104();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Manual Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Output2_98()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c56e0e89-5878-4b4e-8019-ace81d4b8b6b", "Manual Switch", Relay_Output2_98)) return; 
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Manual Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Output3_98()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c56e0e89-5878-4b4e-8019-ace81d4b8b6b", "Manual Switch", Relay_Output3_98)) return; 
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Manual Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Output4_98()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c56e0e89-5878-4b4e-8019-ace81d4b8b6b", "Manual Switch", Relay_Output4_98)) return; 
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Manual Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Output5_98()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c56e0e89-5878-4b4e-8019-ace81d4b8b6b", "Manual Switch", Relay_Output5_98)) return; 
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Manual Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Output6_98()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c56e0e89-5878-4b4e-8019-ace81d4b8b6b", "Manual Switch", Relay_Output6_98)) return; 
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Manual Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_98()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c56e0e89-5878-4b4e-8019-ace81d4b8b6b", "Manual Switch", Relay_In_98)) return; 
         {
            {
            }
         }
         logic_uScriptCon_ManualSwitch_uScriptCon_ManualSwitch_98.In(logic_uScriptCon_ManualSwitch_CurrentOutput_98);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Manual Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_99()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3b8cecc7-c46b-4382-a8a2-52e0277698b7", "Random Switch", Relay_In_99)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptCon_RandomSwitch_uScriptCon_RandomSwitch_99.In(logic_uScriptCon_RandomSwitch_MaxOutputUsed_99, out logic_uScriptCon_RandomSwitch_CurrentOutput_99);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_RandomSwitch_uScriptCon_RandomSwitch_99.Output5;
         bool test_1 = logic_uScriptCon_RandomSwitch_uScriptCon_RandomSwitch_99.Output6;
         
         if ( test_0 == true )
         {
            Relay_In_100();
         }
         if ( test_1 == true )
         {
            Relay_Reset_100();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Random Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_100()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b19a4262-69e3-4104-835c-2977d2283bca", "Switch", Relay_In_100)) return; 
         {
            {
            }
            {
               logic_uScriptCon_Switch_MaxOutputUsed_100 = local_3_System_Int32;
               
            }
            {
            }
         }
         logic_uScriptCon_Switch_uScriptCon_Switch_100.In(logic_uScriptCon_Switch_Loop_100, logic_uScriptCon_Switch_MaxOutputUsed_100, out logic_uScriptCon_Switch_CurrentOutput_100);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_Switch_uScriptCon_Switch_100.Output1;
         bool test_1 = logic_uScriptCon_Switch_uScriptCon_Switch_100.Output4;
         bool test_2 = logic_uScriptCon_Switch_uScriptCon_Switch_100.Output5;
         
         if ( test_0 == true )
         {
            Relay_In_101();
         }
         if ( test_1 == true )
         {
            Relay_In_101();
         }
         if ( test_2 == true )
         {
            Relay_In_102();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Reset_100()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b19a4262-69e3-4104-835c-2977d2283bca", "Switch", Relay_Reset_100)) return; 
         {
            {
            }
            {
               logic_uScriptCon_Switch_MaxOutputUsed_100 = local_3_System_Int32;
               
            }
            {
            }
         }
         logic_uScriptCon_Switch_uScriptCon_Switch_100.Reset(logic_uScriptCon_Switch_Loop_100, logic_uScriptCon_Switch_MaxOutputUsed_100, out logic_uScriptCon_Switch_CurrentOutput_100);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptCon_Switch_uScriptCon_Switch_100.Output1;
         bool test_1 = logic_uScriptCon_Switch_uScriptCon_Switch_100.Output4;
         bool test_2 = logic_uScriptCon_Switch_uScriptCon_Switch_100.Output5;
         
         if ( test_0 == true )
         {
            Relay_In_101();
         }
         if ( test_1 == true )
         {
            Relay_In_101();
         }
         if ( test_2 == true )
         {
            Relay_In_102();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Switch.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_101()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9b7a5334-73aa-4089-ad2b-4b41a11be7db", "Log", Relay_In_101)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_101.In(logic_uScriptAct_Log_Prefix_101, logic_uScriptAct_Log_Target_101, logic_uScriptAct_Log_Postfix_101);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_102()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1fb5a1bd-4a72-4723-977a-aec6ea3602d9", "Log", Relay_In_102)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_102.In(logic_uScriptAct_Log_Prefix_102, logic_uScriptAct_Log_Target_102, logic_uScriptAct_Log_Postfix_102);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_104()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9214ca3c-accd-43bd-a5a7-dea8f1315ab0", "Print String List", Relay_In_104)) return; 
         {
            {
               List<System.String> properties = new List<System.String>();
               properties.AddRange(local_105_System_StringArray);
               logic_uScriptAct_PrintList_Strings_104 = properties.ToArray();
            }
         }
         logic_uScriptAct_PrintList_uScriptAct_PrintList_104.In(logic_uScriptAct_PrintList_Strings_104);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Print String List.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_ShowLabel_106()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("765e27f9-3962-4d37-b58b-eace4309385d", "Print Text", Relay_ShowLabel_106)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
               logic_uScriptAct_PrintText_FontColor_106 = local_107_UnityEngine_Color;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_PrintText_uScriptAct_PrintText_106.ShowLabel(logic_uScriptAct_PrintText_Text_106, logic_uScriptAct_PrintText_FontSize_106, logic_uScriptAct_PrintText_FontStyle_106, logic_uScriptAct_PrintText_FontColor_106, logic_uScriptAct_PrintText_textAnchor_106, logic_uScriptAct_PrintText_EdgePadding_106, logic_uScriptAct_PrintText_time_106);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_PrintText_uScriptAct_PrintText_106.Out;
         
         if ( test_0 == true )
         {
            Relay_In_139();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Print Text.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_HideLabel_106()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("765e27f9-3962-4d37-b58b-eace4309385d", "Print Text", Relay_HideLabel_106)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
               logic_uScriptAct_PrintText_FontColor_106 = local_107_UnityEngine_Color;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_PrintText_uScriptAct_PrintText_106.HideLabel(logic_uScriptAct_PrintText_Text_106, logic_uScriptAct_PrintText_FontSize_106, logic_uScriptAct_PrintText_FontStyle_106, logic_uScriptAct_PrintText_FontColor_106, logic_uScriptAct_PrintText_textAnchor_106, logic_uScriptAct_PrintText_EdgePadding_106, logic_uScriptAct_PrintText_time_106);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_PrintText_uScriptAct_PrintText_106.Out;
         
         if ( test_0 == true )
         {
            Relay_In_139();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Print Text.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_108()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c3c38a5d-4520-4328-afc8-432a9b7cc695", "GUI Get Background Color", Relay_In_108)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUIGetBackgroundColor_uScriptAct_GUIGetBackgroundColor_108.In(out logic_uScriptAct_GUIGetBackgroundColor_color_108);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIGetBackgroundColor_uScriptAct_GUIGetBackgroundColor_108.Out;
         
         if ( test_0 == true )
         {
            Relay_In_109();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Get Background Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_109()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("bd935672-2bd5-4e2d-af49-aafe5fb40ea1", "GUI Get Color", Relay_In_109)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUIGetColor_uScriptAct_GUIGetColor_109.In(out logic_uScriptAct_GUIGetColor_color_109);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIGetColor_uScriptAct_GUIGetColor_109.Out;
         
         if ( test_0 == true )
         {
            Relay_In_110();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Get Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_110()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b6a72473-fa3f-40b5-bd0f-28e9f8f55b57", "GUI Get Content Color", Relay_In_110)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUIGetContentColor_uScriptAct_GUIGetContentColor_110.In(out logic_uScriptAct_GUIGetContentColor_color_110);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIGetContentColor_uScriptAct_GUIGetContentColor_110.Out;
         
         if ( test_0 == true )
         {
            Relay_In_111();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Get Content Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_111()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("13724d72-6b8e-48c9-a9a1-baa7ca63834d", "GUI Get Enabled State", Relay_In_111)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUIGetEnabledState_uScriptAct_GUIGetEnabledState_111.In(out logic_uScriptAct_GUIGetEnabledState_Enabled_111);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIGetEnabledState_uScriptAct_GUIGetEnabledState_111.Out;
         
         if ( test_0 == true )
         {
            Relay_In_112();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Get Enabled State.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_112()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3f15d74a-0624-450f-9e04-13e80aba3f47", "GUI Get Tooltip", Relay_In_112)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUIGetToolTip_uScriptAct_GUIGetToolTip_112.In(out logic_uScriptAct_GUIGetToolTip_tooltip_112);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIGetToolTip_uScriptAct_GUIGetToolTip_112.Out;
         
         if ( test_0 == true )
         {
            Relay_In_113();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Get Tooltip.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_113()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a649ad3e-17cc-4619-9927-bcac4e84c4b7", "GUI Set Background Color", Relay_In_113)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUISetBackgroundColor_uScriptAct_GUISetBackgroundColor_113.In(logic_uScriptAct_GUISetBackgroundColor_color_113);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUISetBackgroundColor_uScriptAct_GUISetBackgroundColor_113.Out;
         
         if ( test_0 == true )
         {
            Relay_In_114();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Set Background Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_114()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("bc904c7a-d9c9-4d3a-993f-65169b44b177", "GUI Set Color", Relay_In_114)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUISetColor_uScriptAct_GUISetColor_114.In(logic_uScriptAct_GUISetColor_color_114);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUISetColor_uScriptAct_GUISetColor_114.Out;
         
         if ( test_0 == true )
         {
            Relay_In_115();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Set Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_115()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9346b17e-1ed1-4fbe-a840-67bca18b7b21", "GUI Set Content Color", Relay_In_115)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUISetContentColor_uScriptAct_GUISetContentColor_115.In(logic_uScriptAct_GUISetContentColor_color_115);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUISetContentColor_uScriptAct_GUISetContentColor_115.Out;
         
         if ( test_0 == true )
         {
            Relay_In_116();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Set Content Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_116()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a8884b71-f37b-46e7-ab8b-2701e09387d6", "GUI Set Enabled State", Relay_In_116)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUISetEnabledState_uScriptAct_GUISetEnabledState_116.In(logic_uScriptAct_GUISetEnabledState_Enabled_116);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUISetEnabledState_uScriptAct_GUISetEnabledState_116.Out;
         
         if ( test_0 == true )
         {
            Relay_In_117();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Set Enabled State.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_117()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("344b052a-485c-4825-9b6e-1b6b795c930d", "GUI Set Focused Control", Relay_In_117)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUISetFocusedControl_uScriptAct_GUISetFocusedControl_117.In(logic_uScriptAct_GUISetFocusedControl_ControlName_117);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUISetFocusedControl_uScriptAct_GUISetFocusedControl_117.Out;
         
         if ( test_0 == true )
         {
            Relay_In_118();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Set Focused Control.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_118()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d04e24d0-f16c-40e1-b3d7-ec2d2ddee41d", "GUI Set Skin", Relay_In_118)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GUISetSkin_uScriptAct_GUISetSkin_118.In(logic_uScriptAct_GUISetSkin_skin_118);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUISetSkin_uScriptAct_GUISetSkin_118.Out;
         
         if ( test_0 == true )
         {
            Relay_In_135();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Set Skin.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_119()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7fbd6cc0-03c7-4e20-91c0-8f60d4048e1f", "GUI Begin Group", Relay_In_119)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUIBeginGroup_uScriptAct_GUIBeginGroup_119.In(logic_uScriptAct_GUIBeginGroup_Position_119, logic_uScriptAct_GUIBeginGroup_Text_119, logic_uScriptAct_GUIBeginGroup_Texture_119, logic_uScriptAct_GUIBeginGroup_ToolTip_119, logic_uScriptAct_GUIBeginGroup_guiStyle_119);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIBeginGroup_uScriptAct_GUIBeginGroup_119.Out;
         
         if ( test_0 == true )
         {
            Relay_In_120();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Begin Group.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_120()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("48a07783-438f-4bdb-86fb-a55e17ccbcad", "GUI Box", Relay_In_120)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUIBox_uScriptAct_GUIBox_120.In(logic_uScriptAct_GUIBox_Text_120, logic_uScriptAct_GUIBox_Position_120, logic_uScriptAct_GUIBox_Texture_120, logic_uScriptAct_GUIBox_ToolTip_120, logic_uScriptAct_GUIBox_guiStyle_120);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIBox_uScriptAct_GUIBox_120.Out;
         
         if ( test_0 == true )
         {
            Relay_In_123();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Box.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnButtonDown_121()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("aa4757b2-ddf2-4621-abc2-a3362770e821", "GUI Button", Relay_OnButtonDown_121)) return; 
         Relay_In_137();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Button.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnButtonHeld_121()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("aa4757b2-ddf2-4621-abc2-a3362770e821", "GUI Button", Relay_OnButtonHeld_121)) return; 
         Relay_In_137();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Button.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnButtonUp_121()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("aa4757b2-ddf2-4621-abc2-a3362770e821", "GUI Button", Relay_OnButtonUp_121)) return; 
         Relay_In_137();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Button.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnButtonClicked_121()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("aa4757b2-ddf2-4621-abc2-a3362770e821", "GUI Button", Relay_OnButtonClicked_121)) return; 
         Relay_In_137();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Button.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_121()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("aa4757b2-ddf2-4621-abc2-a3362770e821", "GUI Button", Relay_In_121)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.In(logic_uScriptAct_GUIButton_Text_121, logic_uScriptAct_GUIButton_identifier_121, logic_uScriptAct_GUIButton_Position_121, logic_uScriptAct_GUIButton_Texture_121, logic_uScriptAct_GUIButton_ToolTip_121, logic_uScriptAct_GUIButton_guiStyle_121);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIButton_uScriptAct_GUIButton_121.Out;
         
         if ( test_0 == true )
         {
            Relay_In_138();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Button.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_122()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("dd32b266-b44c-4f84-8bf6-63c100e41b56", "GUI End Group", Relay_In_122)) return; 
         {
         }
         logic_uScriptAct_GUIEndGroup_uScriptAct_GUIEndGroup_122.In();
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIEndGroup_uScriptAct_GUIEndGroup_122.Out;
         
         if ( test_0 == true )
         {
            Relay_In_133();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI End Group.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_123()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("72c3b020-51bf-4e03-8fd8-c434020ed423", "GUI Horizontal Scrollbar", Relay_In_123)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUIHorizontalScrollbar_uScriptAct_GUIHorizontalScrollbar_123.In(logic_uScriptAct_GUIHorizontalScrollbar_Position_123, logic_uScriptAct_GUIHorizontalScrollbar_Value_123, logic_uScriptAct_GUIHorizontalScrollbar_Size_123, logic_uScriptAct_GUIHorizontalScrollbar_leftValue_123, logic_uScriptAct_GUIHorizontalScrollbar_rightValue_123, logic_uScriptAct_GUIHorizontalScrollbar_guiStyle_123);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIHorizontalScrollbar_uScriptAct_GUIHorizontalScrollbar_123.Out;
         
         if ( test_0 == true )
         {
            Relay_In_124();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Horizontal Scrollbar.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_124()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("09cb79e9-9bf2-4e7e-9759-411690a63601", "GUI Label", Relay_In_124)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUILabel_uScriptAct_GUILabel_124.In(logic_uScriptAct_GUILabel_Text_124, logic_uScriptAct_GUILabel_Position_124, logic_uScriptAct_GUILabel_Texture_124, logic_uScriptAct_GUILabel_ToolTip_124, logic_uScriptAct_GUILabel_guiStyle_124);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUILabel_uScriptAct_GUILabel_124.Out;
         
         if ( test_0 == true )
         {
            Relay_In_126();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Label.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_125()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1f2532ba-4110-4298-8df3-9a5010910c07", "GUI Password Field", Relay_In_125)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUIPasswordField_uScriptAct_GUIPasswordField_125.In(ref logic_uScriptAct_GUIPasswordField_Value_125, logic_uScriptAct_GUIPasswordField_Position_125, logic_uScriptAct_GUIPasswordField_maxLength_125, logic_uScriptAct_GUIPasswordField_ControlName_125, logic_uScriptAct_GUIPasswordField_guiStyle_125);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIPasswordField_uScriptAct_GUIPasswordField_125.Out;
         bool test_1 = logic_uScriptAct_GUIPasswordField_uScriptAct_GUIPasswordField_125.Changed;
         
         if ( test_0 == true )
         {
            Relay_In_127();
         }
         if ( test_1 == true )
         {
            Relay_In_134();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Password Field.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_126()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("4b3b04bf-7b00-4445-b5cd-c784a12c4cd5", "GUI Text Area", Relay_In_126)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUITextArea_uScriptAct_GUITextArea_126.In(ref logic_uScriptAct_GUITextArea_Value_126, logic_uScriptAct_GUITextArea_Position_126, logic_uScriptAct_GUITextArea_maxLength_126, logic_uScriptAct_GUITextArea_ControlName_126, logic_uScriptAct_GUITextArea_guiStyle_126);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUITextArea_uScriptAct_GUITextArea_126.Out;
         bool test_1 = logic_uScriptAct_GUITextArea_uScriptAct_GUITextArea_126.Changed;
         
         if ( test_0 == true )
         {
            Relay_In_121();
         }
         if ( test_1 == true )
         {
            Relay_In_131();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Text Area.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_127()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5dbe33ba-998a-48eb-b091-141adfd44b23", "GUI Text Field", Relay_In_127)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUITextField_uScriptAct_GUITextField_127.In(ref logic_uScriptAct_GUITextField_Value_127, logic_uScriptAct_GUITextField_Position_127, logic_uScriptAct_GUITextField_maxLength_127, logic_uScriptAct_GUITextField_ControlName_127, logic_uScriptAct_GUITextField_guiStyle_127);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUITextField_uScriptAct_GUITextField_127.Out;
         bool test_1 = logic_uScriptAct_GUITextField_uScriptAct_GUITextField_127.Changed;
         
         if ( test_0 == true )
         {
            Relay_In_122();
         }
         if ( test_1 == true )
         {
            Relay_In_134();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Text Field.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_128()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("62e5b93b-b1fa-4862-9a0f-9f077f5baf12", "GUI Texture", Relay_In_128)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUITexture_uScriptAct_GUITexture_128.In(logic_uScriptAct_GUITexture_Position_128, logic_uScriptAct_GUITexture_Texture_128, logic_uScriptAct_GUITexture_scaleMode_128, logic_uScriptAct_GUITexture_alphaBlend_128, logic_uScriptAct_GUITexture_aspect_128);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUITexture_uScriptAct_GUITexture_128.Out;
         
         if ( test_0 == true )
         {
            Relay_In_125();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Texture.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_129()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("20c2a70d-529e-4621-989c-085f7ac341a4", "GUI Toggle", Relay_In_129)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUIToggle_uScriptAct_GUIToggle_129.In(ref logic_uScriptAct_GUIToggle_Value_129, logic_uScriptAct_GUIToggle_Text_129, logic_uScriptAct_GUIToggle_Position_129, logic_uScriptAct_GUIToggle_Texture_129, logic_uScriptAct_GUIToggle_ToolTip_129, logic_uScriptAct_GUIToggle_guiStyle_129);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIToggle_uScriptAct_GUIToggle_129.Out;
         bool test_1 = logic_uScriptAct_GUIToggle_uScriptAct_GUIToggle_129.Changed;
         
         if ( test_0 == true )
         {
            Relay_In_130();
         }
         if ( test_1 == true )
         {
            Relay_In_132();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Toggle.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_130()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("278d39c8-2f19-4bd3-8b1e-3cbe8d220da0", "GUI Vertical Scrollbar", Relay_In_130)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GUIVerticalScrollbar_uScriptAct_GUIVerticalScrollbar_130.In(logic_uScriptAct_GUIVerticalScrollbar_Position_130, logic_uScriptAct_GUIVerticalScrollbar_Value_130, logic_uScriptAct_GUIVerticalScrollbar_Size_130, logic_uScriptAct_GUIVerticalScrollbar_topValue_130, logic_uScriptAct_GUIVerticalScrollbar_bottomValue_130, logic_uScriptAct_GUIVerticalScrollbar_guiStyle_130);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GUIVerticalScrollbar_uScriptAct_GUIVerticalScrollbar_130.Out;
         
         if ( test_0 == true )
         {
            Relay_In_136();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at GUI Vertical Scrollbar.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_131()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("cfc3193d-169e-4b69-bae5-a44fbade7c9f", "Log", Relay_In_131)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_131.In(logic_uScriptAct_Log_Prefix_131, logic_uScriptAct_Log_Target_131, logic_uScriptAct_Log_Postfix_131);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Log_uScriptAct_Log_131.Out;
         
         if ( test_0 == true )
         {
            Relay_In_129();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_132()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("37c153ac-391d-44bf-8ce8-64597896cbea", "Log", Relay_In_132)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_132.In(logic_uScriptAct_Log_Prefix_132, logic_uScriptAct_Log_Target_132, logic_uScriptAct_Log_Postfix_132);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Log_uScriptAct_Log_132.Out;
         
         if ( test_0 == true )
         {
            Relay_In_128();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_133()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("00066425-2c36-482a-b109-6e1dede85467", "Log", Relay_In_133)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_133.In(logic_uScriptAct_Log_Prefix_133, logic_uScriptAct_Log_Target_133, logic_uScriptAct_Log_Postfix_133);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_134()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("adf75b5a-7bf1-4ba4-a7a9-362abd93c2ec", "Log", Relay_In_134)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_134.In(logic_uScriptAct_Log_Prefix_134, logic_uScriptAct_Log_Target_134, logic_uScriptAct_Log_Postfix_134);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_135()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("13fd19a0-b7f8-4b61-9e9f-e1b59dc5caf7", "Log", Relay_In_135)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_135.In(logic_uScriptAct_Log_Prefix_135, logic_uScriptAct_Log_Target_135, logic_uScriptAct_Log_Postfix_135);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_136()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d1a0d847-fc5b-49fb-8051-ae9cc08ad173", "Log", Relay_In_136)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_136.In(logic_uScriptAct_Log_Prefix_136, logic_uScriptAct_Log_Target_136, logic_uScriptAct_Log_Postfix_136);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_137()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("94fbfb01-8783-43f5-8b39-1a44fb266113", "Log", Relay_In_137)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_137.In(logic_uScriptAct_Log_Prefix_137, logic_uScriptAct_Log_Target_137, logic_uScriptAct_Log_Postfix_137);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_138()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("83cfa7ca-c961-4dfb-a479-ab600dc424fb", "Log", Relay_In_138)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_138.In(logic_uScriptAct_Log_Prefix_138, logic_uScriptAct_Log_Target_138, logic_uScriptAct_Log_Postfix_138);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_139()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7bf46a4e-3468-4a97-aa1d-b9c8f75902bb", "Log", Relay_In_139)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_139.In(logic_uScriptAct_Log_Prefix_139, logic_uScriptAct_Log_Target_139, logic_uScriptAct_Log_Postfix_139);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_KeyEvent_140()
   {
      if (true == CheckDebugBreak("6c64af80-0d71-422b-8a35-7ac5f8fec549", "Input Events", Relay_KeyEvent_140)) return; 
      Relay_In_141();
   }
   
   void Relay_In_141()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5300f893-ee98-43da-89d8-3dee7d29a05d", "Input Events Filter", Relay_In_141)) return; 
         {
            {
            }
         }
         logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_141.In(logic_uScriptAct_OnInputEventFilter_KeyCode_141);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_141.KeyDown;
         bool test_1 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_141.KeyHeld;
         bool test_2 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_141.KeyUp;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_142();
         }
         if ( test_1 == true )
         {
            Relay_In_153();
         }
         if ( test_2 == true )
         {
            Relay_SendCustomEvent_145();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Input Events Filter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_142()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5b1e0f89-b2d9-4a1a-89d4-a244f8019003", "Send Custom Event", Relay_SendCustomEvent_142)) return; 
         {
            {
               logic_uScriptAct_SendCustomEvent_EventName_142 = local_MyEvent_System_String;
               
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEvent_uScriptAct_SendCustomEvent_142.SendCustomEvent(logic_uScriptAct_SendCustomEvent_EventName_142, logic_uScriptAct_SendCustomEvent_sendGroup_142, logic_uScriptAct_SendCustomEvent_EventSender_142);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEvent_uScriptAct_SendCustomEvent_142.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_143();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_143()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("cc728a11-e3df-46f6-b7fd-b7a519b386b5", "Send Custom Event (Bool)", Relay_SendCustomEvent_143)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventBool_EventName_143 = local_MyEvent_System_String;
               
            }
            {
               logic_uScriptAct_SendCustomEventBool_EventValue_143 = local_154_System_Boolean;
               
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventBool_uScriptAct_SendCustomEventBool_143.SendCustomEvent(logic_uScriptAct_SendCustomEventBool_EventName_143, logic_uScriptAct_SendCustomEventBool_EventValue_143, logic_uScriptAct_SendCustomEventBool_sendGroup_143, logic_uScriptAct_SendCustomEventBool_EventSender_143);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventBool_uScriptAct_SendCustomEventBool_143.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_144();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (Bool).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_144()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2cd291c8-5de2-4cc5-817a-7e7e56bbdbec", "Send Custom Event (Color)", Relay_SendCustomEvent_144)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventColor_EventName_144 = local_156_System_String;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventColor_uScriptAct_SendCustomEventColor_144.SendCustomEvent(logic_uScriptAct_SendCustomEventColor_EventName_144, logic_uScriptAct_SendCustomEventColor_EventValue_144, logic_uScriptAct_SendCustomEventColor_sendGroup_144, logic_uScriptAct_SendCustomEventColor_EventSender_144);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventColor_uScriptAct_SendCustomEventColor_144.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_148();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (Color).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_145()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7cc953e4-c973-4c9a-932e-041745e62189", "Send Custom Event (Float)", Relay_SendCustomEvent_145)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventFloat_EventName_145 = local_MyEvent_System_String;
               
            }
            {
               logic_uScriptAct_SendCustomEventFloat_EventValue_145 = local_161_System_Single;
               
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventFloat_uScriptAct_SendCustomEventFloat_145.SendCustomEvent(logic_uScriptAct_SendCustomEventFloat_EventName_145, logic_uScriptAct_SendCustomEventFloat_EventValue_145, logic_uScriptAct_SendCustomEventFloat_sendGroup_145, logic_uScriptAct_SendCustomEventFloat_EventSender_145);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventFloat_uScriptAct_SendCustomEventFloat_145.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_146();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (Float).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_146()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("57eb475a-2c31-4308-abd0-1fc3ed2ea4ac", "Send Custom Event (GameObject)", Relay_SendCustomEvent_146)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventGameObject_EventName_146 = local_MyEvent_System_String;
               
            }
            {
               {
                  //if our game object reference was changed then we need to reset event listeners
                  if ( local_160_UnityEngine_GameObject_previous != local_160_UnityEngine_GameObject || false == m_RegisteredForEvents )
                  {
                     //tear down old listeners
                     
                     local_160_UnityEngine_GameObject_previous = local_160_UnityEngine_GameObject;
                     
                     //setup new listeners
                  }
               }
               logic_uScriptAct_SendCustomEventGameObject_EventValue_146 = local_160_UnityEngine_GameObject;
               
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventGameObject_uScriptAct_SendCustomEventGameObject_146.SendCustomEvent(logic_uScriptAct_SendCustomEventGameObject_EventName_146, logic_uScriptAct_SendCustomEventGameObject_EventValue_146, logic_uScriptAct_SendCustomEventGameObject_sendGroup_146, logic_uScriptAct_SendCustomEventGameObject_EventSender_146);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventGameObject_uScriptAct_SendCustomEventGameObject_146.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_147();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (GameObject).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_147()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eeeb6f5c-deec-4843-807f-db15124fb17c", "Send Custom Event (Int)", Relay_SendCustomEvent_147)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventInt_EventName_147 = local_MyEvent_System_String;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventInt_uScriptAct_SendCustomEventInt_147.SendCustomEvent(logic_uScriptAct_SendCustomEventInt_EventName_147, logic_uScriptAct_SendCustomEventInt_EventValue_147, logic_uScriptAct_SendCustomEventInt_sendGroup_147, logic_uScriptAct_SendCustomEventInt_EventSender_147);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventInt_uScriptAct_SendCustomEventInt_147.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_150();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (Int).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_148()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("43d39919-719e-4f40-9831-9831b40100c2", "Send Custom Event (Object)", Relay_SendCustomEvent_148)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventObject_EventName_148 = local_156_System_String;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventObject_uScriptAct_SendCustomEventObject_148.SendCustomEvent(logic_uScriptAct_SendCustomEventObject_EventName_148, logic_uScriptAct_SendCustomEventObject_EventValue_148, logic_uScriptAct_SendCustomEventObject_sendGroup_148, logic_uScriptAct_SendCustomEventObject_EventSender_148);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventObject_uScriptAct_SendCustomEventObject_148.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_151();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (Object).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_149()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f8206026-a339-4bc5-bf5b-d3c6cdffeb8c", "Send Custom Event (String)", Relay_SendCustomEvent_149)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventString_EventName_149 = local_MyEvent_System_String;
               
            }
            {
               logic_uScriptAct_SendCustomEventString_EventValue_149 = local_158_System_String;
               
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventString_uScriptAct_SendCustomEventString_149.SendCustomEvent(logic_uScriptAct_SendCustomEventString_EventName_149, logic_uScriptAct_SendCustomEventString_EventValue_149, logic_uScriptAct_SendCustomEventString_sendGroup_149, logic_uScriptAct_SendCustomEventString_EventSender_149);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventString_uScriptAct_SendCustomEventString_149.Out;
         
         if ( test_0 == true )
         {
            Relay_In_162();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (String).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_150()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("816903b6-ddd8-4c40-a901-01eec6a9fc25", "Send Custom Event (Vector2)", Relay_SendCustomEvent_150)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventVector2_EventName_150 = local_MyEvent_System_String;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventVector2_uScriptAct_SendCustomEventVector2_150.SendCustomEvent(logic_uScriptAct_SendCustomEventVector2_EventName_150, logic_uScriptAct_SendCustomEventVector2_EventValue_150, logic_uScriptAct_SendCustomEventVector2_sendGroup_150, logic_uScriptAct_SendCustomEventVector2_EventSender_150);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventVector2_uScriptAct_SendCustomEventVector2_150.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_152();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (Vector2).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_151()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f8f32807-bbc9-4325-8a11-000079c69766", "Send Custom Event (Vector3)", Relay_SendCustomEvent_151)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventVector3_EventName_151 = local_MyEvent_System_String;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventVector3_uScriptAct_SendCustomEventVector3_151.SendCustomEvent(logic_uScriptAct_SendCustomEventVector3_EventName_151, logic_uScriptAct_SendCustomEventVector3_EventValue_151, logic_uScriptAct_SendCustomEventVector3_sendGroup_151, logic_uScriptAct_SendCustomEventVector3_EventSender_151);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventVector3_uScriptAct_SendCustomEventVector3_151.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_149();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (Vector3).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_SendCustomEvent_152()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2c649e26-17f5-4a97-a15f-302f2d0ec885", "Send Custom Event (Vector4)", Relay_SendCustomEvent_152)) return; 
         {
            {
               logic_uScriptAct_SendCustomEventVector4_EventName_152 = local_MyEvent_System_String;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SendCustomEventVector4_uScriptAct_SendCustomEventVector4_152.SendCustomEvent(logic_uScriptAct_SendCustomEventVector4_EventName_152, logic_uScriptAct_SendCustomEventVector4_EventValue_152, logic_uScriptAct_SendCustomEventVector4_sendGroup_152, logic_uScriptAct_SendCustomEventVector4_EventSender_152);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SendCustomEventVector4_uScriptAct_SendCustomEventVector4_152.Out;
         
         if ( test_0 == true )
         {
            Relay_SendCustomEvent_149();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Send Custom Event (Vector4).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_153()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d12aa1ea-09da-47b9-9da5-7dbabf1357cd", "Log", Relay_In_153)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_153.In(logic_uScriptAct_Log_Prefix_153, logic_uScriptAct_Log_Target_153, logic_uScriptAct_Log_Postfix_153);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_162()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("370c43f9-f387-4902-8bd8-24b7236d1b49", "Log", Relay_In_162)) return; 
         {
            {
            }
            {
               List<System.Object> properties = new List<System.Object>();
               foreach (UnityEngine.Camera _fet in local_Camera_List_UnityEngine_CameraArray)
               {
                  properties.Add((System.Object) _fet);
               }
               logic_uScriptAct_Log_Target_162 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_162.In(logic_uScriptAct_Log_Prefix_162, logic_uScriptAct_Log_Target_162, logic_uScriptAct_Log_Postfix_162);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_KeyEvent_164()
   {
      if (true == CheckDebugBreak("b0288e75-bbd4-47b5-aea7-ec4e135522fc", "Input Events", Relay_KeyEvent_164)) return; 
      Relay_In_165();
   }
   
   void Relay_In_165()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("aea606d3-d71f-4b69-9a15-8acc97ac5f01", "Input Events Filter", Relay_In_165)) return; 
         {
            {
            }
         }
         logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_165.In(logic_uScriptAct_OnInputEventFilter_KeyCode_165);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_165.KeyUp;
         
         if ( test_0 == true )
         {
            Relay_In_168();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Input Events Filter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_166()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("72ec7f36-f914-4d5b-9517-ca4fba4b2f63", "Load AudioClip", Relay_In_166)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadAudioClip_uScriptAct_LoadAudioClip_166.In(logic_uScriptAct_LoadAudioClip_name_166, out logic_uScriptAct_LoadAudioClip_audioClip_166);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadAudioClip_uScriptAct_LoadAudioClip_166.Out;
         
         if ( test_0 == true )
         {
            Relay_In_174();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load AudioClip.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_167()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a46efc0d-c5f0-43a0-8548-834ddd560c77", "Load Cubemap", Relay_In_167)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadCubemap_uScriptAct_LoadCubemap_167.In(logic_uScriptAct_LoadCubemap_name_167, out logic_uScriptAct_LoadCubemap_asset_167);
         local_184_UnityEngine_Cubemap = logic_uScriptAct_LoadCubemap_asset_167;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadCubemap_uScriptAct_LoadCubemap_167.Out;
         
         if ( test_0 == true )
         {
            Relay_In_171();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Cubemap.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_168()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a2d03dea-3436-4472-a6b5-980b6540bb16", "Load Flare", Relay_In_168)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadFlare_uScriptAct_LoadFlare_168.In(logic_uScriptAct_LoadFlare_name_168, out logic_uScriptAct_LoadFlare_asset_168);
         local_181_UnityEngine_Flare = logic_uScriptAct_LoadFlare_asset_168;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadFlare_uScriptAct_LoadFlare_168.Out;
         
         if ( test_0 == true )
         {
            Relay_In_169();
            Relay_In_221();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Flare.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_169()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6e02ecab-2622-42c0-ba79-1c4e69137c92", "Load Font", Relay_In_169)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadFont_uScriptAct_LoadFont_169.In(logic_uScriptAct_LoadFont_name_169, out logic_uScriptAct_LoadFont_asset_169);
         local_183_UnityEngine_Font = logic_uScriptAct_LoadFont_asset_169;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadFont_uScriptAct_LoadFont_169.Out;
         
         if ( test_0 == true )
         {
            Relay_In_170();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Font.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_170()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("de919561-5dfd-4d82-aa45-a46fd87dc4c6", "Load GUISkin", Relay_In_170)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadGUISkin_uScriptAct_LoadGUISkin_170.In(logic_uScriptAct_LoadGUISkin_name_170, out logic_uScriptAct_LoadGUISkin_asset_170);
         local_185_UnityEngine_GUISkin = logic_uScriptAct_LoadGUISkin_asset_170;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadGUISkin_uScriptAct_LoadGUISkin_170.Out;
         
         if ( test_0 == true )
         {
            Relay_In_166();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load GUISkin.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_171()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("90b3a3b4-0560-4a40-b2ba-dafc720a103d", "Load Material", Relay_In_171)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadMaterial_uScriptAct_LoadMaterial_171.In(logic_uScriptAct_LoadMaterial_name_171, out logic_uScriptAct_LoadMaterial_materialFile_171);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadMaterial_uScriptAct_LoadMaterial_171.Out;
         
         if ( test_0 == true )
         {
            Relay_In_173();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Material.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_172()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("73981f7e-9d79-4782-9f21-dee9aa53959c", "Load Mesh", Relay_In_172)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadMesh_uScriptAct_LoadMesh_172.In(logic_uScriptAct_LoadMesh_name_172, out logic_uScriptAct_LoadMesh_asset_172);
         local_182_UnityEngine_Mesh = logic_uScriptAct_LoadMesh_asset_172;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadMesh_uScriptAct_LoadMesh_172.Out;
         
         if ( test_0 == true )
         {
            Relay_In_167();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Mesh.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_173()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("45ed017a-060f-4526-a3ce-d1c1a89b66bf", "Load PhysicMaterial", Relay_In_173)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadPhysicMaterial_uScriptAct_LoadPhysicMaterial_173.In(logic_uScriptAct_LoadPhysicMaterial_name_173, out logic_uScriptAct_LoadPhysicMaterial_asset_173);
         local_188_UnityEngine_PhysicMaterial = logic_uScriptAct_LoadPhysicMaterial_asset_173;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadPhysicMaterial_uScriptAct_LoadPhysicMaterial_173.Out;
         
         if ( test_0 == true )
         {
            Relay_In_175();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load PhysicMaterial.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_174()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1864d27d-089e-471c-b5ef-8f144bfa83ea", "Load Prefab", Relay_In_174)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadPrefab_uScriptAct_LoadPrefab_174.In(logic_uScriptAct_LoadPrefab_name_174, out logic_uScriptAct_LoadPrefab_asset_174);
         local_189_UnityEngine_GameObject = logic_uScriptAct_LoadPrefab_asset_174;
         {
            //if our game object reference was changed then we need to reset event listeners
            if ( local_189_UnityEngine_GameObject_previous != local_189_UnityEngine_GameObject || false == m_RegisteredForEvents )
            {
               //tear down old listeners
               
               local_189_UnityEngine_GameObject_previous = local_189_UnityEngine_GameObject;
               
               //setup new listeners
            }
         }
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadPrefab_uScriptAct_LoadPrefab_174.Out;
         
         if ( test_0 == true )
         {
            Relay_In_176();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Prefab.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_175()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("58286d14-fe9b-4b36-8e04-2ef7ce511165", "Load Shader", Relay_In_175)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadShader_uScriptAct_LoadShader_175.In(logic_uScriptAct_LoadShader_name_175, out logic_uScriptAct_LoadShader_asset_175);
         local_191_UnityEngine_Shader = logic_uScriptAct_LoadShader_asset_175;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadShader_uScriptAct_LoadShader_175.Out;
         
         if ( test_0 == true )
         {
            Relay_In_177();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Shader.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_176()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("be1f5a82-ad9e-4d29-ac1d-f93fe869938a", "Load TextAsset", Relay_In_176)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadTextAsset_uScriptAct_LoadTextAsset_176.In(logic_uScriptAct_LoadTextAsset_name_176, out logic_uScriptAct_LoadTextAsset_asset_176);
         local_190_UnityEngine_TextAsset = logic_uScriptAct_LoadTextAsset_asset_176;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadTextAsset_uScriptAct_LoadTextAsset_176.Out;
         
         if ( test_0 == true )
         {
            Relay_In_179();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load TextAsset.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_177()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a95ee918-d185-4621-8366-8699bf08d117", "Load Texture2D", Relay_In_177)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadTexture2D_uScriptAct_LoadTexture2D_177.In(logic_uScriptAct_LoadTexture2D_name_177, out logic_uScriptAct_LoadTexture2D_textureFile_177);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadTexture2D_uScriptAct_LoadTexture2D_177.Out;
         
         if ( test_0 == true )
         {
            Relay_In_178();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Texture2D.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_178()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b3a55238-d197-4ecf-b0e4-35fb0ed6c6e6", "Log", Relay_In_178)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_178.In(logic_uScriptAct_Log_Prefix_178, logic_uScriptAct_Log_Target_178, logic_uScriptAct_Log_Postfix_178);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_179()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("bc097337-4892-40ac-991b-e6f7541d9852", "Log", Relay_In_179)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_179.In(logic_uScriptAct_Log_Prefix_179, logic_uScriptAct_Log_Target_179, logic_uScriptAct_Log_Postfix_179);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_193()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9d5b5bea-f41a-4909-b7a9-fb7806eb772c", "Input Events Filter", Relay_In_193)) return; 
         {
            {
            }
         }
         logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_193.In(logic_uScriptAct_OnInputEventFilter_KeyCode_193);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_193.KeyDown;
         bool test_1 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_193.KeyUp;
         
         if ( test_0 == true )
         {
            Relay_In_195();
         }
         if ( test_1 == true )
         {
            Relay_In_198();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Input Events Filter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_KeyEvent_194()
   {
      if (true == CheckDebugBreak("bdcd1a2c-7caa-4f58-b3a0-517704faf909", "Input Events", Relay_KeyEvent_194)) return; 
      Relay_In_193();
   }
   
   void Relay_Finished_195()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("dcdaa2ab-aa59-4739-8f80-bf3ac9252665", "Play Animation", Relay_Finished_195)) return; 
         Relay_In_197();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Play Animation.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_195()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("dcdaa2ab-aa59-4739-8f80-bf3ac9252665", "Play Animation", Relay_In_195)) return; 
         {
            {
               List<UnityEngine.GameObject> properties = new List<UnityEngine.GameObject>();
               {
                  //if our game object reference was changed then we need to reset event listeners
                  if ( local_MasterGO_UnityEngine_GameObject_previous != local_MasterGO_UnityEngine_GameObject || false == m_RegisteredForEvents )
                  {
                     //tear down old listeners
                     if ( null != local_MasterGO_UnityEngine_GameObject_previous )
                     {
                        {
                           uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventColor>();
                           if ( null != component )
                           {
                              component.OnCustomEventColor -= Instance_OnCustomEventColor_9;
                           }
                        }
                        {
                           uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEvent>();
                           if ( null != component )
                           {
                              component.OnCustomEvent -= Instance_OnCustomEvent_7;
                           }
                        }
                        {
                           uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector4>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector4 -= Instance_OnCustomEventVector4_17;
                           }
                        }
                        {
                           uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventObject>();
                           if ( null != component )
                           {
                              component.OnCustomEventObject -= Instance_OnCustomEventObject_13;
                           }
                        }
                        {
                           uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventInt>();
                           if ( null != component )
                           {
                              component.OnCustomEventInt -= Instance_OnCustomEventInt_12;
                           }
                        }
                        {
                           uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventFloat>();
                           if ( null != component )
                           {
                              component.OnCustomEventFloat -= Instance_OnCustomEventFloat_10;
                           }
                        }
                        {
                           uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventGameObject>();
                           if ( null != component )
                           {
                              component.OnCustomEventGameObject -= Instance_OnCustomEventGameObject_11;
                           }
                        }
                        {
                           uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector3>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector3 -= Instance_OnCustomEventVector3_16;
                           }
                        }
                        {
                           uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventString>();
                           if ( null != component )
                           {
                              component.OnCustomEventString -= Instance_OnCustomEventString_14;
                           }
                        }
                        {
                           uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector2>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector2 -= Instance_OnCustomEventVector2_15;
                           }
                        }
                        {
                           uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventBool>();
                           if ( null != component )
                           {
                              component.OnCustomEventBool -= Instance_OnCustomEventBool_8;
                           }
                        }
                        {
                           uScript_GameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_GameObject>();
                           if ( null != component )
                           {
                              component.EnableEvent -= Instance_EnableEvent_28;
                              component.DisableEvent -= Instance_DisableEvent_28;
                              component.DestroyEvent -= Instance_DestroyEvent_28;
                           }
                        }
                        {
                           uScript_Visibility component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Visibility>();
                           if ( null != component )
                           {
                              component.BecameVisible -= Instance_BecameVisible_29;
                              component.BecameInvisible -= Instance_BecameInvisible_29;
                           }
                        }
                        {
                           uScript_Mouse component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Mouse>();
                           if ( null != component )
                           {
                              component.OnEnter -= Instance_OnEnter_37;
                              component.OnOver -= Instance_OnOver_37;
                              component.OnExit -= Instance_OnExit_37;
                              component.OnDown -= Instance_OnDown_37;
                              component.OnUp -= Instance_OnUp_37;
                              component.OnDrag -= Instance_OnDrag_37;
                           }
                        }
                        {
                           uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkClientConnection>();
                           if ( null != component )
                           {
                              component.ConnectedToServer -= Instance_ConnectedToServer_48;
                              component.DisconnectedFromServer -= Instance_DisconnectedFromServer_48;
                           }
                        }
                        {
                           uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkFailedConnection>();
                           if ( null != component )
                           {
                              component.FailedToConnect -= Instance_FailedToConnect_49;
                              component.FailedToConnectToMaster -= Instance_FailedToConnectToMaster_49;
                           }
                        }
                        {
                           uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkInstantiate>();
                           if ( null != component )
                           {
                              component.OnInstantiate -= Instance_OnInstantiate_50;
                           }
                        }
                        {
                           uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkMasterServer>();
                           if ( null != component )
                           {
                              component.OnEvent -= Instance_OnEvent_51;
                           }
                        }
                        {
                           uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkSerialization>();
                           if ( null != component )
                           {
                              component.OnSerialize -= Instance_OnSerialize_52;
                           }
                        }
                        {
                           uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerInitialized>();
                           if ( null != component )
                           {
                              component.OnInitialized -= Instance_OnInitialized_53;
                           }
                        }
                        {
                           uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerPlayer>();
                           if ( null != component )
                           {
                              component.PlayerConnected -= Instance_PlayerConnected_54;
                              component.PlayerDisconnected -= Instance_PlayerDisconnected_54;
                           }
                        }
                        {
                           uScript_Particle component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Particle>();
                           if ( null != component )
                           {
                              component.Collision -= Instance_Collision_56;
                           }
                        }
                        {
                           uScript_Joint component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Joint>();
                           if ( null != component )
                           {
                              component.JointBreak -= Instance_JointBreak_59;
                           }
                        }
                        {
                           uScript_Collision component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Collision>();
                           if ( null != component )
                           {
                              component.OnEnterCollision -= Instance_OnEnterCollision_60;
                              component.OnExitCollision -= Instance_OnExitCollision_60;
                              component.WhileInsideCollision -= Instance_WhileInsideCollision_60;
                           }
                        }
                        {
                           uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_ProxyController>();
                           if ( null != component )
                           {
                              component.OnHit -= Instance_OnHit_58;
                           }
                        }
                        {
                           uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_PostEffect>();
                           if ( null != component )
                           {
                              component.RenderImage -= Instance_RenderImage_66;
                           }
                        }
                        {
                           uScript_Render component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Render>();
                           if ( null != component )
                           {
                              component.PreCull -= Instance_PreCull_67;
                              component.PreRender -= Instance_PreRender_67;
                              component.PostRender -= Instance_PostRender_67;
                              component.RenderObject -= Instance_RenderObject_67;
                              component.WillRenderObject -= Instance_WillRenderObject_67;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Triggers>();
                           if ( null != component )
                           {
                              component.OnEnterTrigger -= Instance_OnEnterTrigger_68;
                              component.OnExitTrigger -= Instance_OnExitTrigger_68;
                              component.WhileInsideTrigger -= Instance_WhileInsideTrigger_68;
                           }
                        }
                     }
                     
                     local_MasterGO_UnityEngine_GameObject_previous = local_MasterGO_UnityEngine_GameObject;
                     
                     //setup new listeners
                     if ( null != local_MasterGO_UnityEngine_GameObject )
                     {
                        {
                           uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventColor>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventColor>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventColor += Instance_OnCustomEventColor_9;
                           }
                        }
                        {
                           uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEvent>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEvent>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEvent += Instance_OnCustomEvent_7;
                           }
                        }
                        {
                           uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector4>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector4>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector4 += Instance_OnCustomEventVector4_17;
                           }
                        }
                        {
                           uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventObject>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventObject += Instance_OnCustomEventObject_13;
                           }
                        }
                        {
                           uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventInt>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventInt>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventInt += Instance_OnCustomEventInt_12;
                           }
                        }
                        {
                           uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventFloat>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventFloat>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventFloat += Instance_OnCustomEventFloat_10;
                           }
                        }
                        {
                           uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventGameObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventGameObject>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventGameObject += Instance_OnCustomEventGameObject_11;
                           }
                        }
                        {
                           uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector3>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector3>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector3 += Instance_OnCustomEventVector3_16;
                           }
                        }
                        {
                           uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventString>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventString>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventString += Instance_OnCustomEventString_14;
                           }
                        }
                        {
                           uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector2>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector2>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector2 += Instance_OnCustomEventVector2_15;
                           }
                        }
                        {
                           uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventBool>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventBool>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventBool += Instance_OnCustomEventBool_8;
                           }
                        }
                        {
                           uScript_GameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_GameObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_GameObject>();
                           }
                           if ( null != component )
                           {
                              component.EnableEvent += Instance_EnableEvent_28;
                              component.DisableEvent += Instance_DisableEvent_28;
                              component.DestroyEvent += Instance_DestroyEvent_28;
                           }
                        }
                        {
                           uScript_Visibility component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Visibility>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Visibility>();
                           }
                           if ( null != component )
                           {
                              component.BecameVisible += Instance_BecameVisible_29;
                              component.BecameInvisible += Instance_BecameInvisible_29;
                           }
                        }
                        {
                           uScript_Mouse component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Mouse>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Mouse>();
                           }
                           if ( null != component )
                           {
                              component.OnEnter += Instance_OnEnter_37;
                              component.OnOver += Instance_OnOver_37;
                              component.OnExit += Instance_OnExit_37;
                              component.OnDown += Instance_OnDown_37;
                              component.OnUp += Instance_OnUp_37;
                              component.OnDrag += Instance_OnDrag_37;
                           }
                        }
                        {
                           uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkClientConnection>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkClientConnection>();
                           }
                           if ( null != component )
                           {
                              component.ConnectedToServer += Instance_ConnectedToServer_48;
                              component.DisconnectedFromServer += Instance_DisconnectedFromServer_48;
                           }
                        }
                        {
                           uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkFailedConnection>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkFailedConnection>();
                           }
                           if ( null != component )
                           {
                              component.FailedToConnect += Instance_FailedToConnect_49;
                              component.FailedToConnectToMaster += Instance_FailedToConnectToMaster_49;
                           }
                        }
                        {
                           uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkInstantiate>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkInstantiate>();
                           }
                           if ( null != component )
                           {
                              component.OnInstantiate += Instance_OnInstantiate_50;
                           }
                        }
                        {
                           uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkMasterServer>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkMasterServer>();
                           }
                           if ( null != component )
                           {
                              component.OnEvent += Instance_OnEvent_51;
                           }
                        }
                        {
                           uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkSerialization>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkSerialization>();
                           }
                           if ( null != component )
                           {
                              component.OnSerialize += Instance_OnSerialize_52;
                           }
                        }
                        {
                           uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerInitialized>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerInitialized>();
                           }
                           if ( null != component )
                           {
                              component.OnInitialized += Instance_OnInitialized_53;
                           }
                        }
                        {
                           uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerPlayer>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerPlayer>();
                           }
                           if ( null != component )
                           {
                              component.PlayerConnected += Instance_PlayerConnected_54;
                              component.PlayerDisconnected += Instance_PlayerDisconnected_54;
                           }
                        }
                        {
                           uScript_Particle component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Particle>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Particle>();
                           }
                           if ( null != component )
                           {
                              component.Collision += Instance_Collision_56;
                           }
                        }
                        {
                           uScript_Joint component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Joint>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Joint>();
                           }
                           if ( null != component )
                           {
                              component.JointBreak += Instance_JointBreak_59;
                           }
                        }
                        {
                           uScript_Collision component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Collision>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Collision>();
                           }
                           if ( null != component )
                           {
                              component.OnEnterCollision += Instance_OnEnterCollision_60;
                              component.OnExitCollision += Instance_OnExitCollision_60;
                              component.WhileInsideCollision += Instance_WhileInsideCollision_60;
                           }
                        }
                        {
                           uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_ProxyController>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_ProxyController>();
                           }
                           if ( null != component )
                           {
                              component.OnHit += Instance_OnHit_58;
                           }
                        }
                        {
                           uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_PostEffect>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_PostEffect>();
                           }
                           if ( null != component )
                           {
                              component.RenderImage += Instance_RenderImage_66;
                           }
                        }
                        {
                           uScript_Render component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Render>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Render>();
                           }
                           if ( null != component )
                           {
                              component.PreCull += Instance_PreCull_67;
                              component.PreRender += Instance_PreRender_67;
                              component.PostRender += Instance_PostRender_67;
                              component.RenderObject += Instance_RenderObject_67;
                              component.WillRenderObject += Instance_WillRenderObject_67;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
                           }
                           if ( null != component )
                           {
                              component.TimesToTrigger = event_UnityEngine_GameObject_TimesToTrigger_68;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
                           }
                           if ( null != component )
                           {
                              component.OnEnterTrigger += Instance_OnEnterTrigger_68;
                              component.OnExitTrigger += Instance_OnExitTrigger_68;
                              component.WhileInsideTrigger += Instance_WhileInsideTrigger_68;
                           }
                        }
                     }
                  }
               }
               properties.Add((UnityEngine.GameObject)local_MasterGO_UnityEngine_GameObject);
               logic_uScriptAct_PlayAnimation_Target_195 = properties.ToArray();
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_PlayAnimation_uScriptAct_PlayAnimation_195.In(logic_uScriptAct_PlayAnimation_Target_195, logic_uScriptAct_PlayAnimation_Animation_195, logic_uScriptAct_PlayAnimation_SpeedFactor_195, logic_uScriptAct_PlayAnimation_AnimWrapMode_195, logic_uScriptAct_PlayAnimation_StopOtherAnimations_195);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_PlayAnimation_uScriptAct_PlayAnimation_195.Out;
         
         if ( test_0 == true )
         {
            Relay_In_221();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Play Animation.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_197()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a3bbe232-0f50-4093-bb7f-99e34c29ed9f", "Rewind Animation", Relay_In_197)) return; 
         {
            {
               List<UnityEngine.GameObject> properties = new List<UnityEngine.GameObject>();
               {
                  //if our game object reference was changed then we need to reset event listeners
                  if ( local_MasterGO_UnityEngine_GameObject_previous != local_MasterGO_UnityEngine_GameObject || false == m_RegisteredForEvents )
                  {
                     //tear down old listeners
                     if ( null != local_MasterGO_UnityEngine_GameObject_previous )
                     {
                        {
                           uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventColor>();
                           if ( null != component )
                           {
                              component.OnCustomEventColor -= Instance_OnCustomEventColor_9;
                           }
                        }
                        {
                           uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEvent>();
                           if ( null != component )
                           {
                              component.OnCustomEvent -= Instance_OnCustomEvent_7;
                           }
                        }
                        {
                           uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector4>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector4 -= Instance_OnCustomEventVector4_17;
                           }
                        }
                        {
                           uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventObject>();
                           if ( null != component )
                           {
                              component.OnCustomEventObject -= Instance_OnCustomEventObject_13;
                           }
                        }
                        {
                           uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventInt>();
                           if ( null != component )
                           {
                              component.OnCustomEventInt -= Instance_OnCustomEventInt_12;
                           }
                        }
                        {
                           uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventFloat>();
                           if ( null != component )
                           {
                              component.OnCustomEventFloat -= Instance_OnCustomEventFloat_10;
                           }
                        }
                        {
                           uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventGameObject>();
                           if ( null != component )
                           {
                              component.OnCustomEventGameObject -= Instance_OnCustomEventGameObject_11;
                           }
                        }
                        {
                           uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector3>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector3 -= Instance_OnCustomEventVector3_16;
                           }
                        }
                        {
                           uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventString>();
                           if ( null != component )
                           {
                              component.OnCustomEventString -= Instance_OnCustomEventString_14;
                           }
                        }
                        {
                           uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector2>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector2 -= Instance_OnCustomEventVector2_15;
                           }
                        }
                        {
                           uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventBool>();
                           if ( null != component )
                           {
                              component.OnCustomEventBool -= Instance_OnCustomEventBool_8;
                           }
                        }
                        {
                           uScript_GameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_GameObject>();
                           if ( null != component )
                           {
                              component.EnableEvent -= Instance_EnableEvent_28;
                              component.DisableEvent -= Instance_DisableEvent_28;
                              component.DestroyEvent -= Instance_DestroyEvent_28;
                           }
                        }
                        {
                           uScript_Visibility component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Visibility>();
                           if ( null != component )
                           {
                              component.BecameVisible -= Instance_BecameVisible_29;
                              component.BecameInvisible -= Instance_BecameInvisible_29;
                           }
                        }
                        {
                           uScript_Mouse component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Mouse>();
                           if ( null != component )
                           {
                              component.OnEnter -= Instance_OnEnter_37;
                              component.OnOver -= Instance_OnOver_37;
                              component.OnExit -= Instance_OnExit_37;
                              component.OnDown -= Instance_OnDown_37;
                              component.OnUp -= Instance_OnUp_37;
                              component.OnDrag -= Instance_OnDrag_37;
                           }
                        }
                        {
                           uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkClientConnection>();
                           if ( null != component )
                           {
                              component.ConnectedToServer -= Instance_ConnectedToServer_48;
                              component.DisconnectedFromServer -= Instance_DisconnectedFromServer_48;
                           }
                        }
                        {
                           uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkFailedConnection>();
                           if ( null != component )
                           {
                              component.FailedToConnect -= Instance_FailedToConnect_49;
                              component.FailedToConnectToMaster -= Instance_FailedToConnectToMaster_49;
                           }
                        }
                        {
                           uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkInstantiate>();
                           if ( null != component )
                           {
                              component.OnInstantiate -= Instance_OnInstantiate_50;
                           }
                        }
                        {
                           uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkMasterServer>();
                           if ( null != component )
                           {
                              component.OnEvent -= Instance_OnEvent_51;
                           }
                        }
                        {
                           uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkSerialization>();
                           if ( null != component )
                           {
                              component.OnSerialize -= Instance_OnSerialize_52;
                           }
                        }
                        {
                           uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerInitialized>();
                           if ( null != component )
                           {
                              component.OnInitialized -= Instance_OnInitialized_53;
                           }
                        }
                        {
                           uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerPlayer>();
                           if ( null != component )
                           {
                              component.PlayerConnected -= Instance_PlayerConnected_54;
                              component.PlayerDisconnected -= Instance_PlayerDisconnected_54;
                           }
                        }
                        {
                           uScript_Particle component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Particle>();
                           if ( null != component )
                           {
                              component.Collision -= Instance_Collision_56;
                           }
                        }
                        {
                           uScript_Joint component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Joint>();
                           if ( null != component )
                           {
                              component.JointBreak -= Instance_JointBreak_59;
                           }
                        }
                        {
                           uScript_Collision component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Collision>();
                           if ( null != component )
                           {
                              component.OnEnterCollision -= Instance_OnEnterCollision_60;
                              component.OnExitCollision -= Instance_OnExitCollision_60;
                              component.WhileInsideCollision -= Instance_WhileInsideCollision_60;
                           }
                        }
                        {
                           uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_ProxyController>();
                           if ( null != component )
                           {
                              component.OnHit -= Instance_OnHit_58;
                           }
                        }
                        {
                           uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_PostEffect>();
                           if ( null != component )
                           {
                              component.RenderImage -= Instance_RenderImage_66;
                           }
                        }
                        {
                           uScript_Render component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Render>();
                           if ( null != component )
                           {
                              component.PreCull -= Instance_PreCull_67;
                              component.PreRender -= Instance_PreRender_67;
                              component.PostRender -= Instance_PostRender_67;
                              component.RenderObject -= Instance_RenderObject_67;
                              component.WillRenderObject -= Instance_WillRenderObject_67;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Triggers>();
                           if ( null != component )
                           {
                              component.OnEnterTrigger -= Instance_OnEnterTrigger_68;
                              component.OnExitTrigger -= Instance_OnExitTrigger_68;
                              component.WhileInsideTrigger -= Instance_WhileInsideTrigger_68;
                           }
                        }
                     }
                     
                     local_MasterGO_UnityEngine_GameObject_previous = local_MasterGO_UnityEngine_GameObject;
                     
                     //setup new listeners
                     if ( null != local_MasterGO_UnityEngine_GameObject )
                     {
                        {
                           uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventColor>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventColor>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventColor += Instance_OnCustomEventColor_9;
                           }
                        }
                        {
                           uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEvent>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEvent>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEvent += Instance_OnCustomEvent_7;
                           }
                        }
                        {
                           uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector4>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector4>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector4 += Instance_OnCustomEventVector4_17;
                           }
                        }
                        {
                           uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventObject>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventObject += Instance_OnCustomEventObject_13;
                           }
                        }
                        {
                           uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventInt>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventInt>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventInt += Instance_OnCustomEventInt_12;
                           }
                        }
                        {
                           uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventFloat>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventFloat>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventFloat += Instance_OnCustomEventFloat_10;
                           }
                        }
                        {
                           uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventGameObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventGameObject>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventGameObject += Instance_OnCustomEventGameObject_11;
                           }
                        }
                        {
                           uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector3>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector3>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector3 += Instance_OnCustomEventVector3_16;
                           }
                        }
                        {
                           uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventString>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventString>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventString += Instance_OnCustomEventString_14;
                           }
                        }
                        {
                           uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector2>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector2>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector2 += Instance_OnCustomEventVector2_15;
                           }
                        }
                        {
                           uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventBool>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventBool>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventBool += Instance_OnCustomEventBool_8;
                           }
                        }
                        {
                           uScript_GameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_GameObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_GameObject>();
                           }
                           if ( null != component )
                           {
                              component.EnableEvent += Instance_EnableEvent_28;
                              component.DisableEvent += Instance_DisableEvent_28;
                              component.DestroyEvent += Instance_DestroyEvent_28;
                           }
                        }
                        {
                           uScript_Visibility component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Visibility>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Visibility>();
                           }
                           if ( null != component )
                           {
                              component.BecameVisible += Instance_BecameVisible_29;
                              component.BecameInvisible += Instance_BecameInvisible_29;
                           }
                        }
                        {
                           uScript_Mouse component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Mouse>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Mouse>();
                           }
                           if ( null != component )
                           {
                              component.OnEnter += Instance_OnEnter_37;
                              component.OnOver += Instance_OnOver_37;
                              component.OnExit += Instance_OnExit_37;
                              component.OnDown += Instance_OnDown_37;
                              component.OnUp += Instance_OnUp_37;
                              component.OnDrag += Instance_OnDrag_37;
                           }
                        }
                        {
                           uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkClientConnection>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkClientConnection>();
                           }
                           if ( null != component )
                           {
                              component.ConnectedToServer += Instance_ConnectedToServer_48;
                              component.DisconnectedFromServer += Instance_DisconnectedFromServer_48;
                           }
                        }
                        {
                           uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkFailedConnection>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkFailedConnection>();
                           }
                           if ( null != component )
                           {
                              component.FailedToConnect += Instance_FailedToConnect_49;
                              component.FailedToConnectToMaster += Instance_FailedToConnectToMaster_49;
                           }
                        }
                        {
                           uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkInstantiate>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkInstantiate>();
                           }
                           if ( null != component )
                           {
                              component.OnInstantiate += Instance_OnInstantiate_50;
                           }
                        }
                        {
                           uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkMasterServer>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkMasterServer>();
                           }
                           if ( null != component )
                           {
                              component.OnEvent += Instance_OnEvent_51;
                           }
                        }
                        {
                           uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkSerialization>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkSerialization>();
                           }
                           if ( null != component )
                           {
                              component.OnSerialize += Instance_OnSerialize_52;
                           }
                        }
                        {
                           uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerInitialized>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerInitialized>();
                           }
                           if ( null != component )
                           {
                              component.OnInitialized += Instance_OnInitialized_53;
                           }
                        }
                        {
                           uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerPlayer>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerPlayer>();
                           }
                           if ( null != component )
                           {
                              component.PlayerConnected += Instance_PlayerConnected_54;
                              component.PlayerDisconnected += Instance_PlayerDisconnected_54;
                           }
                        }
                        {
                           uScript_Particle component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Particle>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Particle>();
                           }
                           if ( null != component )
                           {
                              component.Collision += Instance_Collision_56;
                           }
                        }
                        {
                           uScript_Joint component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Joint>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Joint>();
                           }
                           if ( null != component )
                           {
                              component.JointBreak += Instance_JointBreak_59;
                           }
                        }
                        {
                           uScript_Collision component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Collision>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Collision>();
                           }
                           if ( null != component )
                           {
                              component.OnEnterCollision += Instance_OnEnterCollision_60;
                              component.OnExitCollision += Instance_OnExitCollision_60;
                              component.WhileInsideCollision += Instance_WhileInsideCollision_60;
                           }
                        }
                        {
                           uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_ProxyController>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_ProxyController>();
                           }
                           if ( null != component )
                           {
                              component.OnHit += Instance_OnHit_58;
                           }
                        }
                        {
                           uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_PostEffect>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_PostEffect>();
                           }
                           if ( null != component )
                           {
                              component.RenderImage += Instance_RenderImage_66;
                           }
                        }
                        {
                           uScript_Render component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Render>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Render>();
                           }
                           if ( null != component )
                           {
                              component.PreCull += Instance_PreCull_67;
                              component.PreRender += Instance_PreRender_67;
                              component.PostRender += Instance_PostRender_67;
                              component.RenderObject += Instance_RenderObject_67;
                              component.WillRenderObject += Instance_WillRenderObject_67;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
                           }
                           if ( null != component )
                           {
                              component.TimesToTrigger = event_UnityEngine_GameObject_TimesToTrigger_68;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
                           }
                           if ( null != component )
                           {
                              component.OnEnterTrigger += Instance_OnEnterTrigger_68;
                              component.OnExitTrigger += Instance_OnExitTrigger_68;
                              component.WhileInsideTrigger += Instance_WhileInsideTrigger_68;
                           }
                        }
                     }
                  }
               }
               properties.Add((UnityEngine.GameObject)local_MasterGO_UnityEngine_GameObject);
               logic_uScriptAct_RewindAnimation_Target_197 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_RewindAnimation_uScriptAct_RewindAnimation_197.In(logic_uScriptAct_RewindAnimation_Target_197, logic_uScriptAct_RewindAnimation_AnimationName_197);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_RewindAnimation_uScriptAct_RewindAnimation_197.Out;
         
         if ( test_0 == true )
         {
            Relay_In_199();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Rewind Animation.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_198()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("851026ae-c7ef-455e-9ece-7e76fecb5719", "Stop Animation", Relay_In_198)) return; 
         {
            {
               List<UnityEngine.GameObject> properties = new List<UnityEngine.GameObject>();
               {
                  //if our game object reference was changed then we need to reset event listeners
                  if ( local_MasterGO_UnityEngine_GameObject_previous != local_MasterGO_UnityEngine_GameObject || false == m_RegisteredForEvents )
                  {
                     //tear down old listeners
                     if ( null != local_MasterGO_UnityEngine_GameObject_previous )
                     {
                        {
                           uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventColor>();
                           if ( null != component )
                           {
                              component.OnCustomEventColor -= Instance_OnCustomEventColor_9;
                           }
                        }
                        {
                           uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEvent>();
                           if ( null != component )
                           {
                              component.OnCustomEvent -= Instance_OnCustomEvent_7;
                           }
                        }
                        {
                           uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector4>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector4 -= Instance_OnCustomEventVector4_17;
                           }
                        }
                        {
                           uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventObject>();
                           if ( null != component )
                           {
                              component.OnCustomEventObject -= Instance_OnCustomEventObject_13;
                           }
                        }
                        {
                           uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventInt>();
                           if ( null != component )
                           {
                              component.OnCustomEventInt -= Instance_OnCustomEventInt_12;
                           }
                        }
                        {
                           uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventFloat>();
                           if ( null != component )
                           {
                              component.OnCustomEventFloat -= Instance_OnCustomEventFloat_10;
                           }
                        }
                        {
                           uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventGameObject>();
                           if ( null != component )
                           {
                              component.OnCustomEventGameObject -= Instance_OnCustomEventGameObject_11;
                           }
                        }
                        {
                           uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector3>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector3 -= Instance_OnCustomEventVector3_16;
                           }
                        }
                        {
                           uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventString>();
                           if ( null != component )
                           {
                              component.OnCustomEventString -= Instance_OnCustomEventString_14;
                           }
                        }
                        {
                           uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector2>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector2 -= Instance_OnCustomEventVector2_15;
                           }
                        }
                        {
                           uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventBool>();
                           if ( null != component )
                           {
                              component.OnCustomEventBool -= Instance_OnCustomEventBool_8;
                           }
                        }
                        {
                           uScript_GameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_GameObject>();
                           if ( null != component )
                           {
                              component.EnableEvent -= Instance_EnableEvent_28;
                              component.DisableEvent -= Instance_DisableEvent_28;
                              component.DestroyEvent -= Instance_DestroyEvent_28;
                           }
                        }
                        {
                           uScript_Visibility component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Visibility>();
                           if ( null != component )
                           {
                              component.BecameVisible -= Instance_BecameVisible_29;
                              component.BecameInvisible -= Instance_BecameInvisible_29;
                           }
                        }
                        {
                           uScript_Mouse component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Mouse>();
                           if ( null != component )
                           {
                              component.OnEnter -= Instance_OnEnter_37;
                              component.OnOver -= Instance_OnOver_37;
                              component.OnExit -= Instance_OnExit_37;
                              component.OnDown -= Instance_OnDown_37;
                              component.OnUp -= Instance_OnUp_37;
                              component.OnDrag -= Instance_OnDrag_37;
                           }
                        }
                        {
                           uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkClientConnection>();
                           if ( null != component )
                           {
                              component.ConnectedToServer -= Instance_ConnectedToServer_48;
                              component.DisconnectedFromServer -= Instance_DisconnectedFromServer_48;
                           }
                        }
                        {
                           uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkFailedConnection>();
                           if ( null != component )
                           {
                              component.FailedToConnect -= Instance_FailedToConnect_49;
                              component.FailedToConnectToMaster -= Instance_FailedToConnectToMaster_49;
                           }
                        }
                        {
                           uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkInstantiate>();
                           if ( null != component )
                           {
                              component.OnInstantiate -= Instance_OnInstantiate_50;
                           }
                        }
                        {
                           uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkMasterServer>();
                           if ( null != component )
                           {
                              component.OnEvent -= Instance_OnEvent_51;
                           }
                        }
                        {
                           uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkSerialization>();
                           if ( null != component )
                           {
                              component.OnSerialize -= Instance_OnSerialize_52;
                           }
                        }
                        {
                           uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerInitialized>();
                           if ( null != component )
                           {
                              component.OnInitialized -= Instance_OnInitialized_53;
                           }
                        }
                        {
                           uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerPlayer>();
                           if ( null != component )
                           {
                              component.PlayerConnected -= Instance_PlayerConnected_54;
                              component.PlayerDisconnected -= Instance_PlayerDisconnected_54;
                           }
                        }
                        {
                           uScript_Particle component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Particle>();
                           if ( null != component )
                           {
                              component.Collision -= Instance_Collision_56;
                           }
                        }
                        {
                           uScript_Joint component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Joint>();
                           if ( null != component )
                           {
                              component.JointBreak -= Instance_JointBreak_59;
                           }
                        }
                        {
                           uScript_Collision component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Collision>();
                           if ( null != component )
                           {
                              component.OnEnterCollision -= Instance_OnEnterCollision_60;
                              component.OnExitCollision -= Instance_OnExitCollision_60;
                              component.WhileInsideCollision -= Instance_WhileInsideCollision_60;
                           }
                        }
                        {
                           uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_ProxyController>();
                           if ( null != component )
                           {
                              component.OnHit -= Instance_OnHit_58;
                           }
                        }
                        {
                           uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_PostEffect>();
                           if ( null != component )
                           {
                              component.RenderImage -= Instance_RenderImage_66;
                           }
                        }
                        {
                           uScript_Render component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Render>();
                           if ( null != component )
                           {
                              component.PreCull -= Instance_PreCull_67;
                              component.PreRender -= Instance_PreRender_67;
                              component.PostRender -= Instance_PostRender_67;
                              component.RenderObject -= Instance_RenderObject_67;
                              component.WillRenderObject -= Instance_WillRenderObject_67;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Triggers>();
                           if ( null != component )
                           {
                              component.OnEnterTrigger -= Instance_OnEnterTrigger_68;
                              component.OnExitTrigger -= Instance_OnExitTrigger_68;
                              component.WhileInsideTrigger -= Instance_WhileInsideTrigger_68;
                           }
                        }
                     }
                     
                     local_MasterGO_UnityEngine_GameObject_previous = local_MasterGO_UnityEngine_GameObject;
                     
                     //setup new listeners
                     if ( null != local_MasterGO_UnityEngine_GameObject )
                     {
                        {
                           uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventColor>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventColor>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventColor += Instance_OnCustomEventColor_9;
                           }
                        }
                        {
                           uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEvent>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEvent>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEvent += Instance_OnCustomEvent_7;
                           }
                        }
                        {
                           uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector4>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector4>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector4 += Instance_OnCustomEventVector4_17;
                           }
                        }
                        {
                           uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventObject>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventObject += Instance_OnCustomEventObject_13;
                           }
                        }
                        {
                           uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventInt>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventInt>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventInt += Instance_OnCustomEventInt_12;
                           }
                        }
                        {
                           uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventFloat>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventFloat>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventFloat += Instance_OnCustomEventFloat_10;
                           }
                        }
                        {
                           uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventGameObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventGameObject>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventGameObject += Instance_OnCustomEventGameObject_11;
                           }
                        }
                        {
                           uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector3>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector3>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector3 += Instance_OnCustomEventVector3_16;
                           }
                        }
                        {
                           uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventString>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventString>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventString += Instance_OnCustomEventString_14;
                           }
                        }
                        {
                           uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector2>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector2>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector2 += Instance_OnCustomEventVector2_15;
                           }
                        }
                        {
                           uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventBool>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventBool>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventBool += Instance_OnCustomEventBool_8;
                           }
                        }
                        {
                           uScript_GameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_GameObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_GameObject>();
                           }
                           if ( null != component )
                           {
                              component.EnableEvent += Instance_EnableEvent_28;
                              component.DisableEvent += Instance_DisableEvent_28;
                              component.DestroyEvent += Instance_DestroyEvent_28;
                           }
                        }
                        {
                           uScript_Visibility component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Visibility>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Visibility>();
                           }
                           if ( null != component )
                           {
                              component.BecameVisible += Instance_BecameVisible_29;
                              component.BecameInvisible += Instance_BecameInvisible_29;
                           }
                        }
                        {
                           uScript_Mouse component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Mouse>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Mouse>();
                           }
                           if ( null != component )
                           {
                              component.OnEnter += Instance_OnEnter_37;
                              component.OnOver += Instance_OnOver_37;
                              component.OnExit += Instance_OnExit_37;
                              component.OnDown += Instance_OnDown_37;
                              component.OnUp += Instance_OnUp_37;
                              component.OnDrag += Instance_OnDrag_37;
                           }
                        }
                        {
                           uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkClientConnection>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkClientConnection>();
                           }
                           if ( null != component )
                           {
                              component.ConnectedToServer += Instance_ConnectedToServer_48;
                              component.DisconnectedFromServer += Instance_DisconnectedFromServer_48;
                           }
                        }
                        {
                           uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkFailedConnection>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkFailedConnection>();
                           }
                           if ( null != component )
                           {
                              component.FailedToConnect += Instance_FailedToConnect_49;
                              component.FailedToConnectToMaster += Instance_FailedToConnectToMaster_49;
                           }
                        }
                        {
                           uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkInstantiate>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkInstantiate>();
                           }
                           if ( null != component )
                           {
                              component.OnInstantiate += Instance_OnInstantiate_50;
                           }
                        }
                        {
                           uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkMasterServer>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkMasterServer>();
                           }
                           if ( null != component )
                           {
                              component.OnEvent += Instance_OnEvent_51;
                           }
                        }
                        {
                           uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkSerialization>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkSerialization>();
                           }
                           if ( null != component )
                           {
                              component.OnSerialize += Instance_OnSerialize_52;
                           }
                        }
                        {
                           uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerInitialized>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerInitialized>();
                           }
                           if ( null != component )
                           {
                              component.OnInitialized += Instance_OnInitialized_53;
                           }
                        }
                        {
                           uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerPlayer>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerPlayer>();
                           }
                           if ( null != component )
                           {
                              component.PlayerConnected += Instance_PlayerConnected_54;
                              component.PlayerDisconnected += Instance_PlayerDisconnected_54;
                           }
                        }
                        {
                           uScript_Particle component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Particle>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Particle>();
                           }
                           if ( null != component )
                           {
                              component.Collision += Instance_Collision_56;
                           }
                        }
                        {
                           uScript_Joint component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Joint>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Joint>();
                           }
                           if ( null != component )
                           {
                              component.JointBreak += Instance_JointBreak_59;
                           }
                        }
                        {
                           uScript_Collision component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Collision>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Collision>();
                           }
                           if ( null != component )
                           {
                              component.OnEnterCollision += Instance_OnEnterCollision_60;
                              component.OnExitCollision += Instance_OnExitCollision_60;
                              component.WhileInsideCollision += Instance_WhileInsideCollision_60;
                           }
                        }
                        {
                           uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_ProxyController>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_ProxyController>();
                           }
                           if ( null != component )
                           {
                              component.OnHit += Instance_OnHit_58;
                           }
                        }
                        {
                           uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_PostEffect>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_PostEffect>();
                           }
                           if ( null != component )
                           {
                              component.RenderImage += Instance_RenderImage_66;
                           }
                        }
                        {
                           uScript_Render component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Render>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Render>();
                           }
                           if ( null != component )
                           {
                              component.PreCull += Instance_PreCull_67;
                              component.PreRender += Instance_PreRender_67;
                              component.PostRender += Instance_PostRender_67;
                              component.RenderObject += Instance_RenderObject_67;
                              component.WillRenderObject += Instance_WillRenderObject_67;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
                           }
                           if ( null != component )
                           {
                              component.TimesToTrigger = event_UnityEngine_GameObject_TimesToTrigger_68;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
                           }
                           if ( null != component )
                           {
                              component.OnEnterTrigger += Instance_OnEnterTrigger_68;
                              component.OnExitTrigger += Instance_OnExitTrigger_68;
                              component.WhileInsideTrigger += Instance_WhileInsideTrigger_68;
                           }
                        }
                     }
                  }
               }
               properties.Add((UnityEngine.GameObject)local_MasterGO_UnityEngine_GameObject);
               logic_uScriptAct_StopAnimation_Target_198 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_StopAnimation_uScriptAct_StopAnimation_198.In(logic_uScriptAct_StopAnimation_Target_198, logic_uScriptAct_StopAnimation_AnimationName_198);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_StopAnimation_uScriptAct_StopAnimation_198.Out;
         
         if ( test_0 == true )
         {
            Relay_In_220();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Stop Animation.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_199()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a064ab2f-4092-42af-8877-cc118d16fb63", "Get Application Info", Relay_In_199)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ApplicationInfo_uScriptAct_ApplicationInfo_199.In(out logic_uScriptAct_ApplicationInfo_levelCount_199, out logic_uScriptAct_ApplicationInfo_loadedLevel_199, out logic_uScriptAct_ApplicationInfo_loadedLevelName_199, out logic_uScriptAct_ApplicationInfo_isEditor_199, out logic_uScriptAct_ApplicationInfo_isLoadingLevel_199, out logic_uScriptAct_ApplicationInfo_isPlaying_199, out logic_uScriptAct_ApplicationInfo_isWebPlayer_199, out logic_uScriptAct_ApplicationInfo_streamedBytes_199, out logic_uScriptAct_ApplicationInfo_platform_199, out logic_uScriptAct_ApplicationInfo_dataPath_199, out logic_uScriptAct_ApplicationInfo_persistentDataPath_199, out logic_uScriptAct_ApplicationInfo_temporaryCachePath_199, out logic_uScriptAct_ApplicationInfo_srcValue_199, out logic_uScriptAct_ApplicationInfo_absoluteURL_199, out logic_uScriptAct_ApplicationInfo_systemLanguage_199, out logic_uScriptAct_ApplicationInfo_internetReachability_199, out logic_uScriptAct_ApplicationInfo_webSecurityEnabled_199, out logic_uScriptAct_ApplicationInfo_webSecurityHostUrl_199, out logic_uScriptAct_ApplicationInfo_runInBackground_199, out logic_uScriptAct_ApplicationInfo_targetFrameRate_199, out logic_uScriptAct_ApplicationInfo_backgroundLoadingPriority_199, out logic_uScriptAct_ApplicationInfo_unityVersion_199);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ApplicationInfo_uScriptAct_ApplicationInfo_199.Out;
         
         if ( test_0 == true )
         {
            Relay_In_200();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Application Info.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_200()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("14b1e9e2-8465-445a-8d29-61482f5dbe77", "Delete Preference Key", Relay_In_200)) return; 
         {
            {
            }
         }
         logic_uScriptAct_DeletePreferenceKey_uScriptAct_DeletePreferenceKey_200.In(logic_uScriptAct_DeletePreferenceKey_KeyName_200);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_DeletePreferenceKey_uScriptAct_DeletePreferenceKey_200.Out;
         
         if ( test_0 == true )
         {
            Relay_In_201();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Delete Preference Key.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_201()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2cdfb6f9-c37a-46cc-b221-1fe8eed21810", "Does Preference Key Exist", Relay_In_201)) return; 
         {
            {
            }
         }
         logic_uScriptAct_DoesPreferenceKeyExist_uScriptAct_DoesPreferenceKeyExist_201.In(logic_uScriptAct_DoesPreferenceKeyExist_KeyName_201);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_DoesPreferenceKeyExist_uScriptAct_DoesPreferenceKeyExist_201.True;
         bool test_1 = logic_uScriptAct_DoesPreferenceKeyExist_uScriptAct_DoesPreferenceKeyExist_201.False;
         
         if ( test_0 == true )
         {
            Relay_In_210();
         }
         if ( test_1 == true )
         {
            Relay_In_211();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Does Preference Key Exist.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_202()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9f9be75f-272b-4f56-aae3-96eb59da3647", "Get Preference Key (Bool)", Relay_In_202)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPreferenceKeyBool_uScriptAct_GetPreferenceKeyBool_202.In(logic_uScriptAct_GetPreferenceKeyBool_KeyName_202, logic_uScriptAct_GetPreferenceKeyBool_DefaultValue_202, out logic_uScriptAct_GetPreferenceKeyBool_Value_202);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPreferenceKeyBool_uScriptAct_GetPreferenceKeyBool_202.Out;
         
         if ( test_0 == true )
         {
            Relay_In_203();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Preference Key (Bool).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_203()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9e68ca14-20f0-46fe-8f0e-b4a960184efa", "Get Preference Key (Float)", Relay_In_203)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPreferenceKeyFloat_uScriptAct_GetPreferenceKeyFloat_203.In(logic_uScriptAct_GetPreferenceKeyFloat_KeyName_203, logic_uScriptAct_GetPreferenceKeyFloat_DefaultValue_203, out logic_uScriptAct_GetPreferenceKeyFloat_Value_203);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPreferenceKeyFloat_uScriptAct_GetPreferenceKeyFloat_203.Out;
         
         if ( test_0 == true )
         {
            Relay_In_204();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Preference Key (Float).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_204()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a7a137f5-770d-4538-ada7-b6df44cfbe38", "Get Preference Key (Int)", Relay_In_204)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPreferenceKeyInt_uScriptAct_GetPreferenceKeyInt_204.In(logic_uScriptAct_GetPreferenceKeyInt_KeyName_204, logic_uScriptAct_GetPreferenceKeyInt_DefaultValue_204, out logic_uScriptAct_GetPreferenceKeyInt_Value_204);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPreferenceKeyInt_uScriptAct_GetPreferenceKeyInt_204.Out;
         
         if ( test_0 == true )
         {
            Relay_In_209();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Preference Key (Int).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_205()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f8c3f3cd-eae1-46db-b7d3-a90c4d924aac", "Get Preference Key (Rect)", Relay_In_205)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPreferenceKeyRect_uScriptAct_GetPreferenceKeyRect_205.In(logic_uScriptAct_GetPreferenceKeyRect_KeyName_205, logic_uScriptAct_GetPreferenceKeyRect_DefaultValue_205, out logic_uScriptAct_GetPreferenceKeyRect_Value_205);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPreferenceKeyRect_uScriptAct_GetPreferenceKeyRect_205.Out;
         
         if ( test_0 == true )
         {
            Relay_In_206();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Preference Key (Rect).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_206()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5f42061d-70da-4e45-a87c-fa8d542070e5", "Get Preference Key (String)", Relay_In_206)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPreferenceKeyString_uScriptAct_GetPreferenceKeyString_206.In(logic_uScriptAct_GetPreferenceKeyString_KeyName_206, logic_uScriptAct_GetPreferenceKeyString_DefaultValue_206, out logic_uScriptAct_GetPreferenceKeyString_Value_206);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPreferenceKeyString_uScriptAct_GetPreferenceKeyString_206.Out;
         
         if ( test_0 == true )
         {
            Relay_In_207();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Preference Key (String).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_207()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("605ec78e-64f1-45ea-be0d-5bf4304cdf61", "Get Preference Key (Vector2)", Relay_In_207)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPreferenceKeyVector2_uScriptAct_GetPreferenceKeyVector2_207.In(logic_uScriptAct_GetPreferenceKeyVector2_KeyName_207, logic_uScriptAct_GetPreferenceKeyVector2_DefaultValue_207, out logic_uScriptAct_GetPreferenceKeyVector2_Value_207);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPreferenceKeyVector2_uScriptAct_GetPreferenceKeyVector2_207.Out;
         
         if ( test_0 == true )
         {
            Relay_In_208();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Preference Key (Vector2).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_208()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b1919125-641f-4874-b3ae-b8efa98dfb36", "Get Preference Key (Vector3)", Relay_In_208)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPreferenceKeyVector3_uScriptAct_GetPreferenceKeyVector3_208.In(logic_uScriptAct_GetPreferenceKeyVector3_KeyName_208, logic_uScriptAct_GetPreferenceKeyVector3_DefaultValue_208, out logic_uScriptAct_GetPreferenceKeyVector3_Value_208);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPreferenceKeyVector3_uScriptAct_GetPreferenceKeyVector3_208.Out;
         
         if ( test_0 == true )
         {
            Relay_In_213();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Preference Key (Vector3).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_209()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("04d59501-c099-4d5c-b52d-4a4a46d98a76", "Get Preference Key (Vector4)", Relay_In_209)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPreferenceKeyVector4_uScriptAct_GetPreferenceKeyVector4_209.In(logic_uScriptAct_GetPreferenceKeyVector4_KeyName_209, logic_uScriptAct_GetPreferenceKeyVector4_DefaultValue_209, out logic_uScriptAct_GetPreferenceKeyVector4_Value_209);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPreferenceKeyVector4_uScriptAct_GetPreferenceKeyVector4_209.Out;
         
         if ( test_0 == true )
         {
            Relay_In_212();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Preference Key (Vector4).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_210()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("df1759d9-2021-4f54-b965-888038af3ec0", "Open Browser", Relay_In_210)) return; 
         {
            {
            }
         }
         logic_uScriptAct_OpenBrowser_uScriptAct_OpenBrowser_210.In(logic_uScriptAct_OpenBrowser_URL_210);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OpenBrowser_uScriptAct_OpenBrowser_210.Out;
         
         if ( test_0 == true )
         {
            Relay_In_202();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Open Browser.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_211()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1b18c86d-c488-4498-836d-c96f328b8fa8", "Quit", Relay_In_211)) return; 
         {
         }
         logic_uScriptAct_Quit_uScriptAct_Quit_211.In();
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Quit_uScriptAct_Quit_211.Out;
         
         if ( test_0 == true )
         {
            Relay_In_205();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Quit.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_212()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ce76374f-02ab-4353-9c4e-38032c6d31a8", "Set Preference Key (Bool)", Relay_In_212)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetPreferenceKeyBool_uScriptAct_SetPreferenceKeyBool_212.In(logic_uScriptAct_SetPreferenceKeyBool_KeyName_212, logic_uScriptAct_SetPreferenceKeyBool_Value_212);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetPreferenceKeyBool_uScriptAct_SetPreferenceKeyBool_212.Out;
         
         if ( test_0 == true )
         {
            Relay_In_214();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Preference Key (Bool).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_213()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c7e9bbdb-6ba8-4078-bdac-874861969d75", "Set Preference Key (Float)", Relay_In_213)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetPreferenceKeyFloat_uScriptAct_SetPreferenceKeyFloat_213.In(logic_uScriptAct_SetPreferenceKeyFloat_KeyName_213, logic_uScriptAct_SetPreferenceKeyFloat_Value_213);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetPreferenceKeyFloat_uScriptAct_SetPreferenceKeyFloat_213.Out;
         
         if ( test_0 == true )
         {
            Relay_In_215();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Preference Key (Float).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_214()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("47bba06b-4927-4e26-99cf-f6a9a3b877ec", "Set Preference Key (Int)", Relay_In_214)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetPreferenceKeyInt_uScriptAct_SetPreferenceKeyInt_214.In(logic_uScriptAct_SetPreferenceKeyInt_KeyName_214, logic_uScriptAct_SetPreferenceKeyInt_Value_214);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetPreferenceKeyInt_uScriptAct_SetPreferenceKeyInt_214.Out;
         
         if ( test_0 == true )
         {
            Relay_In_217();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Preference Key (Int).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_215()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b85cc34f-2a4a-409e-abaf-7fdf2558e2b0", "Set Preference Key (Rect)", Relay_In_215)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetPreferenceKeyRect_uScriptAct_SetPreferenceKeyRect_215.In(logic_uScriptAct_SetPreferenceKeyRect_KeyName_215, logic_uScriptAct_SetPreferenceKeyRect_Value_215);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetPreferenceKeyRect_uScriptAct_SetPreferenceKeyRect_215.Out;
         
         if ( test_0 == true )
         {
            Relay_In_216();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Preference Key (Rect).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_216()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("93ff48c7-bca4-4145-87d0-170083e4c188", "Set Preference Key (String)", Relay_In_216)) return; 
         {
            {
               logic_uScriptAct_SetPreferenceKeyString_KeyName_216 = local_222_System_String;
               
            }
            {
               logic_uScriptAct_SetPreferenceKeyString_Value_216 = local_223_System_String;
               
            }
         }
         logic_uScriptAct_SetPreferenceKeyString_uScriptAct_SetPreferenceKeyString_216.In(logic_uScriptAct_SetPreferenceKeyString_KeyName_216, logic_uScriptAct_SetPreferenceKeyString_Value_216);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetPreferenceKeyString_uScriptAct_SetPreferenceKeyString_216.Out;
         
         if ( test_0 == true )
         {
            Relay_In_218();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Preference Key (String).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_217()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("14831c01-37d8-4b07-ac4b-8a397d60e907", "Set Preference Key (Vector2)", Relay_In_217)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetPreferenceKeyVector2_uScriptAct_SetPreferenceKeyVector2_217.In(logic_uScriptAct_SetPreferenceKeyVector2_KeyName_217, logic_uScriptAct_SetPreferenceKeyVector2_Value_217);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetPreferenceKeyVector2_uScriptAct_SetPreferenceKeyVector2_217.Out;
         
         if ( test_0 == true )
         {
            Relay_In_219();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Preference Key (Vector2).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_218()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("bc344cdc-d31c-42db-9738-177efcb406aa", "Set Preference Key (Vector3)", Relay_In_218)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetPreferenceKeyVector3_uScriptAct_SetPreferenceKeyVector3_218.In(logic_uScriptAct_SetPreferenceKeyVector3_KeyName_218, logic_uScriptAct_SetPreferenceKeyVector3_Value_218);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetPreferenceKeyVector3_uScriptAct_SetPreferenceKeyVector3_218.Out;
         
         if ( test_0 == true )
         {
            Relay_In_224();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Preference Key (Vector3).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_219()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("504f84cd-7e57-44ae-9189-1f4c057eacc6", "Set Preference Key (Vector4)", Relay_In_219)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetPreferenceKeyVector4_uScriptAct_SetPreferenceKeyVector4_219.In(logic_uScriptAct_SetPreferenceKeyVector4_KeyName_219, logic_uScriptAct_SetPreferenceKeyVector4_Value_219);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetPreferenceKeyVector4_uScriptAct_SetPreferenceKeyVector4_219.Out;
         
         if ( test_0 == true )
         {
            Relay_In_224();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Preference Key (Vector4).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_220()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7b2530a8-d07a-4f0c-b95d-76326ce03333", "Log", Relay_In_220)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_220.In(logic_uScriptAct_Log_Prefix_220, logic_uScriptAct_Log_Target_220, logic_uScriptAct_Log_Postfix_220);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_221()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a71b1215-3ca4-4445-ae5d-eb85e8da5ca2", "Log", Relay_In_221)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_221.In(logic_uScriptAct_Log_Prefix_221, logic_uScriptAct_Log_Target_221, logic_uScriptAct_Log_Postfix_221);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_224()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("19d69a11-f75c-464e-8786-d08cb3bae304", "Log", Relay_In_224)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_224.In(logic_uScriptAct_Log_Prefix_224, logic_uScriptAct_Log_Target_224, logic_uScriptAct_Log_Postfix_224);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_KeyEvent_225()
   {
      if (true == CheckDebugBreak("cddc7eca-315e-4039-b917-00def574c5b0", "Input Events", Relay_KeyEvent_225)) return; 
      Relay_In_226();
   }
   
   void Relay_In_226()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("cc375d82-63fe-4c2b-bc78-00a4598f3bf7", "Input Events Filter", Relay_In_226)) return; 
         {
            {
               logic_uScriptAct_OnInputEventFilter_KeyCode_226 = local_263_UnityEngine_KeyCode;
               
            }
         }
         logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_226.In(logic_uScriptAct_OnInputEventFilter_KeyCode_226);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_226.KeyDown;
         bool test_1 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_226.KeyHeld;
         bool test_2 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_226.KeyUp;
         
         if ( test_0 == true )
         {
            Relay_In_228();
         }
         if ( test_1 == true )
         {
            Relay_In_258();
         }
         if ( test_2 == true )
         {
            Relay_In_229();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Input Events Filter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Finished_227()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("98439a97-ec27-4d54-bd56-87d1f24bbb12", "Play Sound", Relay_Finished_227)) return; 
         Relay_In_232();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Play Sound.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Play_227()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("98439a97-ec27-4d54-bd56-87d1f24bbb12", "Play Sound", Relay_Play_227)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.Play(logic_uScriptAct_PlaySound_audioClip_227, logic_uScriptAct_PlaySound_target_227, logic_uScriptAct_PlaySound_volume_227, logic_uScriptAct_PlaySound_loop_227);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.Out;
         
         if ( test_0 == true )
         {
            Relay_In_234();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Play Sound.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_UpdateVolume_227()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("98439a97-ec27-4d54-bd56-87d1f24bbb12", "Play Sound", Relay_UpdateVolume_227)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.UpdateVolume(logic_uScriptAct_PlaySound_audioClip_227, logic_uScriptAct_PlaySound_target_227, logic_uScriptAct_PlaySound_volume_227, logic_uScriptAct_PlaySound_loop_227);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.Out;
         
         if ( test_0 == true )
         {
            Relay_In_234();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Play Sound.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_227()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("98439a97-ec27-4d54-bd56-87d1f24bbb12", "Play Sound", Relay_Stop_227)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.Stop(logic_uScriptAct_PlaySound_audioClip_227, logic_uScriptAct_PlaySound_target_227, logic_uScriptAct_PlaySound_volume_227, logic_uScriptAct_PlaySound_loop_227);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_PlaySound_uScriptAct_PlaySound_227.Out;
         
         if ( test_0 == true )
         {
            Relay_In_234();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Play Sound.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_228()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a6086f59-6d63-4bc4-9792-2cb68d04c664", "Set Active Audio Listener", Relay_In_228)) return; 
         {
            {
            }
         }
         logic_uScriptAct_SetActiveAudioListener_uScriptAct_SetActiveAudioListener_228.In(logic_uScriptAct_SetActiveAudioListener_Target_228);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetActiveAudioListener_uScriptAct_SetActiveAudioListener_228.Out;
         
         if ( test_0 == true )
         {
            Relay_Play_227();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Active Audio Listener.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_229()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6ed7354e-1280-4b89-98c9-80e62dfccd74", "Set Camera Depth", Relay_In_229)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetCameraDepth_uScriptAct_SetCameraDepth_229.In(logic_uScriptAct_SetCameraDepth_Target_229, logic_uScriptAct_SetCameraDepth_Depth_229);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetCameraDepth_uScriptAct_SetCameraDepth_229.Out;
         
         if ( test_0 == true )
         {
            Relay_In_230();
            Relay_Stop_227();
            Relay_Stop_264();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Camera Depth.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_230()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e8cf73f1-3b05-4799-9ef3-26de7dd4b48c", "Switch Cameras", Relay_In_230)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SwitchCameras_uScriptAct_SwitchCameras_230.In(logic_uScriptAct_SwitchCameras_FromCamera_230, logic_uScriptAct_SwitchCameras_Target_230, logic_uScriptAct_SwitchCameras_EnableAudioListener_230);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SwitchCameras_uScriptAct_SwitchCameras_230.Out;
         
         if ( test_0 == true )
         {
            Relay_In_231();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Switch Cameras.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_231()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6630ad4a-de46-42f2-83e3-295ac8163a37", "Update Camera Orbit", Relay_In_231)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_UpdateCameraOrbit_uScriptAct_UpdateCameraOrbit_231.In(logic_uScriptAct_UpdateCameraOrbit_Camera_231, logic_uScriptAct_UpdateCameraOrbit_Target_231, logic_uScriptAct_UpdateCameraOrbit_Distance_231, logic_uScriptAct_UpdateCameraOrbit_Movement_231, logic_uScriptAct_UpdateCameraOrbit_Speed_231, logic_uScriptAct_UpdateCameraOrbit_ConstrainAngles_231, logic_uScriptAct_UpdateCameraOrbit_HorizontalRange_231, logic_uScriptAct_UpdateCameraOrbit_VerticalRange_231);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_UpdateCameraOrbit_uScriptAct_UpdateCameraOrbit_231.Out;
         
         if ( test_0 == true )
         {
            Relay_In_233();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Update Camera Orbit.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Loaded_232()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("77b263d2-e9b7-4988-aefd-64ef506d97a0", "Load Level", Relay_Loaded_232)) return; 
         Relay_In_235();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Level.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_232()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("77b263d2-e9b7-4988-aefd-64ef506d97a0", "Load Level", Relay_In_232)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadLevel_uScriptAct_LoadLevel_232.In(logic_uScriptAct_LoadLevel_name_232, logic_uScriptAct_LoadLevel_destroyOtherObjects_232, logic_uScriptAct_LoadLevel_blockUntilLoaded_232);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadLevel_uScriptAct_LoadLevel_232.Out;
         
         if ( test_0 == true )
         {
            Relay_In_235();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Level.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Loaded_233()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("4d65e717-1686-4704-9d1f-3f56f49c1092", "Load Level By Index", Relay_Loaded_233)) return; 
         Relay_In_236();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Level By Index.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_233()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("4d65e717-1686-4704-9d1f-3f56f49c1092", "Load Level By Index", Relay_In_233)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_LoadLevelByIndex_uScriptAct_LoadLevelByIndex_233.In(logic_uScriptAct_LoadLevelByIndex_index_233, logic_uScriptAct_LoadLevelByIndex_destroyOtherObjects_233, logic_uScriptAct_LoadLevelByIndex_blockUntilLoaded_233);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LoadLevelByIndex_uScriptAct_LoadLevelByIndex_233.Out;
         
         if ( test_0 == true )
         {
            Relay_StartEmitting_237();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Load Level By Index.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_234()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("28f755ba-843e-4489-b10f-4768ea134d06", "Log", Relay_In_234)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_234.In(logic_uScriptAct_Log_Prefix_234, logic_uScriptAct_Log_Target_234, logic_uScriptAct_Log_Postfix_234);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_235()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1032de47-5b93-4359-966b-d82254fd2df2", "Log", Relay_In_235)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_235.In(logic_uScriptAct_Log_Prefix_235, logic_uScriptAct_Log_Target_235, logic_uScriptAct_Log_Postfix_235);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_236()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7be427d0-e249-400f-ba0c-031fbeb1914a", "Log", Relay_In_236)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_236.In(logic_uScriptAct_Log_Prefix_236, logic_uScriptAct_Log_Target_236, logic_uScriptAct_Log_Postfix_236);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Log_uScriptAct_Log_236.Out;
         
         if ( test_0 == true )
         {
            Relay_StopEmitting_237();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_StartEmitting_237()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("4c5aa3d3-a04f-4429-af9b-4d8d5b693e28", "Particles", Relay_StartEmitting_237)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Particles_uScriptAct_Particles_237.StartEmitting(logic_uScriptAct_Particles_Target_237, logic_uScriptAct_Particles_ClearParticles_237);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Particles_uScriptAct_Particles_237.Out;
         
         if ( test_0 == true )
         {
            Relay_In_238();
            Relay_In_240();
            Relay_In_241();
            Relay_In_244();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Particles.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_StopEmitting_237()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("4c5aa3d3-a04f-4429-af9b-4d8d5b693e28", "Particles", Relay_StopEmitting_237)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Particles_uScriptAct_Particles_237.StopEmitting(logic_uScriptAct_Particles_Target_237, logic_uScriptAct_Particles_ClearParticles_237);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Particles_uScriptAct_Particles_237.Out;
         
         if ( test_0 == true )
         {
            Relay_In_238();
            Relay_In_240();
            Relay_In_241();
            Relay_In_244();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Particles.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_238()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("90e34b8f-a685-48e2-8585-c750c647b298", "Add Force", Relay_In_238)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddForce_uScriptAct_AddForce_238.In(logic_uScriptAct_AddForce_Target_238, logic_uScriptAct_AddForce_Force_238, logic_uScriptAct_AddForce_Scale_238, logic_uScriptAct_AddForce_UseForceMode_238, logic_uScriptAct_AddForce_ForceModeType_238);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddForce_uScriptAct_AddForce_238.Out;
         
         if ( test_0 == true )
         {
            Relay_In_242();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Force.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_239()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5d4b0741-1c65-4ce9-9af0-493a8b5bd6d2", "Add Relative Force", Relay_In_239)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddRelativeForce_uScriptAct_AddRelativeForce_239.In(logic_uScriptAct_AddRelativeForce_Target_239, logic_uScriptAct_AddRelativeForce_Force_239, logic_uScriptAct_AddRelativeForce_Scale_239, logic_uScriptAct_AddRelativeForce_UseForceMode_239, logic_uScriptAct_AddRelativeForce_ForceModeType_239);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddRelativeForce_uScriptAct_AddRelativeForce_239.Out;
         
         if ( test_0 == true )
         {
            Relay_In_243();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Relative Force.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_240()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("281df410-5eed-43ac-8783-cc8b97123db3", "Add Relative Torque", Relay_In_240)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddRelativeTorque_uScriptAct_AddRelativeTorque_240.In(logic_uScriptAct_AddRelativeTorque_Target_240, logic_uScriptAct_AddRelativeTorque_Force_240, logic_uScriptAct_AddRelativeTorque_Scale_240, logic_uScriptAct_AddRelativeTorque_UseForceMode_240, logic_uScriptAct_AddRelativeTorque_ForceModeType_240);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddRelativeTorque_uScriptAct_AddRelativeTorque_240.Out;
         
         if ( test_0 == true )
         {
            Relay_In_245();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Relative Torque.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_241()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("39ba23b8-6093-4b6c-bbda-326c16a0a410", "Add Torque", Relay_In_241)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddTorque_uScriptAct_AddTorque_241.In(logic_uScriptAct_AddTorque_Target_241, logic_uScriptAct_AddTorque_Force_241, logic_uScriptAct_AddTorque_Scale_241, logic_uScriptAct_AddTorque_UseForceMode_241, logic_uScriptAct_AddTorque_ForceModeType_241);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddTorque_uScriptAct_AddTorque_241.Out;
         
         if ( test_0 == true )
         {
            Relay_In_246();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Torque.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_242()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("28c70167-c348-4474-81ed-35324ddd296b", "Check Layer Collision", Relay_In_242)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_CheckLayerCollision_uScriptAct_CheckLayerCollision_242.In(logic_uScriptAct_CheckLayerCollision_LayerA_242, logic_uScriptAct_CheckLayerCollision_LayerB_242, out logic_uScriptAct_CheckLayerCollision_Result_242);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CheckLayerCollision_uScriptAct_CheckLayerCollision_242.Out;
         
         if ( test_0 == true )
         {
            Relay_In_249();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Check Layer Collision.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_243()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("44a07c8f-d3d5-46cc-a15c-df8512e30058", "Get Gravity", Relay_In_243)) return; 
         {
            {
            }
         }
         logic_uScriptAct_GetGravity_uScriptAct_GetGravity_243.In(out logic_uScriptAct_GetGravity_Gravity_243);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetGravity_uScriptAct_GetGravity_243.Out;
         
         if ( test_0 == true )
         {
            Relay_In_250();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Gravity.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_244()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("24ad29cd-75ee-45a5-920a-6d9906668316", "Get Rigidbody Velocity", Relay_In_244)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetRigidbodyVelocity_uScriptAct_GetRigidbodyVelocity_244.In(logic_uScriptAct_GetRigidbodyVelocity_Target_244, out logic_uScriptAct_GetRigidbodyVelocity_Velocity_244, out logic_uScriptAct_GetRigidbodyVelocity_Magnitude_244);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetRigidbodyVelocity_uScriptAct_GetRigidbodyVelocity_244.Out;
         
         if ( test_0 == true )
         {
            Relay_In_247();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Rigidbody Velocity.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_245()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3126d846-31b4-457c-8672-d82baf6787c0", "Ignore Collision", Relay_In_245)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_IgnoreCollision_uScriptAct_IgnoreCollision_245.In(logic_uScriptAct_IgnoreCollision_A_245, logic_uScriptAct_IgnoreCollision_B_245, logic_uScriptAct_IgnoreCollision_Ignore_245);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IgnoreCollision_uScriptAct_IgnoreCollision_245.Out;
         
         if ( test_0 == true )
         {
            Relay_In_253();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Ignore Collision.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_246()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a638bdb3-b1c0-4767-8f48-23a2dba0b6b4", "Ignore Layer Collision", Relay_In_246)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_IgnoreLayerCollision_uScriptAct_IgnoreLayerCollision_246.In(logic_uScriptAct_IgnoreLayerCollision_LayerA_246, logic_uScriptAct_IgnoreLayerCollision_LayerB_246, logic_uScriptAct_IgnoreLayerCollision_Ignore_246);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IgnoreLayerCollision_uScriptAct_IgnoreLayerCollision_246.Out;
         
         if ( test_0 == true )
         {
            Relay_In_251();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Ignore Layer Collision.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_247()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("63cc90d0-3413-4d76-ad11-ef66b145ad3d", "Raycast", Relay_In_247)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Raycast_uScriptAct_Raycast_247.In(logic_uScriptAct_Raycast_Start_247, logic_uScriptAct_Raycast_End_247, logic_uScriptAct_Raycast_layerMask_247, logic_uScriptAct_Raycast_include_247, logic_uScriptAct_Raycast_showRay_247, out logic_uScriptAct_Raycast_HitObject_247, out logic_uScriptAct_Raycast_HitDistance_247, out logic_uScriptAct_Raycast_HitLocation_247, out logic_uScriptAct_Raycast_HitNormal_247);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Raycast_uScriptAct_Raycast_247.NotObstructed;
         bool test_1 = logic_uScriptAct_Raycast_uScriptAct_Raycast_247.Obstructed;
         
         if ( test_0 == true )
         {
            Relay_In_248();
         }
         if ( test_1 == true )
         {
            Relay_In_257();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Raycast.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_248()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9d4f4e9a-aaee-48a8-9041-69f15341a6ba", "Raycast From Camera", Relay_In_248)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_RaycastFromCamera_uScriptAct_RaycastFromCamera_248.In(logic_uScriptAct_RaycastFromCamera_Camera_248, logic_uScriptAct_RaycastFromCamera_Offset_X_248, logic_uScriptAct_RaycastFromCamera_Offset_Y_248, logic_uScriptAct_RaycastFromCamera_Distance_248, logic_uScriptAct_RaycastFromCamera_layerMask_248, logic_uScriptAct_RaycastFromCamera_include_248, logic_uScriptAct_RaycastFromCamera_showRay_248, out logic_uScriptAct_RaycastFromCamera_HitObject_248, out logic_uScriptAct_RaycastFromCamera_HitDistance_248, out logic_uScriptAct_RaycastFromCamera_HitLocation_248, out logic_uScriptAct_RaycastFromCamera_HitNormal_248);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_RaycastFromCamera_uScriptAct_RaycastFromCamera_248.NotObstructed;
         bool test_1 = logic_uScriptAct_RaycastFromCamera_uScriptAct_RaycastFromCamera_248.Obstructed;
         
         if ( test_0 == true )
         {
            Relay_In_256();
         }
         if ( test_1 == true )
         {
            Relay_In_256();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Raycast From Camera.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_249()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6ccc1cbd-887c-49c6-9c31-de9903652870", "Raycast From Mouse Cursor", Relay_In_249)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_RaycastFromCursor_uScriptAct_RaycastFromCursor_249.In(logic_uScriptAct_RaycastFromCursor_Camera_249, logic_uScriptAct_RaycastFromCursor_Distance_249, logic_uScriptAct_RaycastFromCursor_layerMask_249, logic_uScriptAct_RaycastFromCursor_include_249, logic_uScriptAct_RaycastFromCursor_showRay_249, out logic_uScriptAct_RaycastFromCursor_HitObject_249, out logic_uScriptAct_RaycastFromCursor_HitDistance_249, out logic_uScriptAct_RaycastFromCursor_HitLocation_249, out logic_uScriptAct_RaycastFromCursor_HitNormal_249);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_RaycastFromCursor_uScriptAct_RaycastFromCursor_249.NotObstructed;
         bool test_1 = logic_uScriptAct_RaycastFromCursor_uScriptAct_RaycastFromCursor_249.Obstructed;
         
         if ( test_0 == true )
         {
            Relay_In_254();
         }
         if ( test_1 == true )
         {
            Relay_In_254();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Raycast From Mouse Cursor.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_250()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c01c13e7-d037-442a-a391-0fc9b1476aca", "Raycast From Screen Point", Relay_In_250)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_RaycastFromScreenPoint_uScriptAct_RaycastFromScreenPoint_250.In(logic_uScriptAct_RaycastFromScreenPoint_Camera_250, logic_uScriptAct_RaycastFromScreenPoint_ScreenPosition_250, logic_uScriptAct_RaycastFromScreenPoint_Distance_250, logic_uScriptAct_RaycastFromScreenPoint_layerMask_250, logic_uScriptAct_RaycastFromScreenPoint_include_250, logic_uScriptAct_RaycastFromScreenPoint_showRay_250, out logic_uScriptAct_RaycastFromScreenPoint_HitObject_250, out logic_uScriptAct_RaycastFromScreenPoint_HitDistance_250, out logic_uScriptAct_RaycastFromScreenPoint_HitLocation_250, out logic_uScriptAct_RaycastFromScreenPoint_HitNormal_250);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_RaycastFromScreenPoint_uScriptAct_RaycastFromScreenPoint_250.NotObstructed;
         bool test_1 = logic_uScriptAct_RaycastFromScreenPoint_uScriptAct_RaycastFromScreenPoint_250.Obstructed;
         
         if ( test_0 == true )
         {
            Relay_In_254();
         }
         if ( test_1 == true )
         {
            Relay_In_254();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Raycast From Screen Point.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_251()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b2c7c824-7c4a-409f-a634-83bbc1be5bf0", "Set Gravity", Relay_In_251)) return; 
         {
            {
            }
         }
         logic_uScriptAct_SetGravity_uScriptAct_SetGravity_251.In(logic_uScriptAct_SetGravity_Gravity_251);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetGravity_uScriptAct_SetGravity_251.Out;
         
         if ( test_0 == true )
         {
            Relay_In_252();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Gravity.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_252()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f4667e29-c6a8-4eb5-b949-13f5ae7355e7", "Set Joint Drive", Relay_In_252)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetJointDrive_uScriptAct_SetJointDrive_252.In(logic_uScriptAct_SetJointDrive_mode_252, logic_uScriptAct_SetJointDrive_positionSpring_252, logic_uScriptAct_SetJointDrive_positionDamper_252, logic_uScriptAct_SetJointDrive_maximumForce_252, out logic_uScriptAct_SetJointDrive_jointDrive_252);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetJointDrive_uScriptAct_SetJointDrive_252.Out;
         
         if ( test_0 == true )
         {
            Relay_In_256();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Joint Drive.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_253()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("4ff0bd6d-edf1-4df3-89d0-d3d3e6121217", "Set Rigidbody Velocity", Relay_In_253)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRigidbodyVelocity_uScriptAct_SetRigidbodyVelocity_253.In(logic_uScriptAct_SetRigidbodyVelocity_Target_253, logic_uScriptAct_SetRigidbodyVelocity_Velocity_253);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRigidbodyVelocity_uScriptAct_SetRigidbodyVelocity_253.Out;
         
         if ( test_0 == true )
         {
            Relay_In_255();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Rigidbody Velocity.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_254()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("48068d9f-2c4d-4557-aa00-12d1a241be80", "Log", Relay_In_254)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_254.In(logic_uScriptAct_Log_Prefix_254, logic_uScriptAct_Log_Target_254, logic_uScriptAct_Log_Postfix_254);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_255()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f873fa0e-cbc7-454a-99b5-339bfc9ff250", "Log", Relay_In_255)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_255.In(logic_uScriptAct_Log_Prefix_255, logic_uScriptAct_Log_Target_255, logic_uScriptAct_Log_Postfix_255);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_256()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("677b433e-35aa-4769-88aa-88dd4add8aed", "Log", Relay_In_256)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_256.In(logic_uScriptAct_Log_Prefix_256, logic_uScriptAct_Log_Target_256, logic_uScriptAct_Log_Postfix_256);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_257()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("af40b834-eeb5-4097-b324-cc40654dac4a", "Log", Relay_In_257)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_257.In(logic_uScriptAct_Log_Prefix_257, logic_uScriptAct_Log_Target_257, logic_uScriptAct_Log_Postfix_257);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_258()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("32d68b19-bc77-481c-8868-cebb4824c64c", "Get Mouse Position", Relay_In_258)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetMousePosition_uScriptAct_GetMousePosition_258.In(logic_uScriptAct_GetMousePosition_InvertY_258, out logic_uScriptAct_GetMousePosition_positionV2_258, out logic_uScriptAct_GetMousePosition_XPosition_258, out logic_uScriptAct_GetMousePosition_YPosition_258, out logic_uScriptAct_GetMousePosition_position_258);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetMousePosition_uScriptAct_GetMousePosition_258.Out;
         
         if ( test_0 == true )
         {
            Relay_In_259();
            Relay_In_264();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Mouse Position.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_259()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c582ae9d-8d21-42a9-b299-6faa574bdbc1", "Get Screen Size", Relay_In_259)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetScreenSize_uScriptAct_GetScreenSize_259.In(out logic_uScriptAct_GetScreenSize_ScreenWidth_259, out logic_uScriptAct_GetScreenSize_ScreenHeight_259, out logic_uScriptAct_GetScreenSize_fScreenWidth_259, out logic_uScriptAct_GetScreenSize_fScreenHeight_259, out logic_uScriptAct_GetScreenSize_ScreenRect_259, out logic_uScriptAct_GetScreenSize_ScreenCenter_259);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetScreenSize_uScriptAct_GetScreenSize_259.Out;
         
         if ( test_0 == true )
         {
            Relay_In_260();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Screen Size.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_260()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f5d24118-0e58-46d2-a206-58eeca7a25bc", "Lock Mouse Cursor", Relay_In_260)) return; 
         {
            {
            }
         }
         logic_uScriptAct_LockMouseCursor_uScriptAct_LockMouseCursor_260.In(logic_uScriptAct_LockMouseCursor_Lock_260);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LockMouseCursor_uScriptAct_LockMouseCursor_260.Out;
         
         if ( test_0 == true )
         {
            Relay_In_261();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Lock Mouse Cursor.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_261()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7eb0908a-ec00-4978-ae03-1cbdac5287b5", "Show Mouse Cursor", Relay_In_261)) return; 
         {
            {
            }
         }
         logic_uScriptAct_ShowMouseCursor_uScriptAct_ShowMouseCursor_261.In(logic_uScriptAct_ShowMouseCursor_show_261);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ShowMouseCursor_uScriptAct_ShowMouseCursor_261.Out;
         
         if ( test_0 == true )
         {
            Relay_In_262();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Show Mouse Cursor.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_262()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3481b824-42df-4e80-8883-b553db7b2770", "Log", Relay_In_262)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_262.In(logic_uScriptAct_Log_Prefix_262, logic_uScriptAct_Log_Target_262, logic_uScriptAct_Log_Postfix_262);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_264()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c82e8660-dd12-41dc-a5e8-8a76fb501d30", "Count Time", Relay_In_264)) return; 
         {
            {
            }
         }
         logic_uScriptAct_CountTime_uScriptAct_CountTime_264.In(out logic_uScriptAct_CountTime_Seconds_264);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CountTime_uScriptAct_CountTime_264.Out;
         
         if ( test_0 == true )
         {
            Relay_In_265();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Count Time.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_264()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c82e8660-dd12-41dc-a5e8-8a76fb501d30", "Count Time", Relay_Stop_264)) return; 
         {
            {
            }
         }
         logic_uScriptAct_CountTime_uScriptAct_CountTime_264.Stop(out logic_uScriptAct_CountTime_Seconds_264);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CountTime_uScriptAct_CountTime_264.Out;
         
         if ( test_0 == true )
         {
            Relay_In_265();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Count Time.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_265()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5f81a775-60b8-44de-b4f3-0a1f0f1ff84d", "Delay", Relay_In_265)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Delay_uScriptAct_Delay_265.In(logic_uScriptAct_Delay_Duration_265, logic_uScriptAct_Delay_SingleFrame_265);
         logic_uScriptAct_Delay_DrivenDelay_265 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Delay_uScriptAct_Delay_265.Immediate;
         bool test_1 = logic_uScriptAct_Delay_uScriptAct_Delay_265.AfterDelay;
         
         if ( test_0 == true )
         {
            Relay_In_267();
         }
         if ( test_1 == true )
         {
            Relay_In_266();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Delay.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_265()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5f81a775-60b8-44de-b4f3-0a1f0f1ff84d", "Delay", Relay_Stop_265)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Delay_uScriptAct_Delay_265.Stop(logic_uScriptAct_Delay_Duration_265, logic_uScriptAct_Delay_SingleFrame_265);
         logic_uScriptAct_Delay_DrivenDelay_265 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Delay_uScriptAct_Delay_265.Immediate;
         bool test_1 = logic_uScriptAct_Delay_uScriptAct_Delay_265.AfterDelay;
         
         if ( test_0 == true )
         {
            Relay_In_267();
         }
         if ( test_1 == true )
         {
            Relay_In_266();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Delay.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_DrivenDelay_265( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Delay_DrivenDelay_265 = logic_uScriptAct_Delay_uScriptAct_Delay_265.DrivenDelay();
         if ( true == logic_uScriptAct_Delay_DrivenDelay_265 )
         {
            if ( logic_uScriptAct_Delay_uScriptAct_Delay_265.Immediate == true )
            {
               Relay_In_267();
            }
            if ( logic_uScriptAct_Delay_uScriptAct_Delay_265.AfterDelay == true )
            {
               Relay_In_266();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Delay.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_In_266()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("993139b0-5418-4b99-b153-02abb694647e", "Get Delta Time", Relay_In_266)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetDeltaTime_uScriptAct_GetDeltaTime_266.In(out logic_uScriptAct_GetDeltaTime_DeltaTime_266, out logic_uScriptAct_GetDeltaTime_SmoothDeltaTime_266, out logic_uScriptAct_GetDeltaTime_FixedDeltaTime_266);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetDeltaTime_uScriptAct_GetDeltaTime_266.Out;
         
         if ( test_0 == true )
         {
            Relay_In_268();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Delta Time.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_267()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e82d94ff-4ff6-43f0-8fbc-1378d9c71caf", "Get Game Time", Relay_In_267)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetGameTime_uScriptAct_GetGameTime_267.In(out logic_uScriptAct_GetGameTime_CurrentScale_267, out logic_uScriptAct_GetGameTime_FixedDelta_267, out logic_uScriptAct_GetGameTime_MaxAllowedTimestep_267);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetGameTime_uScriptAct_GetGameTime_267.Out;
         
         if ( test_0 == true )
         {
            Relay_In_269();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Game Time.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_268()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("02b9ae86-fb6e-4c39-95bd-cc57cceae280", "Get Run Time", Relay_In_268)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_GetRunTime_uScriptAct_GetRunTime_268.In(out logic_uScriptAct_GetRunTime_RunTime_268, out logic_uScriptAct_GetRunTime_FixedRunTime_268);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetRunTime_uScriptAct_GetRunTime_268.Out;
         
         if ( test_0 == true )
         {
            Relay_In_271();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Run Time.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_269()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("baabf191-c309-4743-a640-72d746f4ff78", "Get System Date", Relay_In_269)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetSystemDate_uScriptAct_GetSystemDate_269.In(out logic_uScriptAct_GetSystemDate_FullDate_269, out logic_uScriptAct_GetSystemDate_Day_269, out logic_uScriptAct_GetSystemDate_DayOfMonth_269, out logic_uScriptAct_GetSystemDate_Month_269, out logic_uScriptAct_GetSystemDate_Year_269);
         local_272_System_String = logic_uScriptAct_GetSystemDate_FullDate_269;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetSystemDate_uScriptAct_GetSystemDate_269.Out;
         
         if ( test_0 == true )
         {
            Relay_In_270();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get System Date.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_270()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2b29b06f-5b3c-40e2-b41b-444afccc23c3", "Get System Time", Relay_In_270)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetSystemTime_uScriptAct_GetSystemTime_270.In(out logic_uScriptAct_GetSystemTime_FullTime_270, out logic_uScriptAct_GetSystemTime_FullTimeUTC_270, out logic_uScriptAct_GetSystemTime_Hour_270, out logic_uScriptAct_GetSystemTime_Minute_270, out logic_uScriptAct_GetSystemTime_Second_270, out logic_uScriptAct_GetSystemTime_Millisecond_270);
         local_272_System_String = logic_uScriptAct_GetSystemTime_FullTime_270;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetSystemTime_uScriptAct_GetSystemTime_270.Out;
         
         if ( test_0 == true )
         {
            Relay_In_273();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get System Time.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_271()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("46b10fa0-3297-4868-b6f3-f805fe8b9f93", "Set Game Time", Relay_In_271)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetGameTime_uScriptAct_SetGameTime_271.In(logic_uScriptAct_SetGameTime_TimeScale_271, logic_uScriptAct_SetGameTime_FixedTimestep_271, logic_uScriptAct_SetGameTime_MaxAllowedTimestep_271);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetGameTime_uScriptAct_SetGameTime_271.Out;
         
         if ( test_0 == true )
         {
            Relay_In_273();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Game Time.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_273()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("0be7ed4d-8e1c-4a00-a52e-0ba1ddca9aed", "Log", Relay_In_273)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_273.In(logic_uScriptAct_Log_Prefix_273, logic_uScriptAct_Log_Target_273, logic_uScriptAct_Log_Postfix_273);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_KeyEvent_274()
   {
      if (true == CheckDebugBreak("9231de05-14b5-4fd1-b585-09585d31b2fa", "Input Events", Relay_KeyEvent_274)) return; 
      Relay_In_276();
   }
   
   void Relay_In_276()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d698528e-6ac9-44d7-85ea-7cc1bedd377c", "Input Events Filter", Relay_In_276)) return; 
         {
            {
               logic_uScriptAct_OnInputEventFilter_KeyCode_276 = local_275_UnityEngine_KeyCode;
               
            }
         }
         logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_276.In(logic_uScriptAct_OnInputEventFilter_KeyCode_276);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_276.KeyDown;
         bool test_1 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_276.KeyHeld;
         bool test_2 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_276.KeyUp;
         
         if ( test_0 == true )
         {
            Relay_Toggle_277();
         }
         if ( test_1 == true )
         {
            Relay_TurnOn_277();
         }
         if ( test_2 == true )
         {
            Relay_TurnOff_277();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Input Events Filter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnOut_277()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb539336-ac72-4e19-8b15-9076d98bf23e", "Toggle", Relay_OnOut_277)) return; 
         Relay_TurnOff_279();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OffOut_277()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb539336-ac72-4e19-8b15-9076d98bf23e", "Toggle", Relay_OffOut_277)) return; 
         Relay_Toggle_279();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_ToggleOut_277()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb539336-ac72-4e19-8b15-9076d98bf23e", "Toggle", Relay_ToggleOut_277)) return; 
         Relay_Toggle_278();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_TurnOn_277()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb539336-ac72-4e19-8b15-9076d98bf23e", "Toggle", Relay_TurnOn_277)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Toggle_uScriptAct_Toggle_277.TurnOn(logic_uScriptAct_Toggle_Target_277, logic_uScriptAct_Toggle_IgnoreChildren_277);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Toggle_uScriptAct_Toggle_277.Out;
         
         if ( test_0 == true )
         {
            Relay_TurnOn_279();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_TurnOff_277()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb539336-ac72-4e19-8b15-9076d98bf23e", "Toggle", Relay_TurnOff_277)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Toggle_uScriptAct_Toggle_277.TurnOff(logic_uScriptAct_Toggle_Target_277, logic_uScriptAct_Toggle_IgnoreChildren_277);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Toggle_uScriptAct_Toggle_277.Out;
         
         if ( test_0 == true )
         {
            Relay_TurnOn_279();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Toggle_277()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb539336-ac72-4e19-8b15-9076d98bf23e", "Toggle", Relay_Toggle_277)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Toggle_uScriptAct_Toggle_277.Toggle(logic_uScriptAct_Toggle_Target_277, logic_uScriptAct_Toggle_IgnoreChildren_277);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Toggle_uScriptAct_Toggle_277.Out;
         
         if ( test_0 == true )
         {
            Relay_TurnOn_279();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Toggle_278()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("0b85b15b-ce87-4439-a8b5-33bc4a581249", "Toggle Bool", Relay_Toggle_278)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_ToggleBool_uScriptAct_ToggleBool_278.Toggle(logic_uScriptAct_ToggleBool_Target_278, out logic_uScriptAct_ToggleBool_Result_278);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ToggleBool_uScriptAct_ToggleBool_278.Out;
         
         if ( test_0 == true )
         {
            Relay_In_280();
            Relay_False_286();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle Bool.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OnOut_279()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("904c0e80-e329-4efb-aa22-e963d3667d16", "Toggle Component", Relay_OnOut_279)) return; 
         Relay_In_280();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle Component.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_OffOut_279()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("904c0e80-e329-4efb-aa22-e963d3667d16", "Toggle Component", Relay_OffOut_279)) return; 
         Relay_In_280();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle Component.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_ToggleOut_279()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("904c0e80-e329-4efb-aa22-e963d3667d16", "Toggle Component", Relay_ToggleOut_279)) return; 
         Relay_In_280();
         Relay_True_286();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle Component.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_TurnOn_279()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("904c0e80-e329-4efb-aa22-e963d3667d16", "Toggle Component", Relay_TurnOn_279)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.TurnOn(logic_uScriptAct_ToggleComponent_Target_279, logic_uScriptAct_ToggleComponent_ComponentName_279);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.Out;
         
         if ( test_0 == true )
         {
            Relay_In_280();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle Component.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_TurnOff_279()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("904c0e80-e329-4efb-aa22-e963d3667d16", "Toggle Component", Relay_TurnOff_279)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.TurnOff(logic_uScriptAct_ToggleComponent_Target_279, logic_uScriptAct_ToggleComponent_ComponentName_279);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.Out;
         
         if ( test_0 == true )
         {
            Relay_In_280();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle Component.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Toggle_279()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("904c0e80-e329-4efb-aa22-e963d3667d16", "Toggle Component", Relay_Toggle_279)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.Toggle(logic_uScriptAct_ToggleComponent_Target_279, logic_uScriptAct_ToggleComponent_ComponentName_279);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ToggleComponent_uScriptAct_ToggleComponent_279.Out;
         
         if ( test_0 == true )
         {
            Relay_In_280();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Toggle Component.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_280()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("81f637bb-f48e-4246-ba65-851003d87a07", "Log", Relay_In_280)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_280.In(logic_uScriptAct_Log_Prefix_280, logic_uScriptAct_Log_Target_280, logic_uScriptAct_Log_Postfix_280);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Log_uScriptAct_Log_280.Out;
         
         if ( test_0 == true )
         {
            Relay_In_281();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_281()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9b9d6d2f-6368-4600-b059-277e8f1c65d3", "Capture Screenshot", Relay_In_281)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_CaptureScreenshot_uScriptAct_CaptureScreenshot_281.In(logic_uScriptAct_CaptureScreenshot_FileName_281, logic_uScriptAct_CaptureScreenshot_Path_281, logic_uScriptAct_CaptureScreenshot_RelativeToDataFolder_281, logic_uScriptAct_CaptureScreenshot_AppendNumber_281, out logic_uScriptAct_CaptureScreenshot_FileSaved_281);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CaptureScreenshot_uScriptAct_CaptureScreenshot_281.Out;
         
         if ( test_0 == true )
         {
            Relay_In_282();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Capture Screenshot.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_282()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b87fcfc1-8cbd-47a7-9498-ca404600536a", "Get Object From List", Relay_In_282)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetObjectFromList_uScriptAct_GetObjectFromList_282.In(logic_uScriptAct_GetObjectFromList_list_282, logic_uScriptAct_GetObjectFromList_index_282, out logic_uScriptAct_GetObjectFromList_item_282);
         local_301_System_Object = logic_uScriptAct_GetObjectFromList_item_282;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetObjectFromList_uScriptAct_GetObjectFromList_282.Out;
         
         if ( test_0 == true )
         {
            Relay_In_284();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Object From List.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_283()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("275d6a26-6c84-40fc-bd72-284d903d1383", "Output FPS", Relay_In_283)) return; 
         {
            {
            }
         }
         logic_uScriptAct_OutputFramesPerSecond_uScriptAct_OutputFramesPerSecond_283.In(out logic_uScriptAct_OutputFramesPerSecond_FPS_283);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OutputFramesPerSecond_uScriptAct_OutputFramesPerSecond_283.Out;
         
         if ( test_0 == true )
         {
            Relay_In_285();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Output FPS.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_284()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b4293836-bebb-4b2c-9bbd-c994ef3818e1", "Shuffle List", Relay_In_284)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_ShuffleList_uScriptAct_ShuffleList_284.In(logic_uScriptAct_ShuffleList_list_284, out logic_uScriptAct_ShuffleList_shuffled_284);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ShuffleList_uScriptAct_ShuffleList_284.Out;
         
         if ( test_0 == true )
         {
            Relay_In_283();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Shuffle List.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_285()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d9d12d27-aa80-4011-86ea-d5401aa1aa65", "Log", Relay_In_285)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_285.In(logic_uScriptAct_Log_Prefix_285, logic_uScriptAct_Log_Target_285, logic_uScriptAct_Log_Postfix_285);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_True_286()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("faea9892-d60d-4ea3-8b21-d167aa0e6375", "Set Bool", Relay_True_286)) return; 
         {
            {
            }
         }
         logic_uScriptAct_SetBool_uScriptAct_SetBool_286.True(out logic_uScriptAct_SetBool_Target_286);
         local_287_System_Boolean = logic_uScriptAct_SetBool_Target_286;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetBool_uScriptAct_SetBool_286.Out;
         
         if ( test_0 == true )
         {
            Relay_In_288();
            Relay_In_297();
            Relay_In_304();
            Relay_In_317();
            Relay_In_326();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Bool.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_False_286()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("faea9892-d60d-4ea3-8b21-d167aa0e6375", "Set Bool", Relay_False_286)) return; 
         {
            {
            }
         }
         logic_uScriptAct_SetBool_uScriptAct_SetBool_286.False(out logic_uScriptAct_SetBool_Target_286);
         local_287_System_Boolean = logic_uScriptAct_SetBool_Target_286;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetBool_uScriptAct_SetBool_286.Out;
         
         if ( test_0 == true )
         {
            Relay_In_288();
            Relay_In_297();
            Relay_In_304();
            Relay_In_317();
            Relay_In_326();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Bool.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_288()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("0e960492-118e-454a-95c5-b701167cd517", "Set Random Bool", Relay_In_288)) return; 
         {
            {
            }
         }
         logic_uScriptAct_SetRandomBool_uScriptAct_SetRandomBool_288.In(out logic_uScriptAct_SetRandomBool_TargetBool_288);
         local_287_System_Boolean = logic_uScriptAct_SetRandomBool_TargetBool_288;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomBool_uScriptAct_SetRandomBool_288.Out;
         
         if ( test_0 == true )
         {
            Relay_In_289();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Bool.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_289()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8e60e83c-5cb9-42df-85ab-09097fb396f4", "Get Components (Color)", Relay_In_289)) return; 
         {
            {
               logic_uScriptAct_GetComponentsColor_InputColor_289 = local_294_UnityEngine_Color;
               
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetComponentsColor_uScriptAct_GetComponentsColor_289.In(logic_uScriptAct_GetComponentsColor_InputColor_289, out logic_uScriptAct_GetComponentsColor_Red_289, out logic_uScriptAct_GetComponentsColor_Green_289, out logic_uScriptAct_GetComponentsColor_Blue_289, out logic_uScriptAct_GetComponentsColor_Alpha_289);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetComponentsColor_uScriptAct_GetComponentsColor_289.Out;
         
         if ( test_0 == true )
         {
            Relay_In_292();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Components (Color).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_290()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("23d25c3e-b612-42cc-a7ed-8114ea5aaa9b", "Set Color", Relay_In_290)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetColor_uScriptAct_SetColor_290.In(logic_uScriptAct_SetColor_Value_290, out logic_uScriptAct_SetColor_TargetColor_290);
         local_294_UnityEngine_Color = logic_uScriptAct_SetColor_TargetColor_290;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetColor_uScriptAct_SetColor_290.Out;
         
         if ( test_0 == true )
         {
            Relay_In_291();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_291()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("cb971c9b-f485-4f77-9700-8a55dc03c798", "Set Color Alpha", Relay_In_291)) return; 
         {
            {
               logic_uScriptAct_SetColorAlpha_Value_291 = local_294_UnityEngine_Color;
               
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetColorAlpha_uScriptAct_SetColorAlpha_291.In(logic_uScriptAct_SetColorAlpha_Value_291, logic_uScriptAct_SetColorAlpha_Alpha_291, logic_uScriptAct_SetColorAlpha_Use8bitRange_291, out logic_uScriptAct_SetColorAlpha_TargetColor_291);
         local_296_UnityEngine_Color = logic_uScriptAct_SetColorAlpha_TargetColor_291;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetColorAlpha_uScriptAct_SetColorAlpha_291.Out;
         
         if ( test_0 == true )
         {
            Relay_In_293();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Color Alpha.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_292()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("35428afc-9887-40dc-b414-86410fa3521e", "Set Components (Color)", Relay_In_292)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetComponentsColor_uScriptAct_SetComponentsColor_292.In(logic_uScriptAct_SetComponentsColor_RedValue_292, logic_uScriptAct_SetComponentsColor_GreenValue_292, logic_uScriptAct_SetComponentsColor_BlueValue_292, logic_uScriptAct_SetComponentsColor_AlphaValue_292, logic_uScriptAct_SetComponentsColor_Use8bitRange_292, out logic_uScriptAct_SetComponentsColor_TargetColor_292);
         local_294_UnityEngine_Color = logic_uScriptAct_SetComponentsColor_TargetColor_292;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetComponentsColor_uScriptAct_SetComponentsColor_292.Out;
         
         if ( test_0 == true )
         {
            Relay_In_290();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Components (Color).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_293()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("21803b3d-4dee-4180-a383-51f9fcd99eea", "Set Random Color", Relay_In_293)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomColor_uScriptAct_SetRandomColor_293.In(logic_uScriptAct_SetRandomColor_RedMin_293, logic_uScriptAct_SetRandomColor_RedMax_293, logic_uScriptAct_SetRandomColor_GreenMin_293, logic_uScriptAct_SetRandomColor_GreenMax_293, logic_uScriptAct_SetRandomColor_BlueMin_293, logic_uScriptAct_SetRandomColor_BlueMax_293, logic_uScriptAct_SetRandomColor_AlphaMin_293, logic_uScriptAct_SetRandomColor_AlphaMax_293, out logic_uScriptAct_SetRandomColor_TargetColor_293);
         local_296_UnityEngine_Color = logic_uScriptAct_SetRandomColor_TargetColor_293;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomColor_uScriptAct_SetRandomColor_293.Out;
         
         if ( test_0 == true )
         {
            Relay_In_295();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_295()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6fe32e49-6d6a-487b-9635-2d34b38d12db", "Log", Relay_In_295)) return; 
         {
            {
            }
            {
               List<System.Object> properties = new List<System.Object>();
               properties.Add((System.Object)local_296_UnityEngine_Color);
               logic_uScriptAct_Log_Target_295 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_295.In(logic_uScriptAct_Log_Prefix_295, logic_uScriptAct_Log_Target_295, logic_uScriptAct_Log_Postfix_295);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_297()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b4c67654-21cc-478b-b59e-461034ccfa8d", "Set Float", Relay_In_297)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetFloat_uScriptAct_SetFloat_297.In(logic_uScriptAct_SetFloat_Value_297, out logic_uScriptAct_SetFloat_Target_297);
         local_302_System_Single = logic_uScriptAct_SetFloat_Target_297;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetFloat_uScriptAct_SetFloat_297.Out;
         
         if ( test_0 == true )
         {
            Relay_In_298();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_298()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b5c2f0e5-7bde-4924-85fe-263d7787f94b", "Set Random Float", Relay_In_298)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomFloat_uScriptAct_SetRandomFloat_298.In(logic_uScriptAct_SetRandomFloat_Min_298, logic_uScriptAct_SetRandomFloat_Max_298, out logic_uScriptAct_SetRandomFloat_TargetFloat_298);
         local_302_System_Single = logic_uScriptAct_SetRandomFloat_TargetFloat_298;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomFloat_uScriptAct_SetRandomFloat_298.Out;
         
         if ( test_0 == true )
         {
            Relay_In_299();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_299()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1fc9ef24-ab88-4e4f-9805-f902e4c40947", "Set GameObject", Relay_In_299)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetGameObject_uScriptAct_SetGameObject_299.In(logic_uScriptAct_SetGameObject_Value_299, out logic_uScriptAct_SetGameObject_TargetGameObject_299);
         local_303_UnityEngine_GameObject = logic_uScriptAct_SetGameObject_TargetGameObject_299;
         {
            //if our game object reference was changed then we need to reset event listeners
            if ( local_303_UnityEngine_GameObject_previous != local_303_UnityEngine_GameObject || false == m_RegisteredForEvents )
            {
               //tear down old listeners
               
               local_303_UnityEngine_GameObject_previous = local_303_UnityEngine_GameObject;
               
               //setup new listeners
            }
         }
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetGameObject_uScriptAct_SetGameObject_299.Out;
         
         if ( test_0 == true )
         {
            Relay_In_300();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set GameObject.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_300()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("70e50d20-09d9-4986-a7f5-268e4b5a2aef", "Set Random GameObject", Relay_In_300)) return; 
         {
            {
               List<UnityEngine.GameObject> properties = new List<UnityEngine.GameObject>();
               {
                  //if our game object reference was changed then we need to reset event listeners
                  if ( local_303_UnityEngine_GameObject_previous != local_303_UnityEngine_GameObject || false == m_RegisteredForEvents )
                  {
                     //tear down old listeners
                     
                     local_303_UnityEngine_GameObject_previous = local_303_UnityEngine_GameObject;
                     
                     //setup new listeners
                  }
               }
               properties.Add((UnityEngine.GameObject)local_303_UnityEngine_GameObject);
               logic_uScriptAct_SetRandomGameObject_ObjectSet_300 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_SetRandomGameObject_uScriptAct_SetRandomGameObject_300.In(logic_uScriptAct_SetRandomGameObject_ObjectSet_300, out logic_uScriptAct_SetRandomGameObject_TargetGameObject_300);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomGameObject_uScriptAct_SetRandomGameObject_300.Out;
         
         if ( test_0 == true )
         {
            Relay_In_306();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random GameObject.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_304()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("55f198e2-0547-4565-948f-83c2b0145dcf", "Set Int", Relay_In_304)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetInt_uScriptAct_SetInt_304.In(logic_uScriptAct_SetInt_Value_304, out logic_uScriptAct_SetInt_Target_304);
         local_307_System_Int32 = logic_uScriptAct_SetInt_Target_304;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetInt_uScriptAct_SetInt_304.Out;
         
         if ( test_0 == true )
         {
            Relay_In_305();
            Relay_In_310();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_305()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("950079ac-2899-4bab-8afd-37a4625f2762", "Set Random Int", Relay_In_305)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomInt_uScriptAct_SetRandomInt_305.In(logic_uScriptAct_SetRandomInt_Min_305, logic_uScriptAct_SetRandomInt_Max_305, out logic_uScriptAct_SetRandomInt_TargetInt_305);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomInt_uScriptAct_SetRandomInt_305.Out;
         
         if ( test_0 == true )
         {
            Relay_In_308();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_306()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b0e6c90f-d130-4e51-be8a-d367787e443d", "Log", Relay_In_306)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_306.In(logic_uScriptAct_Log_Prefix_306, logic_uScriptAct_Log_Target_306, logic_uScriptAct_Log_Postfix_306);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_308()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b55851d6-ccae-4498-b90b-985d28ad6f8f", "Set Quaternion", Relay_In_308)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetQuaternion_uScriptAct_SetQuaternion_308.In(logic_uScriptAct_SetQuaternion_Value_308, out logic_uScriptAct_SetQuaternion_TargetQuaternion_308);
         local_309_UnityEngine_Quaternion = logic_uScriptAct_SetQuaternion_TargetQuaternion_308;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetQuaternion_uScriptAct_SetQuaternion_308.Out;
         
         if ( test_0 == true )
         {
            Relay_In_306();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Quaternion.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_310()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("74a4051c-480c-4c61-b740-909bb71b8795", "Create Relative Rect", Relay_In_310)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_CreateRelativeRect_uScriptAct_CreateRelativeRect_310.In(logic_uScriptAct_CreateRelativeRect_Target_310, logic_uScriptAct_CreateRelativeRect_RectWidth_310, logic_uScriptAct_CreateRelativeRect_RectHeight_310, logic_uScriptAct_CreateRelativeRect_RectPosition_310, logic_uScriptAct_CreateRelativeRect_xOffset_310, logic_uScriptAct_CreateRelativeRect_yOffset_310, out logic_uScriptAct_CreateRelativeRect_OutputRect_310);
         local_315_UnityEngine_Rect = logic_uScriptAct_CreateRelativeRect_OutputRect_310;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CreateRelativeRect_uScriptAct_CreateRelativeRect_310.Out;
         
         if ( test_0 == true )
         {
            Relay_In_311();
            Relay_In_312();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Create Relative Rect.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_311()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b1343d1d-78b7-4436-830f-9449fe9d6354", "Create Relative Rect (Mouse)", Relay_In_311)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_CreateRelativeRectMouse_uScriptAct_CreateRelativeRectMouse_311.In(logic_uScriptAct_CreateRelativeRectMouse_RectWidth_311, logic_uScriptAct_CreateRelativeRectMouse_RectHeight_311, logic_uScriptAct_CreateRelativeRectMouse_xOffset_311, logic_uScriptAct_CreateRelativeRectMouse_yOffset_311, out logic_uScriptAct_CreateRelativeRectMouse_OutputRect_311);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CreateRelativeRectMouse_uScriptAct_CreateRelativeRectMouse_311.Out;
         
         if ( test_0 == true )
         {
            Relay_In_313();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Create Relative Rect (Mouse).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_312()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("4e06b9b0-7548-4107-81be-8936a0c758d6", "Get Components (Rect)", Relay_In_312)) return; 
         {
            {
               logic_uScriptAct_GetComponentsRect_InputRect_312 = local_315_UnityEngine_Rect;
               
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetComponentsRect_uScriptAct_GetComponentsRect_312.In(logic_uScriptAct_GetComponentsRect_InputRect_312, out logic_uScriptAct_GetComponentsRect_Left_312, out logic_uScriptAct_GetComponentsRect_Top_312, out logic_uScriptAct_GetComponentsRect_Width_312, out logic_uScriptAct_GetComponentsRect_Height_312);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetComponentsRect_uScriptAct_GetComponentsRect_312.Out;
         
         if ( test_0 == true )
         {
            Relay_In_314();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Components (Rect).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_313()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c979e6ad-390e-439a-b4e6-f85000295031", "Set Components (Rect)", Relay_In_313)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetComponentsRect_uScriptAct_SetComponentsRect_313.In(logic_uScriptAct_SetComponentsRect_Left_313, logic_uScriptAct_SetComponentsRect_Top_313, logic_uScriptAct_SetComponentsRect_Width_313, logic_uScriptAct_SetComponentsRect_Height_313, out logic_uScriptAct_SetComponentsRect_OutputRect_313);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetComponentsRect_uScriptAct_SetComponentsRect_313.Out;
         
         if ( test_0 == true )
         {
            Relay_In_316();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Components (Rect).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_314()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3b3b9988-373c-438f-bcd8-c379f8ce2eb6", "Set Rect", Relay_In_314)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRect_uScriptAct_SetRect_314.In(logic_uScriptAct_SetRect_Value_314, out logic_uScriptAct_SetRect_TargetRect_314);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRect_uScriptAct_SetRect_314.Out;
         
         if ( test_0 == true )
         {
            Relay_In_316();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Rect.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_316()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7e0a0cf7-0887-4c46-bff0-870040e832ea", "Log", Relay_In_316)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_316.In(logic_uScriptAct_Log_Prefix_316, logic_uScriptAct_Log_Target_316, logic_uScriptAct_Log_Postfix_316);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_317()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5b8ca2c6-635a-4687-91f1-2fe027a93c8f", "Change Case", Relay_In_317)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ChangeCase_uScriptAct_ChangeCase_317.In(logic_uScriptAct_ChangeCase_Target_317, logic_uScriptAct_ChangeCase_caseType_317, out logic_uScriptAct_ChangeCase_Result_317);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ChangeCase_uScriptAct_ChangeCase_317.Out;
         
         if ( test_0 == true )
         {
            Relay_In_318();
            Relay_In_323();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Change Case.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_318()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("beef8c06-be5a-40c9-9f3b-b66beae7efcb", "Concatenate", Relay_In_318)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Concatenate_uScriptAct_Concatenate_318.In(logic_uScriptAct_Concatenate_A_318, logic_uScriptAct_Concatenate_B_318, logic_uScriptAct_Concatenate_Separator_318, out logic_uScriptAct_Concatenate_Result_318);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Concatenate_uScriptAct_Concatenate_318.Out;
         
         if ( test_0 == true )
         {
            Relay_In_319();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Concatenate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_319()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9d68b467-b3b0-4d4a-bf5c-2ca7fd0b1fea", "Get String Length", Relay_In_319)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetStringLength_uScriptAct_GetStringLength_319.In(logic_uScriptAct_GetStringLength_Target_319, out logic_uScriptAct_GetStringLength_IntValue_319, out logic_uScriptAct_GetStringLength_FloatValue_319, out logic_uScriptAct_GetStringLength_StringValue_319);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetStringLength_uScriptAct_GetStringLength_319.Out;
         
         if ( test_0 == true )
         {
            Relay_In_322();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get String Length.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_320()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d2a7e077-339b-4a8f-9812-708bdda4e203", "Get Sub-String", Relay_In_320)) return; 
         {
            {
            }
            {
               logic_uScriptAct_GetSubString_StartPos_320 = local_325_System_Int32;
               
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetSubString_uScriptAct_GetSubString_320.In(logic_uScriptAct_GetSubString_Target_320, logic_uScriptAct_GetSubString_StartPos_320, logic_uScriptAct_GetSubString_StringLength_320, out logic_uScriptAct_GetSubString_Result_320);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetSubString_uScriptAct_GetSubString_320.Out;
         
         if ( test_0 == true )
         {
            Relay_In_321();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Sub-String.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_321()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c68505e1-2f7b-40f4-a001-6bc662b7494c", "Pad String", Relay_In_321)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_PadString_uScriptAct_PadString_321.In(logic_uScriptAct_PadString_Target_321, logic_uScriptAct_PadString_padSide_321, logic_uScriptAct_PadString_TotalWidth_321, logic_uScriptAct_PadString_padCharString_321, out logic_uScriptAct_PadString_Result_321);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_PadString_uScriptAct_PadString_321.Out;
         
         if ( test_0 == true )
         {
            Relay_In_316();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Pad String.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_322()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("46994833-e1fb-4046-b2e7-8853178096b4", "Replace Characters", Relay_In_322)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ReplaceCharacters_uScriptAct_ReplaceCharacters_322.In(logic_uScriptAct_ReplaceCharacters_Target_322, logic_uScriptAct_ReplaceCharacters_OldChars_322, logic_uScriptAct_ReplaceCharacters_NewChars_322, out logic_uScriptAct_ReplaceCharacters_Result_322);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ReplaceCharacters_uScriptAct_ReplaceCharacters_322.Out;
         
         if ( test_0 == true )
         {
            Relay_In_316();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Replace Characters.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_323()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ff896dae-9240-4778-96f8-3d5fb4708126", "Set String", Relay_In_323)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetString_uScriptAct_SetString_323.In(logic_uScriptAct_SetString_Value_323, logic_uScriptAct_SetString_ToUpperCase_323, logic_uScriptAct_SetString_ToLowerCase_323, logic_uScriptAct_SetString_TrimWhitespace_323, out logic_uScriptAct_SetString_Target_323);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetString_uScriptAct_SetString_323.Out;
         
         if ( test_0 == true )
         {
            Relay_In_324();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set String.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_324()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ee1e8a90-399b-4ff9-902f-c1f7676e3ae0", "Trim String", Relay_In_324)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_TrimString_uScriptAct_TrimString_324.In(logic_uScriptAct_TrimString_Target_324, logic_uScriptAct_TrimString_trimType_324, logic_uScriptAct_TrimString_trimChars_324, out logic_uScriptAct_TrimString_Result_324);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_TrimString_uScriptAct_TrimString_324.Out;
         
         if ( test_0 == true )
         {
            Relay_In_320();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Trim String.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_326()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("cfd7986d-b832-46df-ab89-be5a4f31536e", "Set Texture2D", Relay_In_326)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetTexture2D_uScriptAct_SetTexture2D_326.In(logic_uScriptAct_SetTexture2D_Value_326, out logic_uScriptAct_SetTexture2D_Target_326);
         local_331_UnityEngine_Texture2D = logic_uScriptAct_SetTexture2D_Target_326;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetTexture2D_uScriptAct_SetTexture2D_326.Out;
         
         if ( test_0 == true )
         {
            Relay_In_327();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Texture2D.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_327()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6ba5687e-17dc-47ff-b5ae-ef751d1cb542", "Get Components (Vector2)", Relay_In_327)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetComponentsVector2_uScriptAct_GetComponentsVector2_327.In(logic_uScriptAct_GetComponentsVector2_InputVector2_327, out logic_uScriptAct_GetComponentsVector2_X_327, out logic_uScriptAct_GetComponentsVector2_Y_327);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetComponentsVector2_uScriptAct_GetComponentsVector2_327.Out;
         
         if ( test_0 == true )
         {
            Relay_In_328();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Components (Vector2).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_328()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("05aeb1a6-914d-4be5-bdff-dbce8b0e1373", "Set Components (Vector2)", Relay_In_328)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetComponentsVector2_uScriptAct_SetComponentsVector2_328.In(logic_uScriptAct_SetComponentsVector2_X_328, logic_uScriptAct_SetComponentsVector2_Y_328, out logic_uScriptAct_SetComponentsVector2_OutputVector2_328);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetComponentsVector2_uScriptAct_SetComponentsVector2_328.Out;
         
         if ( test_0 == true )
         {
            Relay_In_329();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Components (Vector2).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_329()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("35406187-d19b-4045-9b67-a6a6da4e7bd7", "Set Random Vector2", Relay_In_329)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomVector2_uScriptAct_SetRandomVector2_329.In(logic_uScriptAct_SetRandomVector2_MinX_329, logic_uScriptAct_SetRandomVector2_MaxX_329, logic_uScriptAct_SetRandomVector2_MinY_329, logic_uScriptAct_SetRandomVector2_MaxY_329, out logic_uScriptAct_SetRandomVector2_TargetVector2_329);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomVector2_uScriptAct_SetRandomVector2_329.Out;
         
         if ( test_0 == true )
         {
            Relay_In_330();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Vector2.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_330()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("23de8229-5449-43d6-9fc9-0e44e745e101", "Set Vector2", Relay_In_330)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetVector2_uScriptAct_SetVector2_330.In(logic_uScriptAct_SetVector2_Value_330, out logic_uScriptAct_SetVector2_TargetVector2_330);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetVector2_uScriptAct_SetVector2_330.Out;
         
         if ( test_0 == true )
         {
            Relay_In_332();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Vector2.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_332()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7c5499f4-3ad9-4282-ad10-a14a3babc9e3", "Get Components (Vector3)", Relay_In_332)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetComponentsVector3_uScriptAct_GetComponentsVector3_332.In(logic_uScriptAct_GetComponentsVector3_InputVector3_332, out logic_uScriptAct_GetComponentsVector3_X_332, out logic_uScriptAct_GetComponentsVector3_Y_332, out logic_uScriptAct_GetComponentsVector3_Z_332);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetComponentsVector3_uScriptAct_GetComponentsVector3_332.Out;
         
         if ( test_0 == true )
         {
            Relay_In_333();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Components (Vector3).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_333()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("0fe94c08-628e-40e0-a2a5-35669bda5bb5", "Set Random Vector3", Relay_In_333)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomVector3_uScriptAct_SetRandomVector3_333.In(logic_uScriptAct_SetRandomVector3_MinX_333, logic_uScriptAct_SetRandomVector3_MaxX_333, logic_uScriptAct_SetRandomVector3_MinY_333, logic_uScriptAct_SetRandomVector3_MaxY_333, logic_uScriptAct_SetRandomVector3_MinZ_333, logic_uScriptAct_SetRandomVector3_MaxZ_333, out logic_uScriptAct_SetRandomVector3_TargetVector3_333);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomVector3_uScriptAct_SetRandomVector3_333.Out;
         
         if ( test_0 == true )
         {
            Relay_In_334();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_334()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f4e1897a-5dbd-42a1-a80d-736d52bc53bc", "Set Random Vector3", Relay_In_334)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomVector3_uScriptAct_SetRandomVector3_334.In(logic_uScriptAct_SetRandomVector3_MinX_334, logic_uScriptAct_SetRandomVector3_MaxX_334, logic_uScriptAct_SetRandomVector3_MinY_334, logic_uScriptAct_SetRandomVector3_MaxY_334, logic_uScriptAct_SetRandomVector3_MinZ_334, logic_uScriptAct_SetRandomVector3_MaxZ_334, out logic_uScriptAct_SetRandomVector3_TargetVector3_334);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomVector3_uScriptAct_SetRandomVector3_334.Out;
         
         if ( test_0 == true )
         {
            Relay_In_335();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_335()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d12309ac-3e05-4b67-bdd8-7fd75016de47", "Set Vector3", Relay_In_335)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetVector3_uScriptAct_SetVector3_335.In(logic_uScriptAct_SetVector3_Value_335, out logic_uScriptAct_SetVector3_TargetVector3_335);
         local_336_UnityEngine_Vector3 = logic_uScriptAct_SetVector3_TargetVector3_335;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetVector3_uScriptAct_SetVector3_335.Out;
         
         if ( test_0 == true )
         {
            Relay_In_341();
            Relay_In_337();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_337()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9666ee1c-8ab3-49d2-87ae-79cebbbe3560", "Get Components (Vector4)", Relay_In_337)) return; 
         {
            {
               logic_uScriptAct_GetComponentsVector4_InputVector4_337 = local_344_UnityEngine_Vector4;
               
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetComponentsVector4_uScriptAct_GetComponentsVector4_337.In(logic_uScriptAct_GetComponentsVector4_InputVector4_337, out logic_uScriptAct_GetComponentsVector4_X_337, out logic_uScriptAct_GetComponentsVector4_Y_337, out logic_uScriptAct_GetComponentsVector4_Z_337, out logic_uScriptAct_GetComponentsVector4_W_337);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetComponentsVector4_uScriptAct_GetComponentsVector4_337.Out;
         
         if ( test_0 == true )
         {
            Relay_In_338();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Components (Vector4).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_338()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6e3a7a2e-a5cf-4c9c-8d82-8cc8077f6773", "Set Components (Vector4)", Relay_In_338)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetComponentsVector4_uScriptAct_SetComponentsVector4_338.In(logic_uScriptAct_SetComponentsVector4_X_338, logic_uScriptAct_SetComponentsVector4_Y_338, logic_uScriptAct_SetComponentsVector4_Z_338, logic_uScriptAct_SetComponentsVector4_W_338, out logic_uScriptAct_SetComponentsVector4_OutputVector4_338);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetComponentsVector4_uScriptAct_SetComponentsVector4_338.Out;
         
         if ( test_0 == true )
         {
            Relay_In_339();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Components (Vector4).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_339()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8c471b93-047d-48f0-9dd2-ed8303516f96", "Set Random Vector4", Relay_In_339)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomVector4_uScriptAct_SetRandomVector4_339.In(logic_uScriptAct_SetRandomVector4_MinX_339, logic_uScriptAct_SetRandomVector4_MaxX_339, logic_uScriptAct_SetRandomVector4_MinY_339, logic_uScriptAct_SetRandomVector4_MaxY_339, logic_uScriptAct_SetRandomVector4_MinZ_339, logic_uScriptAct_SetRandomVector4_MaxZ_339, logic_uScriptAct_SetRandomVector4_MinW_339, logic_uScriptAct_SetRandomVector4_MaxW_339, out logic_uScriptAct_SetRandomVector4_TargetVector4_339);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomVector4_uScriptAct_SetRandomVector4_339.Out;
         
         if ( test_0 == true )
         {
            Relay_In_340();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_340()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("19ae5405-3e0f-41c2-9cec-0e1d95b0a224", "Set Vector4", Relay_In_340)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetVector4_uScriptAct_SetVector4_340.In(logic_uScriptAct_SetVector4_Value_340, out logic_uScriptAct_SetVector4_TargetVector4_340);
         local_344_UnityEngine_Vector4 = logic_uScriptAct_SetVector4_TargetVector4_340;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetVector4_uScriptAct_SetVector4_340.Out;
         
         if ( test_0 == true )
         {
            Relay_In_343();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_341()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("158ac635-a443-408a-a47c-8d816ee54bac", "Set Random Seed", Relay_In_341)) return; 
         {
            {
            }
         }
         logic_uScriptAct_SetRandomSeed_uScriptAct_SetRandomSeed_341.In(logic_uScriptAct_SetRandomSeed_Seed_341);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomSeed_uScriptAct_SetRandomSeed_341.Out;
         
         if ( test_0 == true )
         {
            Relay_In_342();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Seed.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_342()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b2dca7e3-9a87-4e4f-a3dc-2c5d5b6f0fe3", "Log", Relay_In_342)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_342.In(logic_uScriptAct_Log_Prefix_342, logic_uScriptAct_Log_Target_342, logic_uScriptAct_Log_Postfix_342);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_343()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("11e6b08e-0c2a-4999-b0c5-c2b1eaefbe1b", "Log", Relay_In_343)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_343.In(logic_uScriptAct_Log_Prefix_343, logic_uScriptAct_Log_Target_343, logic_uScriptAct_Log_Postfix_343);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_346()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("71e247b1-2bce-4688-90b8-0cb96c2f22c8", "Input Events Filter", Relay_In_346)) return; 
         {
            {
               logic_uScriptAct_OnInputEventFilter_KeyCode_346 = local_345_UnityEngine_KeyCode;
               
            }
         }
         logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_346.In(logic_uScriptAct_OnInputEventFilter_KeyCode_346);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_346.KeyDown;
         bool test_1 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_346.KeyHeld;
         bool test_2 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_346.KeyUp;
         
         if ( test_0 == true )
         {
            Relay_In_359();
         }
         if ( test_1 == true )
         {
            Relay_In_348();
         }
         if ( test_2 == true )
         {
            Relay_In_353();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Input Events Filter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_KeyEvent_347()
   {
      if (true == CheckDebugBreak("33caa532-05e5-48f8-897e-5e9f75d792d5", "Input Events", Relay_KeyEvent_347)) return; 
      Relay_In_346();
   }
   
   void Relay_In_348()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("4d0ba539-9db4-4084-bd8b-759dd9ffc13d", "Assign Material", Relay_In_348)) return; 
         {
            {
            }
            {
               logic_uScriptAct_AssignMaterial_materialName_348 = local_349_UnityEngine_Material;
               
            }
            {
            }
         }
         logic_uScriptAct_AssignMaterial_uScriptAct_AssignMaterial_348.In(logic_uScriptAct_AssignMaterial_Target_348, logic_uScriptAct_AssignMaterial_materialName_348, logic_uScriptAct_AssignMaterial_MatChannel_348);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AssignMaterial_uScriptAct_AssignMaterial_348.Out;
         
         if ( test_0 == true )
         {
            Relay_In_350();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Assign Material.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_350()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("17f34eb7-e337-4dd7-95bc-5046cb7e8eca", "Assign Material Color", Relay_In_350)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AssignMaterialColor_uScriptAct_AssignMaterialColor_350.In(logic_uScriptAct_AssignMaterialColor_Target_350, logic_uScriptAct_AssignMaterialColor_MatColor_350, logic_uScriptAct_AssignMaterialColor_MatChannel_350);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AssignMaterialColor_uScriptAct_AssignMaterialColor_350.Out;
         
         if ( test_0 == true )
         {
            Relay_In_351();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Assign Material Color.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_351()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f988874a-b58f-439d-b269-bdd8a63f9b85", "Attach Component", Relay_In_351)) return; 
         {
            {
               List<UnityEngine.GameObject> properties = new List<UnityEngine.GameObject>();
               {
                  //if our game object reference was changed then we need to reset event listeners
                  if ( local_MasterGO_UnityEngine_GameObject_previous != local_MasterGO_UnityEngine_GameObject || false == m_RegisteredForEvents )
                  {
                     //tear down old listeners
                     if ( null != local_MasterGO_UnityEngine_GameObject_previous )
                     {
                        {
                           uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventColor>();
                           if ( null != component )
                           {
                              component.OnCustomEventColor -= Instance_OnCustomEventColor_9;
                           }
                        }
                        {
                           uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEvent>();
                           if ( null != component )
                           {
                              component.OnCustomEvent -= Instance_OnCustomEvent_7;
                           }
                        }
                        {
                           uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector4>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector4 -= Instance_OnCustomEventVector4_17;
                           }
                        }
                        {
                           uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventObject>();
                           if ( null != component )
                           {
                              component.OnCustomEventObject -= Instance_OnCustomEventObject_13;
                           }
                        }
                        {
                           uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventInt>();
                           if ( null != component )
                           {
                              component.OnCustomEventInt -= Instance_OnCustomEventInt_12;
                           }
                        }
                        {
                           uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventFloat>();
                           if ( null != component )
                           {
                              component.OnCustomEventFloat -= Instance_OnCustomEventFloat_10;
                           }
                        }
                        {
                           uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventGameObject>();
                           if ( null != component )
                           {
                              component.OnCustomEventGameObject -= Instance_OnCustomEventGameObject_11;
                           }
                        }
                        {
                           uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector3>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector3 -= Instance_OnCustomEventVector3_16;
                           }
                        }
                        {
                           uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventString>();
                           if ( null != component )
                           {
                              component.OnCustomEventString -= Instance_OnCustomEventString_14;
                           }
                        }
                        {
                           uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventVector2>();
                           if ( null != component )
                           {
                              component.OnCustomEventVector2 -= Instance_OnCustomEventVector2_15;
                           }
                        }
                        {
                           uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_CustomEventBool>();
                           if ( null != component )
                           {
                              component.OnCustomEventBool -= Instance_OnCustomEventBool_8;
                           }
                        }
                        {
                           uScript_GameObject component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_GameObject>();
                           if ( null != component )
                           {
                              component.EnableEvent -= Instance_EnableEvent_28;
                              component.DisableEvent -= Instance_DisableEvent_28;
                              component.DestroyEvent -= Instance_DestroyEvent_28;
                           }
                        }
                        {
                           uScript_Visibility component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Visibility>();
                           if ( null != component )
                           {
                              component.BecameVisible -= Instance_BecameVisible_29;
                              component.BecameInvisible -= Instance_BecameInvisible_29;
                           }
                        }
                        {
                           uScript_Mouse component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Mouse>();
                           if ( null != component )
                           {
                              component.OnEnter -= Instance_OnEnter_37;
                              component.OnOver -= Instance_OnOver_37;
                              component.OnExit -= Instance_OnExit_37;
                              component.OnDown -= Instance_OnDown_37;
                              component.OnUp -= Instance_OnUp_37;
                              component.OnDrag -= Instance_OnDrag_37;
                           }
                        }
                        {
                           uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkClientConnection>();
                           if ( null != component )
                           {
                              component.ConnectedToServer -= Instance_ConnectedToServer_48;
                              component.DisconnectedFromServer -= Instance_DisconnectedFromServer_48;
                           }
                        }
                        {
                           uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkFailedConnection>();
                           if ( null != component )
                           {
                              component.FailedToConnect -= Instance_FailedToConnect_49;
                              component.FailedToConnectToMaster -= Instance_FailedToConnectToMaster_49;
                           }
                        }
                        {
                           uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkInstantiate>();
                           if ( null != component )
                           {
                              component.OnInstantiate -= Instance_OnInstantiate_50;
                           }
                        }
                        {
                           uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkMasterServer>();
                           if ( null != component )
                           {
                              component.OnEvent -= Instance_OnEvent_51;
                           }
                        }
                        {
                           uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkSerialization>();
                           if ( null != component )
                           {
                              component.OnSerialize -= Instance_OnSerialize_52;
                           }
                        }
                        {
                           uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerInitialized>();
                           if ( null != component )
                           {
                              component.OnInitialized -= Instance_OnInitialized_53;
                           }
                        }
                        {
                           uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_NetworkServerPlayer>();
                           if ( null != component )
                           {
                              component.PlayerConnected -= Instance_PlayerConnected_54;
                              component.PlayerDisconnected -= Instance_PlayerDisconnected_54;
                           }
                        }
                        {
                           uScript_Particle component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Particle>();
                           if ( null != component )
                           {
                              component.Collision -= Instance_Collision_56;
                           }
                        }
                        {
                           uScript_Joint component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Joint>();
                           if ( null != component )
                           {
                              component.JointBreak -= Instance_JointBreak_59;
                           }
                        }
                        {
                           uScript_Collision component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Collision>();
                           if ( null != component )
                           {
                              component.OnEnterCollision -= Instance_OnEnterCollision_60;
                              component.OnExitCollision -= Instance_OnExitCollision_60;
                              component.WhileInsideCollision -= Instance_WhileInsideCollision_60;
                           }
                        }
                        {
                           uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_ProxyController>();
                           if ( null != component )
                           {
                              component.OnHit -= Instance_OnHit_58;
                           }
                        }
                        {
                           uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_PostEffect>();
                           if ( null != component )
                           {
                              component.RenderImage -= Instance_RenderImage_66;
                           }
                        }
                        {
                           uScript_Render component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Render>();
                           if ( null != component )
                           {
                              component.PreCull -= Instance_PreCull_67;
                              component.PreRender -= Instance_PreRender_67;
                              component.PostRender -= Instance_PostRender_67;
                              component.RenderObject -= Instance_RenderObject_67;
                              component.WillRenderObject -= Instance_WillRenderObject_67;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject_previous.GetComponent<uScript_Triggers>();
                           if ( null != component )
                           {
                              component.OnEnterTrigger -= Instance_OnEnterTrigger_68;
                              component.OnExitTrigger -= Instance_OnExitTrigger_68;
                              component.WhileInsideTrigger -= Instance_WhileInsideTrigger_68;
                           }
                        }
                     }
                     
                     local_MasterGO_UnityEngine_GameObject_previous = local_MasterGO_UnityEngine_GameObject;
                     
                     //setup new listeners
                     if ( null != local_MasterGO_UnityEngine_GameObject )
                     {
                        {
                           uScript_CustomEventColor component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventColor>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventColor>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventColor += Instance_OnCustomEventColor_9;
                           }
                        }
                        {
                           uScript_CustomEvent component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEvent>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEvent>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEvent += Instance_OnCustomEvent_7;
                           }
                        }
                        {
                           uScript_CustomEventVector4 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector4>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector4>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector4 += Instance_OnCustomEventVector4_17;
                           }
                        }
                        {
                           uScript_CustomEventObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventObject>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventObject += Instance_OnCustomEventObject_13;
                           }
                        }
                        {
                           uScript_CustomEventInt component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventInt>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventInt>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventInt += Instance_OnCustomEventInt_12;
                           }
                        }
                        {
                           uScript_CustomEventFloat component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventFloat>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventFloat>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventFloat += Instance_OnCustomEventFloat_10;
                           }
                        }
                        {
                           uScript_CustomEventGameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventGameObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventGameObject>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventGameObject += Instance_OnCustomEventGameObject_11;
                           }
                        }
                        {
                           uScript_CustomEventVector3 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector3>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector3>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector3 += Instance_OnCustomEventVector3_16;
                           }
                        }
                        {
                           uScript_CustomEventString component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventString>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventString>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventString += Instance_OnCustomEventString_14;
                           }
                        }
                        {
                           uScript_CustomEventVector2 component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventVector2>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventVector2>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventVector2 += Instance_OnCustomEventVector2_15;
                           }
                        }
                        {
                           uScript_CustomEventBool component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_CustomEventBool>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_CustomEventBool>();
                           }
                           if ( null != component )
                           {
                              component.OnCustomEventBool += Instance_OnCustomEventBool_8;
                           }
                        }
                        {
                           uScript_GameObject component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_GameObject>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_GameObject>();
                           }
                           if ( null != component )
                           {
                              component.EnableEvent += Instance_EnableEvent_28;
                              component.DisableEvent += Instance_DisableEvent_28;
                              component.DestroyEvent += Instance_DestroyEvent_28;
                           }
                        }
                        {
                           uScript_Visibility component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Visibility>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Visibility>();
                           }
                           if ( null != component )
                           {
                              component.BecameVisible += Instance_BecameVisible_29;
                              component.BecameInvisible += Instance_BecameInvisible_29;
                           }
                        }
                        {
                           uScript_Mouse component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Mouse>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Mouse>();
                           }
                           if ( null != component )
                           {
                              component.OnEnter += Instance_OnEnter_37;
                              component.OnOver += Instance_OnOver_37;
                              component.OnExit += Instance_OnExit_37;
                              component.OnDown += Instance_OnDown_37;
                              component.OnUp += Instance_OnUp_37;
                              component.OnDrag += Instance_OnDrag_37;
                           }
                        }
                        {
                           uScript_NetworkClientConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkClientConnection>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkClientConnection>();
                           }
                           if ( null != component )
                           {
                              component.ConnectedToServer += Instance_ConnectedToServer_48;
                              component.DisconnectedFromServer += Instance_DisconnectedFromServer_48;
                           }
                        }
                        {
                           uScript_NetworkFailedConnection component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkFailedConnection>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkFailedConnection>();
                           }
                           if ( null != component )
                           {
                              component.FailedToConnect += Instance_FailedToConnect_49;
                              component.FailedToConnectToMaster += Instance_FailedToConnectToMaster_49;
                           }
                        }
                        {
                           uScript_NetworkInstantiate component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkInstantiate>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkInstantiate>();
                           }
                           if ( null != component )
                           {
                              component.OnInstantiate += Instance_OnInstantiate_50;
                           }
                        }
                        {
                           uScript_NetworkMasterServer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkMasterServer>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkMasterServer>();
                           }
                           if ( null != component )
                           {
                              component.OnEvent += Instance_OnEvent_51;
                           }
                        }
                        {
                           uScript_NetworkSerialization component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkSerialization>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkSerialization>();
                           }
                           if ( null != component )
                           {
                              component.OnSerialize += Instance_OnSerialize_52;
                           }
                        }
                        {
                           uScript_NetworkServerInitialized component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerInitialized>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerInitialized>();
                           }
                           if ( null != component )
                           {
                              component.OnInitialized += Instance_OnInitialized_53;
                           }
                        }
                        {
                           uScript_NetworkServerPlayer component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_NetworkServerPlayer>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_NetworkServerPlayer>();
                           }
                           if ( null != component )
                           {
                              component.PlayerConnected += Instance_PlayerConnected_54;
                              component.PlayerDisconnected += Instance_PlayerDisconnected_54;
                           }
                        }
                        {
                           uScript_Particle component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Particle>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Particle>();
                           }
                           if ( null != component )
                           {
                              component.Collision += Instance_Collision_56;
                           }
                        }
                        {
                           uScript_Joint component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Joint>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Joint>();
                           }
                           if ( null != component )
                           {
                              component.JointBreak += Instance_JointBreak_59;
                           }
                        }
                        {
                           uScript_Collision component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Collision>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Collision>();
                           }
                           if ( null != component )
                           {
                              component.OnEnterCollision += Instance_OnEnterCollision_60;
                              component.OnExitCollision += Instance_OnExitCollision_60;
                              component.WhileInsideCollision += Instance_WhileInsideCollision_60;
                           }
                        }
                        {
                           uScript_ProxyController component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_ProxyController>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_ProxyController>();
                           }
                           if ( null != component )
                           {
                              component.OnHit += Instance_OnHit_58;
                           }
                        }
                        {
                           uScript_PostEffect component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_PostEffect>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_PostEffect>();
                           }
                           if ( null != component )
                           {
                              component.RenderImage += Instance_RenderImage_66;
                           }
                        }
                        {
                           uScript_Render component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Render>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Render>();
                           }
                           if ( null != component )
                           {
                              component.PreCull += Instance_PreCull_67;
                              component.PreRender += Instance_PreRender_67;
                              component.PostRender += Instance_PostRender_67;
                              component.RenderObject += Instance_RenderObject_67;
                              component.WillRenderObject += Instance_WillRenderObject_67;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
                           }
                           if ( null != component )
                           {
                              component.TimesToTrigger = event_UnityEngine_GameObject_TimesToTrigger_68;
                           }
                        }
                        {
                           uScript_Triggers component = local_MasterGO_UnityEngine_GameObject.GetComponent<uScript_Triggers>();
                           if ( null == component )
                           {
                              component = local_MasterGO_UnityEngine_GameObject.AddComponent<uScript_Triggers>();
                           }
                           if ( null != component )
                           {
                              component.OnEnterTrigger += Instance_OnEnterTrigger_68;
                              component.OnExitTrigger += Instance_OnExitTrigger_68;
                              component.WhileInsideTrigger += Instance_WhileInsideTrigger_68;
                           }
                        }
                     }
                  }
               }
               properties.Add((UnityEngine.GameObject)local_MasterGO_UnityEngine_GameObject);
               logic_uScriptAct_AttachScript_Target_351 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_AttachScript_uScriptAct_AttachScript_351.In(logic_uScriptAct_AttachScript_Target_351, logic_uScriptAct_AttachScript_ScriptName_351);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AttachScript_uScriptAct_AttachScript_351.Out;
         
         if ( test_0 == true )
         {
            Relay_First_465();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Attach Component.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_353()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a501577a-fa4e-4bcb-8a67-1f58fad1c068", "Attach To GameObject", Relay_In_353)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AttachToGameObject_uScriptAct_AttachToGameObject_353.In(logic_uScriptAct_AttachToGameObject_Target_353, logic_uScriptAct_AttachToGameObject_Attachment_353, logic_uScriptAct_AttachToGameObject_UseRelativeOffset_353, logic_uScriptAct_AttachToGameObject_RelativeOffset_353, logic_uScriptAct_AttachToGameObject_UseRelativeRotation_353, logic_uScriptAct_AttachToGameObject_RelativeRotation_353);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AttachToGameObject_uScriptAct_AttachToGameObject_353.Out;
         
         if ( test_0 == true )
         {
            Relay_In_354();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Attach To GameObject.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_354()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b20a9614-fa46-4b57-be91-b5aa2799f2d8", "Create Primitive", Relay_In_354)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_CreatePrimitive_uScriptAct_CreatePrimitive_354.In(logic_uScriptAct_CreatePrimitive_Name_354, logic_uScriptAct_CreatePrimitive_Primitive_354, logic_uScriptAct_CreatePrimitive_Location_354, out logic_uScriptAct_CreatePrimitive_NewGameObject_354);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CreatePrimitive_uScriptAct_CreatePrimitive_354.Out;
         
         if ( test_0 == true )
         {
            Relay_In_355();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Create Primitive.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_355()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ee1d5d2d-1ed2-46f2-b57a-6cc7bc32dae4", "Destroy", Relay_In_355)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Destroy_uScriptAct_Destroy_355.In(logic_uScriptAct_Destroy_Target_355, logic_uScriptAct_Destroy_DelayTime_355);
         logic_uScriptAct_Destroy_WaitOneTick_355 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Destroy_uScriptAct_Destroy_355.Out;
         
         if ( test_0 == true )
         {
            Relay_In_356();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Destroy.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_WaitOneTick_355( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Destroy_WaitOneTick_355 = logic_uScriptAct_Destroy_uScriptAct_Destroy_355.WaitOneTick();
         if ( true == logic_uScriptAct_Destroy_WaitOneTick_355 )
         {
            if ( logic_uScriptAct_Destroy_uScriptAct_Destroy_355.Out == true )
            {
               Relay_In_356();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Destroy.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_In_356()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3a4ffd8c-9b7f-46f8-982f-f5f9549d03bf", "Destroy Component", Relay_In_356)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_DestroyComponent_uScriptAct_DestroyComponent_356.In(logic_uScriptAct_DestroyComponent_Target_356, logic_uScriptAct_DestroyComponent_ComponentName_356, logic_uScriptAct_DestroyComponent_DelayTime_356);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_DestroyComponent_uScriptAct_DestroyComponent_356.Out;
         
         if ( test_0 == true )
         {
            Relay_In_358();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Destroy Component.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_358()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eec2e1b6-20d6-4fb4-b77e-084ad54f0ba6", "Log", Relay_In_358)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_358.In(logic_uScriptAct_Log_Prefix_358, logic_uScriptAct_Log_Target_358, logic_uScriptAct_Log_Postfix_358);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_359()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("edf88dab-8de6-41cc-bb4c-b7080960b9fb", "Get All Children", Relay_In_359)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetAllChildren_uScriptAct_GetAllChildren_359.In(logic_uScriptAct_GetAllChildren_Target_359, logic_uScriptAct_GetAllChildren_recursive_359, out logic_uScriptAct_GetAllChildren_FirstChild_359, out logic_uScriptAct_GetAllChildren_Children_359, out logic_uScriptAct_GetAllChildren_ChildrenCount_359);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetAllChildren_uScriptAct_GetAllChildren_359.Out;
         bool test_1 = logic_uScriptAct_GetAllChildren_uScriptAct_GetAllChildren_359.ChildrenFound;
         
         if ( test_0 == true )
         {
            Relay_In_355();
         }
         if ( test_1 == true )
         {
            Relay_In_360();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get All Children.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_360()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("88859c58-6a0d-457b-a9f6-9642c35ccaa3", "Get Children By Name", Relay_In_360)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetChildrenByName_uScriptAct_GetChildrenByName_360.In(logic_uScriptAct_GetChildrenByName_Target_360, logic_uScriptAct_GetChildrenByName_Name_360, logic_uScriptAct_GetChildrenByName_SearchMethod_360, logic_uScriptAct_GetChildrenByName_recursive_360, out logic_uScriptAct_GetChildrenByName_FirstChild_360, out logic_uScriptAct_GetChildrenByName_Children_360, out logic_uScriptAct_GetChildrenByName_ChildrenCount_360);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetChildrenByName_uScriptAct_GetChildrenByName_360.Out;
         bool test_1 = logic_uScriptAct_GetChildrenByName_uScriptAct_GetChildrenByName_360.ChildrenFound;
         bool test_2 = logic_uScriptAct_GetChildrenByName_uScriptAct_GetChildrenByName_360.ChildrenNotFound;
         
         if ( test_0 == true )
         {
            Relay_In_361();
         }
         if ( test_1 == true )
         {
            Relay_In_362();
         }
         if ( test_2 == true )
         {
            Relay_In_362();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Children By Name.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_361()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b7126028-9f0e-47c6-99a0-d1c59d9959b2", "Get Children By Tag", Relay_In_361)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetChildrenByTag_uScriptAct_GetChildrenByTag_361.In(logic_uScriptAct_GetChildrenByTag_Target_361, logic_uScriptAct_GetChildrenByTag_Tag_361, logic_uScriptAct_GetChildrenByTag_SearchMethod_361, logic_uScriptAct_GetChildrenByTag_recursive_361, out logic_uScriptAct_GetChildrenByTag_FirstChild_361, out logic_uScriptAct_GetChildrenByTag_Children_361, out logic_uScriptAct_GetChildrenByTag_ChildrenCount_361);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetChildrenByTag_uScriptAct_GetChildrenByTag_361.Out;
         bool test_1 = logic_uScriptAct_GetChildrenByTag_uScriptAct_GetChildrenByTag_361.ChildrenFound;
         bool test_2 = logic_uScriptAct_GetChildrenByTag_uScriptAct_GetChildrenByTag_361.ChildrenNotFound;
         
         if ( test_0 == true )
         {
            Relay_In_362();
         }
         if ( test_1 == true )
         {
            Relay_In_362();
         }
         if ( test_2 == true )
         {
            Relay_In_363();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Children By Tag.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_362()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c202f3e0-6bd7-488d-bc03-fce4c70950e7", "Log", Relay_In_362)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_362.In(logic_uScriptAct_Log_Prefix_362, logic_uScriptAct_Log_Target_362, logic_uScriptAct_Log_Postfix_362);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_363()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ee966de2-f778-47d3-a89d-2500479e46d8", "Get Distance", Relay_In_363)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetDistance_uScriptAct_GetDistance_363.In(logic_uScriptAct_GetDistance_A_363, logic_uScriptAct_GetDistance_B_363, out logic_uScriptAct_GetDistance_Distance_363);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetDistance_uScriptAct_GetDistance_363.Out;
         
         if ( test_0 == true )
         {
            Relay_In_364();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Distance.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_364()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("fb8c9968-7ceb-4731-ad4c-8a3a57fe39e4", "Get GameObject By Name", Relay_In_364)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_GetGameObjectByName_uScriptAct_GetGameObjectByName_364.In(logic_uScriptAct_GetGameObjectByName_Name_364, out logic_uScriptAct_GetGameObjectByName_gameObject_364);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetGameObjectByName_uScriptAct_GetGameObjectByName_364.Out;
         bool test_1 = logic_uScriptAct_GetGameObjectByName_uScriptAct_GetGameObjectByName_364.GameObjectFound;
         bool test_2 = logic_uScriptAct_GetGameObjectByName_uScriptAct_GetGameObjectByName_364.GameObjectNotFound;
         
         if ( test_0 == true )
         {
            Relay_In_365();
         }
         if ( test_1 == true )
         {
            Relay_In_358();
         }
         if ( test_2 == true )
         {
            Relay_In_362();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get GameObject By Name.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_365()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("62a3d4e8-e421-4791-9739-3d72553b8644", "Get GameObjects By Tag", Relay_In_365)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetGameObjectsByTag_uScriptAct_GetGameObjectsByTag_365.In(logic_uScriptAct_GetGameObjectsByTag_Tag_365, out logic_uScriptAct_GetGameObjectsByTag_FirstGameObject_365, out logic_uScriptAct_GetGameObjectsByTag_GameObjects_365, out logic_uScriptAct_GetGameObjectsByTag_GameObjectCount_365);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetGameObjectsByTag_uScriptAct_GetGameObjectsByTag_365.Out;
         bool test_1 = logic_uScriptAct_GetGameObjectsByTag_uScriptAct_GetGameObjectsByTag_365.GameObjectsFound;
         bool test_2 = logic_uScriptAct_GetGameObjectsByTag_uScriptAct_GetGameObjectsByTag_365.GameObjectsNotFound;
         
         if ( test_0 == true )
         {
            Relay_In_366();
         }
         if ( test_1 == true )
         {
            Relay_In_367();
         }
         if ( test_2 == true )
         {
            Relay_In_368();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get GameObjects By Tag.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_366()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("31d21448-b0b7-47df-a0c5-767494766045", "Get Material", Relay_In_366)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetGameObjectMaterial_uScriptAct_GetGameObjectMaterial_366.In(logic_uScriptAct_GetGameObjectMaterial_Target_366, logic_uScriptAct_GetGameObjectMaterial_MaterialIndex_366, out logic_uScriptAct_GetGameObjectMaterial_targetMaterial_366, out logic_uScriptAct_GetGameObjectMaterial_materialColor_366, out logic_uScriptAct_GetGameObjectMaterial_materialName_366);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetGameObjectMaterial_uScriptAct_GetGameObjectMaterial_366.Out;
         
         if ( test_0 == true )
         {
            Relay_In_370();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Material.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_367()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e64e77dd-90fd-49fa-80f8-a7621193e5bd", "Get Position and Rotation", Relay_In_367)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetPositionAndRotation_uScriptAct_GetPositionAndRotation_367.In(logic_uScriptAct_GetPositionAndRotation_Target_367, logic_uScriptAct_GetPositionAndRotation_GetLocal_367, out logic_uScriptAct_GetPositionAndRotation_Position_367, out logic_uScriptAct_GetPositionAndRotation_Rotation_367, out logic_uScriptAct_GetPositionAndRotation_EulerAngles_367, out logic_uScriptAct_GetPositionAndRotation_Forward_367, out logic_uScriptAct_GetPositionAndRotation_Up_367, out logic_uScriptAct_GetPositionAndRotation_Right_367);
         local_369_UnityEngine_Quaternion = logic_uScriptAct_GetPositionAndRotation_Rotation_367;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetPositionAndRotation_uScriptAct_GetPositionAndRotation_367.Out;
         
         if ( test_0 == true )
         {
            Relay_In_371();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Position and Rotation.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_368()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("47dee004-e8c1-4277-bd65-93f7fe4ff5f6", "Get Scale", Relay_In_368)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetGameObjectScale_uScriptAct_GetGameObjectScale_368.In(logic_uScriptAct_GetGameObjectScale_Target_368, out logic_uScriptAct_GetGameObjectScale_Scale_368, out logic_uScriptAct_GetGameObjectScale_X_368, out logic_uScriptAct_GetGameObjectScale_Y_368, out logic_uScriptAct_GetGameObjectScale_Z_368);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetGameObjectScale_uScriptAct_GetGameObjectScale_368.Out;
         
         if ( test_0 == true )
         {
            Relay_In_372();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Scale.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_370()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b7ecabb7-0d85-4591-bb39-712c8c932863", "Get Vector2 Distance", Relay_In_370)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetVector2Distance_uScriptAct_GetVector2Distance_370.In(logic_uScriptAct_GetVector2Distance_A_370, logic_uScriptAct_GetVector2Distance_B_370, out logic_uScriptAct_GetVector2Distance_Distance_370);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetVector2Distance_uScriptAct_GetVector2Distance_370.Out;
         
         if ( test_0 == true )
         {
            Relay_In_373();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Vector2 Distance.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_371()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("69f4381f-960b-47ab-9d70-ac2830f0a7f7", "Get Vector3 Distance", Relay_In_371)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetVector3Distance_uScriptAct_GetVector3Distance_371.In(logic_uScriptAct_GetVector3Distance_A_371, logic_uScriptAct_GetVector3Distance_B_371, out logic_uScriptAct_GetVector3Distance_Distance_371);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetVector3Distance_uScriptAct_GetVector3Distance_371.Out;
         
         if ( test_0 == true )
         {
            Relay_RotateRight_374();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Vector3 Distance.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_372()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("bf52c8a8-f714-4a07-a0e0-27bc6346fbd9", "Get Vector4 Distance", Relay_In_372)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_GetVector4Distance_uScriptAct_GetVector4Distance_372.In(logic_uScriptAct_GetVector4Distance_A_372, logic_uScriptAct_GetVector4Distance_B_372, out logic_uScriptAct_GetVector4Distance_Distance_372);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GetVector4Distance_uScriptAct_GetVector4Distance_372.Out;
         
         if ( test_0 == true )
         {
            Relay_RotateLeft_374();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Vector4 Distance.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_373()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b61cdc4c-daa7-4a0c-932c-3dc3fa12cc9f", "Is GameObject Active", Relay_In_373)) return; 
         {
            {
            }
         }
         logic_uScriptAct_IsActive_uScriptAct_IsActive_373.In(logic_uScriptAct_IsActive_Target_373);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IsActive_uScriptAct_IsActive_373.Active;
         bool test_1 = logic_uScriptAct_IsActive_uScriptAct_IsActive_373.Inactive;
         
         if ( test_0 == true )
         {
            Relay_MoveForward_374();
         }
         if ( test_1 == true )
         {
            Relay_MoveBackward_374();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Is GameObject Active.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_MoveForward_374()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb585a33-181e-46e2-b454-29ab50924b44", "Isometric Character Controller", Relay_MoveForward_374)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.MoveForward(logic_uScriptAct_IsometricCharacterController_target_374, logic_uScriptAct_IsometricCharacterController_translation_374, logic_uScriptAct_IsometricCharacterController_rotation_374, logic_uScriptAct_IsometricCharacterController_filterTranslation_374, logic_uScriptAct_IsometricCharacterController_translationFilterConstant_374, logic_uScriptAct_IsometricCharacterController_filterRotation_374, logic_uScriptAct_IsometricCharacterController_rotationFilterConstant_374);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.Out;
         
         if ( test_0 == true )
         {
            Relay_In_377();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Isometric Character Controller.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_MoveBackward_374()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb585a33-181e-46e2-b454-29ab50924b44", "Isometric Character Controller", Relay_MoveBackward_374)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.MoveBackward(logic_uScriptAct_IsometricCharacterController_target_374, logic_uScriptAct_IsometricCharacterController_translation_374, logic_uScriptAct_IsometricCharacterController_rotation_374, logic_uScriptAct_IsometricCharacterController_filterTranslation_374, logic_uScriptAct_IsometricCharacterController_translationFilterConstant_374, logic_uScriptAct_IsometricCharacterController_filterRotation_374, logic_uScriptAct_IsometricCharacterController_rotationFilterConstant_374);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.Out;
         
         if ( test_0 == true )
         {
            Relay_In_377();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Isometric Character Controller.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_StrafeRight_374()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb585a33-181e-46e2-b454-29ab50924b44", "Isometric Character Controller", Relay_StrafeRight_374)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.StrafeRight(logic_uScriptAct_IsometricCharacterController_target_374, logic_uScriptAct_IsometricCharacterController_translation_374, logic_uScriptAct_IsometricCharacterController_rotation_374, logic_uScriptAct_IsometricCharacterController_filterTranslation_374, logic_uScriptAct_IsometricCharacterController_translationFilterConstant_374, logic_uScriptAct_IsometricCharacterController_filterRotation_374, logic_uScriptAct_IsometricCharacterController_rotationFilterConstant_374);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.Out;
         
         if ( test_0 == true )
         {
            Relay_In_377();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Isometric Character Controller.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_StrafeLeft_374()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb585a33-181e-46e2-b454-29ab50924b44", "Isometric Character Controller", Relay_StrafeLeft_374)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.StrafeLeft(logic_uScriptAct_IsometricCharacterController_target_374, logic_uScriptAct_IsometricCharacterController_translation_374, logic_uScriptAct_IsometricCharacterController_rotation_374, logic_uScriptAct_IsometricCharacterController_filterTranslation_374, logic_uScriptAct_IsometricCharacterController_translationFilterConstant_374, logic_uScriptAct_IsometricCharacterController_filterRotation_374, logic_uScriptAct_IsometricCharacterController_rotationFilterConstant_374);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.Out;
         
         if ( test_0 == true )
         {
            Relay_In_377();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Isometric Character Controller.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_RotateRight_374()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb585a33-181e-46e2-b454-29ab50924b44", "Isometric Character Controller", Relay_RotateRight_374)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.RotateRight(logic_uScriptAct_IsometricCharacterController_target_374, logic_uScriptAct_IsometricCharacterController_translation_374, logic_uScriptAct_IsometricCharacterController_rotation_374, logic_uScriptAct_IsometricCharacterController_filterTranslation_374, logic_uScriptAct_IsometricCharacterController_translationFilterConstant_374, logic_uScriptAct_IsometricCharacterController_filterRotation_374, logic_uScriptAct_IsometricCharacterController_rotationFilterConstant_374);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.Out;
         
         if ( test_0 == true )
         {
            Relay_In_377();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Isometric Character Controller.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_RotateLeft_374()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eb585a33-181e-46e2-b454-29ab50924b44", "Isometric Character Controller", Relay_RotateLeft_374)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.RotateLeft(logic_uScriptAct_IsometricCharacterController_target_374, logic_uScriptAct_IsometricCharacterController_translation_374, logic_uScriptAct_IsometricCharacterController_rotation_374, logic_uScriptAct_IsometricCharacterController_filterTranslation_374, logic_uScriptAct_IsometricCharacterController_translationFilterConstant_374, logic_uScriptAct_IsometricCharacterController_filterRotation_374, logic_uScriptAct_IsometricCharacterController_rotationFilterConstant_374);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IsometricCharacterController_uScriptAct_IsometricCharacterController_374.Out;
         
         if ( test_0 == true )
         {
            Relay_In_377();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Isometric Character Controller.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Finished_375()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("0b980d65-b249-4350-9152-0644beb6ce11", "Look At", Relay_Finished_375)) return; 
         Relay_In_376();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Look At.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_375()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("0b980d65-b249-4350-9152-0644beb6ce11", "Look At", Relay_In_375)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_LookAt_uScriptAct_LookAt_375.In(logic_uScriptAct_LookAt_Target_375, logic_uScriptAct_LookAt_Focus_375, logic_uScriptAct_LookAt_time_375, logic_uScriptAct_LookAt_lockAxis_375);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_LookAt_uScriptAct_LookAt_375.Out;
         
         if ( test_0 == true )
         {
            Relay_In_376();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Look At.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Finished_376()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1021e20f-8e93-4356-8dbd-5d2e1a197fcd", "Move To Location", Relay_Finished_376)) return; 
         Relay_In_379();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Move To Location.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_376()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1021e20f-8e93-4356-8dbd-5d2e1a197fcd", "Move To Location", Relay_In_376)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376.In(logic_uScriptAct_MoveToLocation_targetArray_376, logic_uScriptAct_MoveToLocation_location_376, logic_uScriptAct_MoveToLocation_asOffset_376, logic_uScriptAct_MoveToLocation_totalTime_376);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376.Out;
         
         if ( test_0 == true )
         {
            Relay_In_378();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Move To Location.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Cancel_376()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1021e20f-8e93-4356-8dbd-5d2e1a197fcd", "Move To Location", Relay_Cancel_376)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376.Cancel(logic_uScriptAct_MoveToLocation_targetArray_376, logic_uScriptAct_MoveToLocation_location_376, logic_uScriptAct_MoveToLocation_asOffset_376, logic_uScriptAct_MoveToLocation_totalTime_376);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MoveToLocation_uScriptAct_MoveToLocation_376.Out;
         
         if ( test_0 == true )
         {
            Relay_In_378();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Move To Location.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_377()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8517849e-e3d2-41fc-a25e-d3b316a0fc79", "Log", Relay_In_377)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_377.In(logic_uScriptAct_Log_Prefix_377, logic_uScriptAct_Log_Target_377, logic_uScriptAct_Log_Postfix_377);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_378()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("25d30c87-deb7-4abb-8bef-738a7bca5487", "Normalize Vector2", Relay_In_378)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_NormalizeVector2_uScriptAct_NormalizeVector2_378.In(logic_uScriptAct_NormalizeVector2_Target_378, out logic_uScriptAct_NormalizeVector2_NormalizedVector_378);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_NormalizeVector2_uScriptAct_NormalizeVector2_378.Out;
         
         if ( test_0 == true )
         {
            Relay_In_380();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Normalize Vector2.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_379()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ae67991e-cb5b-44e6-94e2-5ee4a43f7732", "Normalize Vector4", Relay_In_379)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_NormalizeVector4_uScriptAct_NormalizeVector4_379.In(logic_uScriptAct_NormalizeVector4_Target_379, out logic_uScriptAct_NormalizeVector4_NormalizedVector_379);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_NormalizeVector4_uScriptAct_NormalizeVector4_379.Out;
         
         if ( test_0 == true )
         {
            Relay_In_380();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Normalize Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_380()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("21982441-6b9e-4580-9651-cfaa573d4892", "Normalize Vector3", Relay_In_380)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_NormalizeVector3_uScriptAct_NormalizeVector3_380.In(logic_uScriptAct_NormalizeVector3_Target_380, out logic_uScriptAct_NormalizeVector3_NormalizedVector_380);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_NormalizeVector3_uScriptAct_NormalizeVector3_380.Out;
         
         if ( test_0 == true )
         {
            Relay_In_381();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Normalize Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_381()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7daee13c-10c5-4f0d-b41e-58b6b7456de8", "Rotate", Relay_In_381)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Rotate_uScriptAct_Rotate_381.In(logic_uScriptAct_Rotate_Target_381, logic_uScriptAct_Rotate_Degrees_381, logic_uScriptAct_Rotate_Axis_381, logic_uScriptAct_Rotate_Seconds_381, logic_uScriptAct_Rotate_Loop_381);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Rotate_uScriptAct_Rotate_381.Out;
         
         if ( test_0 == true )
         {
            Relay_In_382();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Rotate.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_382()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d80098cd-a1b3-419f-aabe-d20ee92c7974", "Set Euler Angles", Relay_In_382)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetGameObjectEulerAngles_uScriptAct_SetGameObjectEulerAngles_382.In(logic_uScriptAct_SetGameObjectEulerAngles_Target_382, logic_uScriptAct_SetGameObjectEulerAngles_X_Axis_382, logic_uScriptAct_SetGameObjectEulerAngles_PreserveX_Axis_382, logic_uScriptAct_SetGameObjectEulerAngles_Y_Axis_382, logic_uScriptAct_SetGameObjectEulerAngles_PreserveY_Axis_382, logic_uScriptAct_SetGameObjectEulerAngles_Z_Axis_382, logic_uScriptAct_SetGameObjectEulerAngles_PreserveZ_Axis_382, logic_uScriptAct_SetGameObjectEulerAngles_AsLocal_382);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetGameObjectEulerAngles_uScriptAct_SetGameObjectEulerAngles_382.Out;
         
         if ( test_0 == true )
         {
            Relay_In_383();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Euler Angles.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_383()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8d0f4027-8bf3-46fa-83c4-28fa64d847ec", "Set Position", Relay_In_383)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetGameObjectPosition_uScriptAct_SetGameObjectPosition_383.In(logic_uScriptAct_SetGameObjectPosition_Target_383, logic_uScriptAct_SetGameObjectPosition_Position_383, logic_uScriptAct_SetGameObjectPosition_AsOffset_383, logic_uScriptAct_SetGameObjectPosition_AsLocal_383);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetGameObjectPosition_uScriptAct_SetGameObjectPosition_383.Out;
         
         if ( test_0 == true )
         {
            Relay_In_384();
            Relay_In_385();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Position.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_384()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e43a5b5c-8394-4a52-a494-e62b72b46d04", "Set Random Position", Relay_In_384)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomPosition_uScriptAct_SetRandomPosition_384.In(logic_uScriptAct_SetRandomPosition_Target_384, logic_uScriptAct_SetRandomPosition_Origin_384, logic_uScriptAct_SetRandomPosition_MinX_384, logic_uScriptAct_SetRandomPosition_MaxX_384, logic_uScriptAct_SetRandomPosition_MinY_384, logic_uScriptAct_SetRandomPosition_MaxY_384, logic_uScriptAct_SetRandomPosition_MinZ_384, logic_uScriptAct_SetRandomPosition_MaxZ_384, logic_uScriptAct_SetRandomPosition_PreserveX_Axis_384, logic_uScriptAct_SetRandomPosition_PreserveY_Axis_384, logic_uScriptAct_SetRandomPosition_PreserveZ_Axis_384, logic_uScriptAct_SetRandomPosition_AsOffset_384);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomPosition_uScriptAct_SetRandomPosition_384.Out;
         
         if ( test_0 == true )
         {
            Relay_In_386();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Position.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_385()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ddd877a8-5319-4e0d-a78a-8474850d6311", "Set Random Rotation", Relay_In_385)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomRotation_uScriptAct_SetRandomRotation_385.In(logic_uScriptAct_SetRandomRotation_Target_385, logic_uScriptAct_SetRandomRotation_MinX_385, logic_uScriptAct_SetRandomRotation_MaxX_385, logic_uScriptAct_SetRandomRotation_MinY_385, logic_uScriptAct_SetRandomRotation_MaxY_385, logic_uScriptAct_SetRandomRotation_MinZ_385, logic_uScriptAct_SetRandomRotation_MaxZ_385, logic_uScriptAct_SetRandomRotation_PreserveX_Axis_385, logic_uScriptAct_SetRandomRotation_PreserveY_Axis_385, logic_uScriptAct_SetRandomRotation_PreserveZ_Axis_385);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomRotation_uScriptAct_SetRandomRotation_385.Out;
         
         if ( test_0 == true )
         {
            Relay_In_386();
            Relay_In_389();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Rotation.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_386()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1d591df0-f2b7-406a-b8f2-40cad553010c", "Set Random Scale", Relay_In_386)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetRandomScale_uScriptAct_SetRandomScale_386.In(logic_uScriptAct_SetRandomScale_Target_386, logic_uScriptAct_SetRandomScale_MinX_386, logic_uScriptAct_SetRandomScale_MaxX_386, logic_uScriptAct_SetRandomScale_MinY_386, logic_uScriptAct_SetRandomScale_MaxY_386, logic_uScriptAct_SetRandomScale_MinZ_386, logic_uScriptAct_SetRandomScale_MaxZ_386, logic_uScriptAct_SetRandomScale_PreserveX_Axis_386, logic_uScriptAct_SetRandomScale_PreserveY_Axis_386, logic_uScriptAct_SetRandomScale_PreserveZ_Axis_386, logic_uScriptAct_SetRandomScale_Uniform_386);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetRandomScale_uScriptAct_SetRandomScale_386.Out;
         
         if ( test_0 == true )
         {
            Relay_In_387();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Random Scale.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_387()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("09717985-9473-465e-b215-73f0a48f7311", "Set Rotation", Relay_In_387)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SetGameObjectRotation_uScriptAct_SetGameObjectRotation_387.In(logic_uScriptAct_SetGameObjectRotation_Target_387, logic_uScriptAct_SetGameObjectRotation_XDegrees_387, logic_uScriptAct_SetGameObjectRotation_YDegrees_387, logic_uScriptAct_SetGameObjectRotation_ZDegrees_387, logic_uScriptAct_SetGameObjectRotation_IgnoreX_387, logic_uScriptAct_SetGameObjectRotation_IgnoreY_387, logic_uScriptAct_SetGameObjectRotation_IgnoreZ_387, logic_uScriptAct_SetGameObjectRotation_CoordinateSystem_387, logic_uScriptAct_SetGameObjectRotation_AsOffset_387);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetGameObjectRotation_uScriptAct_SetGameObjectRotation_387.Out;
         
         if ( test_0 == true )
         {
            Relay_In_388();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Rotation.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_388()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e94265e1-84df-4497-9c03-bc9231a8ef1f", "Set Scale", Relay_In_388)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_SetGameObjectScale_uScriptAct_SetGameObjectScale_388.In(logic_uScriptAct_SetGameObjectScale_Target_388, logic_uScriptAct_SetGameObjectScale_Scale_388);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetGameObjectScale_uScriptAct_SetGameObjectScale_388.Out;
         
         if ( test_0 == true )
         {
            Relay_In_390();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Scale.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_FinishedSpawning_389()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("819422bd-738d-470b-add8-dcab19e3aa10", "Spawn Prefab", Relay_FinishedSpawning_389)) return; 
         Relay_In_391();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Spawn Prefab.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_389()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("819422bd-738d-470b-add8-dcab19e3aa10", "Spawn Prefab", Relay_In_389)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SpawnPrefab_uScriptAct_SpawnPrefab_389.In(logic_uScriptAct_SpawnPrefab_PrefabName_389, logic_uScriptAct_SpawnPrefab_ResourcePath_389, logic_uScriptAct_SpawnPrefab_SpawnPoint_389, logic_uScriptAct_SpawnPrefab_SpawnedName_389, logic_uScriptAct_SpawnPrefab_LocationOffset_389, out logic_uScriptAct_SpawnPrefab_SpawnedGameObject_389, out logic_uScriptAct_SpawnPrefab_SpawnedInstancedID_389);
         local_392_UnityEngine_GameObject = logic_uScriptAct_SpawnPrefab_SpawnedGameObject_389;
         {
            //if our game object reference was changed then we need to reset event listeners
            if ( local_392_UnityEngine_GameObject_previous != local_392_UnityEngine_GameObject || false == m_RegisteredForEvents )
            {
               //tear down old listeners
               
               local_392_UnityEngine_GameObject_previous = local_392_UnityEngine_GameObject;
               
               //setup new listeners
            }
         }
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SpawnPrefab_uScriptAct_SpawnPrefab_389.Immediate;
         
         if ( test_0 == true )
         {
            Relay_In_390();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Spawn Prefab.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_FinishedSpawning_390()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f358e570-42cf-4985-8fef-347a7a2db5a7", "Spawn Prefab At Location", Relay_FinishedSpawning_390)) return; 
         Relay_In_393();
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Spawn Prefab At Location.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_390()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f358e570-42cf-4985-8fef-347a7a2db5a7", "Spawn Prefab At Location", Relay_In_390)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SpawnPrefabAtLocation_uScriptAct_SpawnPrefabAtLocation_390.In(logic_uScriptAct_SpawnPrefabAtLocation_PrefabName_390, logic_uScriptAct_SpawnPrefabAtLocation_ResourcePath_390, logic_uScriptAct_SpawnPrefabAtLocation_SpawnPosition_390, logic_uScriptAct_SpawnPrefabAtLocation_SpawnRotation_390, logic_uScriptAct_SpawnPrefabAtLocation_SpawnedName_390, out logic_uScriptAct_SpawnPrefabAtLocation_SpawnedGameObject_390, out logic_uScriptAct_SpawnPrefabAtLocation_SpawnedInstancedID_390);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SpawnPrefabAtLocation_uScriptAct_SpawnPrefabAtLocation_390.Immediate;
         
         if ( test_0 == true )
         {
            Relay_In_393();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Spawn Prefab At Location.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_391()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("db8434f7-2dd0-4f48-8a3c-3118b59f4277", "Teleport", Relay_In_391)) return; 
         {
            {
               List<UnityEngine.GameObject> properties = new List<UnityEngine.GameObject>();
               {
                  //if our game object reference was changed then we need to reset event listeners
                  if ( local_392_UnityEngine_GameObject_previous != local_392_UnityEngine_GameObject || false == m_RegisteredForEvents )
                  {
                     //tear down old listeners
                     
                     local_392_UnityEngine_GameObject_previous = local_392_UnityEngine_GameObject;
                     
                     //setup new listeners
                  }
               }
               properties.Add((UnityEngine.GameObject)local_392_UnityEngine_GameObject);
               logic_uScriptAct_Teleport_Target_391 = properties.ToArray();
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Teleport_uScriptAct_Teleport_391.In(logic_uScriptAct_Teleport_Target_391, logic_uScriptAct_Teleport_Destination_391, logic_uScriptAct_Teleport_UpdateRotation_391);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Teleport_uScriptAct_Teleport_391.Out;
         
         if ( test_0 == true )
         {
            Relay_In_393();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Teleport.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_393()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f6cceeb7-3892-4c0d-b2f8-8bcfafc063d8", "Log", Relay_In_393)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_393.In(logic_uScriptAct_Log_Prefix_393, logic_uScriptAct_Log_Target_393, logic_uScriptAct_Log_Postfix_393);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_395()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ad1598b6-f669-4132-a251-29638f86c2b9", "Input Events Filter", Relay_In_395)) return; 
         {
            {
               logic_uScriptAct_OnInputEventFilter_KeyCode_395 = local_394_UnityEngine_KeyCode;
               
            }
         }
         logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_395.In(logic_uScriptAct_OnInputEventFilter_KeyCode_395);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_395.KeyDown;
         bool test_1 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_395.KeyHeld;
         bool test_2 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_395.KeyUp;
         
         if ( test_0 == true )
         {
            Relay_Begin_397();
         }
         if ( test_1 == true )
         {
            Relay_Resume_397();
         }
         if ( test_2 == true )
         {
            Relay_Stop_397();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Input Events Filter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_KeyEvent_396()
   {
      if (true == CheckDebugBreak("377c9d39-251f-47c3-bb69-6e669ded1fba", "Input Events", Relay_KeyEvent_396)) return; 
      Relay_In_395();
   }
   
   void Relay_Begin_397()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3910028f-e211-4ea8-9223-e669d11aebdb", "Interpolate Color Linear", Relay_Begin_397)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Begin(logic_uScriptAct_InterpolateColorLinear_startValue_397, logic_uScriptAct_InterpolateColorLinear_endValue_397, logic_uScriptAct_InterpolateColorLinear_time_397, logic_uScriptAct_InterpolateColorLinear_loopType_397, logic_uScriptAct_InterpolateColorLinear_loopDelay_397, logic_uScriptAct_InterpolateColorLinear_loopCount_397, out logic_uScriptAct_InterpolateColorLinear_currentValue_397);
         logic_uScriptAct_InterpolateColorLinear_Driven_397 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Started;
         bool test_1 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_400();
         }
         if ( test_1 == true )
         {
            Relay_Stop_400();
         }
         if ( test_2 == true )
         {
            Relay_Resume_400();
         }
         if ( test_3 == true )
         {
            Relay_In_407();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Color Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_397()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3910028f-e211-4ea8-9223-e669d11aebdb", "Interpolate Color Linear", Relay_Stop_397)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Stop(logic_uScriptAct_InterpolateColorLinear_startValue_397, logic_uScriptAct_InterpolateColorLinear_endValue_397, logic_uScriptAct_InterpolateColorLinear_time_397, logic_uScriptAct_InterpolateColorLinear_loopType_397, logic_uScriptAct_InterpolateColorLinear_loopDelay_397, logic_uScriptAct_InterpolateColorLinear_loopCount_397, out logic_uScriptAct_InterpolateColorLinear_currentValue_397);
         logic_uScriptAct_InterpolateColorLinear_Driven_397 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Started;
         bool test_1 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_400();
         }
         if ( test_1 == true )
         {
            Relay_Stop_400();
         }
         if ( test_2 == true )
         {
            Relay_Resume_400();
         }
         if ( test_3 == true )
         {
            Relay_In_407();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Color Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_397()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3910028f-e211-4ea8-9223-e669d11aebdb", "Interpolate Color Linear", Relay_Resume_397)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Resume(logic_uScriptAct_InterpolateColorLinear_startValue_397, logic_uScriptAct_InterpolateColorLinear_endValue_397, logic_uScriptAct_InterpolateColorLinear_time_397, logic_uScriptAct_InterpolateColorLinear_loopType_397, logic_uScriptAct_InterpolateColorLinear_loopDelay_397, logic_uScriptAct_InterpolateColorLinear_loopCount_397, out logic_uScriptAct_InterpolateColorLinear_currentValue_397);
         logic_uScriptAct_InterpolateColorLinear_Driven_397 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Started;
         bool test_1 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_400();
         }
         if ( test_1 == true )
         {
            Relay_Stop_400();
         }
         if ( test_2 == true )
         {
            Relay_Resume_400();
         }
         if ( test_3 == true )
         {
            Relay_In_407();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Color Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_397( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateColorLinear_Driven_397 = logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Driven(out logic_uScriptAct_InterpolateColorLinear_currentValue_397);
         if ( true == logic_uScriptAct_InterpolateColorLinear_Driven_397 )
         {
            if ( logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Started == true )
            {
               Relay_Begin_400();
            }
            if ( logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Stopped == true )
            {
               Relay_Stop_400();
            }
            if ( logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Interpolating == true )
            {
               Relay_Resume_400();
            }
            if ( logic_uScriptAct_InterpolateColorLinear_uScriptAct_InterpolateColorLinear_397.Finished == true )
            {
               Relay_In_407();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Color Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_Begin_398()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c84595f2-dcf4-4226-83cb-e31a0b45a90a", "Interpolate Float Linear", Relay_Begin_398)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Begin(logic_uScriptAct_InterpolateFloatLinear_startValue_398, logic_uScriptAct_InterpolateFloatLinear_endValue_398, logic_uScriptAct_InterpolateFloatLinear_time_398, logic_uScriptAct_InterpolateFloatLinear_loopType_398, logic_uScriptAct_InterpolateFloatLinear_loopDelay_398, logic_uScriptAct_InterpolateFloatLinear_loopCount_398, out logic_uScriptAct_InterpolateFloatLinear_currentValue_398);
         logic_uScriptAct_InterpolateFloatLinear_Driven_398 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Started;
         bool test_1 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_399();
         }
         if ( test_1 == true )
         {
            Relay_Stop_399();
         }
         if ( test_2 == true )
         {
            Relay_Resume_399();
         }
         if ( test_3 == true )
         {
            Relay_Resume_399();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Float Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_398()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c84595f2-dcf4-4226-83cb-e31a0b45a90a", "Interpolate Float Linear", Relay_Stop_398)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Stop(logic_uScriptAct_InterpolateFloatLinear_startValue_398, logic_uScriptAct_InterpolateFloatLinear_endValue_398, logic_uScriptAct_InterpolateFloatLinear_time_398, logic_uScriptAct_InterpolateFloatLinear_loopType_398, logic_uScriptAct_InterpolateFloatLinear_loopDelay_398, logic_uScriptAct_InterpolateFloatLinear_loopCount_398, out logic_uScriptAct_InterpolateFloatLinear_currentValue_398);
         logic_uScriptAct_InterpolateFloatLinear_Driven_398 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Started;
         bool test_1 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_399();
         }
         if ( test_1 == true )
         {
            Relay_Stop_399();
         }
         if ( test_2 == true )
         {
            Relay_Resume_399();
         }
         if ( test_3 == true )
         {
            Relay_Resume_399();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Float Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_398()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c84595f2-dcf4-4226-83cb-e31a0b45a90a", "Interpolate Float Linear", Relay_Resume_398)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Resume(logic_uScriptAct_InterpolateFloatLinear_startValue_398, logic_uScriptAct_InterpolateFloatLinear_endValue_398, logic_uScriptAct_InterpolateFloatLinear_time_398, logic_uScriptAct_InterpolateFloatLinear_loopType_398, logic_uScriptAct_InterpolateFloatLinear_loopDelay_398, logic_uScriptAct_InterpolateFloatLinear_loopCount_398, out logic_uScriptAct_InterpolateFloatLinear_currentValue_398);
         logic_uScriptAct_InterpolateFloatLinear_Driven_398 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Started;
         bool test_1 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_399();
         }
         if ( test_1 == true )
         {
            Relay_Stop_399();
         }
         if ( test_2 == true )
         {
            Relay_Resume_399();
         }
         if ( test_3 == true )
         {
            Relay_Resume_399();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Float Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_398( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateFloatLinear_Driven_398 = logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Driven(out logic_uScriptAct_InterpolateFloatLinear_currentValue_398);
         if ( true == logic_uScriptAct_InterpolateFloatLinear_Driven_398 )
         {
            if ( logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Started == true )
            {
               Relay_Begin_399();
            }
            if ( logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Stopped == true )
            {
               Relay_Stop_399();
            }
            if ( logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Interpolating == true )
            {
               Relay_Resume_399();
            }
            if ( logic_uScriptAct_InterpolateFloatLinear_uScriptAct_InterpolateFloatLinear_398.Finished == true )
            {
               Relay_Resume_399();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Float Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_Begin_399()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6390e41d-0450-424d-8be0-7b1a9dc81934", "Interpolate Int Linear", Relay_Begin_399)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Begin(logic_uScriptAct_InterpolateIntLinear_startValue_399, logic_uScriptAct_InterpolateIntLinear_endValue_399, logic_uScriptAct_InterpolateIntLinear_time_399, logic_uScriptAct_InterpolateIntLinear_loopType_399, logic_uScriptAct_InterpolateIntLinear_loopDelay_399, logic_uScriptAct_InterpolateIntLinear_loopCount_399, out logic_uScriptAct_InterpolateIntLinear_currentValue_399);
         logic_uScriptAct_InterpolateIntLinear_Driven_399 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Started;
         bool test_1 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_402();
         }
         if ( test_1 == true )
         {
            Relay_Stop_402();
         }
         if ( test_2 == true )
         {
            Relay_Resume_402();
         }
         if ( test_3 == true )
         {
            Relay_Resume_402();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Int Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_399()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6390e41d-0450-424d-8be0-7b1a9dc81934", "Interpolate Int Linear", Relay_Stop_399)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Stop(logic_uScriptAct_InterpolateIntLinear_startValue_399, logic_uScriptAct_InterpolateIntLinear_endValue_399, logic_uScriptAct_InterpolateIntLinear_time_399, logic_uScriptAct_InterpolateIntLinear_loopType_399, logic_uScriptAct_InterpolateIntLinear_loopDelay_399, logic_uScriptAct_InterpolateIntLinear_loopCount_399, out logic_uScriptAct_InterpolateIntLinear_currentValue_399);
         logic_uScriptAct_InterpolateIntLinear_Driven_399 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Started;
         bool test_1 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_402();
         }
         if ( test_1 == true )
         {
            Relay_Stop_402();
         }
         if ( test_2 == true )
         {
            Relay_Resume_402();
         }
         if ( test_3 == true )
         {
            Relay_Resume_402();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Int Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_399()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6390e41d-0450-424d-8be0-7b1a9dc81934", "Interpolate Int Linear", Relay_Resume_399)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Resume(logic_uScriptAct_InterpolateIntLinear_startValue_399, logic_uScriptAct_InterpolateIntLinear_endValue_399, logic_uScriptAct_InterpolateIntLinear_time_399, logic_uScriptAct_InterpolateIntLinear_loopType_399, logic_uScriptAct_InterpolateIntLinear_loopDelay_399, logic_uScriptAct_InterpolateIntLinear_loopCount_399, out logic_uScriptAct_InterpolateIntLinear_currentValue_399);
         logic_uScriptAct_InterpolateIntLinear_Driven_399 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Started;
         bool test_1 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_402();
         }
         if ( test_1 == true )
         {
            Relay_Stop_402();
         }
         if ( test_2 == true )
         {
            Relay_Resume_402();
         }
         if ( test_3 == true )
         {
            Relay_Resume_402();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Int Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_399( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateIntLinear_Driven_399 = logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Driven(out logic_uScriptAct_InterpolateIntLinear_currentValue_399);
         if ( true == logic_uScriptAct_InterpolateIntLinear_Driven_399 )
         {
            if ( logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Started == true )
            {
               Relay_Begin_402();
            }
            if ( logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Stopped == true )
            {
               Relay_Stop_402();
            }
            if ( logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Interpolating == true )
            {
               Relay_Resume_402();
            }
            if ( logic_uScriptAct_InterpolateIntLinear_uScriptAct_InterpolateIntLinear_399.Finished == true )
            {
               Relay_Resume_402();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Int Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_Begin_400()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6b94aeec-f228-4fc1-bf90-ec09e0aabffd", "Interpolate Quaternion Linear", Relay_Begin_400)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Begin(logic_uScriptAct_InterpolateQuaternionLinear_startValue_400, logic_uScriptAct_InterpolateQuaternionLinear_endValue_400, logic_uScriptAct_InterpolateQuaternionLinear_time_400, logic_uScriptAct_InterpolateQuaternionLinear_loopType_400, logic_uScriptAct_InterpolateQuaternionLinear_loopDelay_400, logic_uScriptAct_InterpolateQuaternionLinear_loopCount_400, out logic_uScriptAct_InterpolateQuaternionLinear_currentValue_400);
         logic_uScriptAct_InterpolateQuaternionLinear_Driven_400 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Started;
         bool test_1 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Interpolating;
         
         if ( test_0 == true )
         {
            Relay_Begin_398();
         }
         if ( test_1 == true )
         {
            Relay_Stop_398();
         }
         if ( test_2 == true )
         {
            Relay_Resume_398();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Quaternion Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_400()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6b94aeec-f228-4fc1-bf90-ec09e0aabffd", "Interpolate Quaternion Linear", Relay_Stop_400)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Stop(logic_uScriptAct_InterpolateQuaternionLinear_startValue_400, logic_uScriptAct_InterpolateQuaternionLinear_endValue_400, logic_uScriptAct_InterpolateQuaternionLinear_time_400, logic_uScriptAct_InterpolateQuaternionLinear_loopType_400, logic_uScriptAct_InterpolateQuaternionLinear_loopDelay_400, logic_uScriptAct_InterpolateQuaternionLinear_loopCount_400, out logic_uScriptAct_InterpolateQuaternionLinear_currentValue_400);
         logic_uScriptAct_InterpolateQuaternionLinear_Driven_400 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Started;
         bool test_1 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Interpolating;
         
         if ( test_0 == true )
         {
            Relay_Begin_398();
         }
         if ( test_1 == true )
         {
            Relay_Stop_398();
         }
         if ( test_2 == true )
         {
            Relay_Resume_398();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Quaternion Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_400()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6b94aeec-f228-4fc1-bf90-ec09e0aabffd", "Interpolate Quaternion Linear", Relay_Resume_400)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Resume(logic_uScriptAct_InterpolateQuaternionLinear_startValue_400, logic_uScriptAct_InterpolateQuaternionLinear_endValue_400, logic_uScriptAct_InterpolateQuaternionLinear_time_400, logic_uScriptAct_InterpolateQuaternionLinear_loopType_400, logic_uScriptAct_InterpolateQuaternionLinear_loopDelay_400, logic_uScriptAct_InterpolateQuaternionLinear_loopCount_400, out logic_uScriptAct_InterpolateQuaternionLinear_currentValue_400);
         logic_uScriptAct_InterpolateQuaternionLinear_Driven_400 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Started;
         bool test_1 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Interpolating;
         
         if ( test_0 == true )
         {
            Relay_Begin_398();
         }
         if ( test_1 == true )
         {
            Relay_Stop_398();
         }
         if ( test_2 == true )
         {
            Relay_Resume_398();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Quaternion Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_400( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateQuaternionLinear_Driven_400 = logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Driven(out logic_uScriptAct_InterpolateQuaternionLinear_currentValue_400);
         if ( true == logic_uScriptAct_InterpolateQuaternionLinear_Driven_400 )
         {
            if ( logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Started == true )
            {
               Relay_Begin_398();
            }
            if ( logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Stopped == true )
            {
               Relay_Stop_398();
            }
            if ( logic_uScriptAct_InterpolateQuaternionLinear_uScriptAct_InterpolateQuaternionLinear_400.Interpolating == true )
            {
               Relay_Resume_398();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Quaternion Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_Begin_401()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ceff65c9-4ce2-40d0-90d4-2b3bb7cbd6d0", "Interpolate Quaternion Slerp", Relay_Begin_401)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Begin(logic_uScriptAct_InterpolateQuaternionSlerp_startValue_401, logic_uScriptAct_InterpolateQuaternionSlerp_endValue_401, logic_uScriptAct_InterpolateQuaternionSlerp_time_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopType_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopDelay_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopCount_401, out logic_uScriptAct_InterpolateQuaternionSlerp_currentValue_401);
         logic_uScriptAct_InterpolateQuaternionSlerp_Driven_401 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Started;
         bool test_1 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_403();
         }
         if ( test_1 == true )
         {
            Relay_Stop_403();
         }
         if ( test_2 == true )
         {
            Relay_Resume_403();
         }
         if ( test_3 == true )
         {
            Relay_Resume_403();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Quaternion Slerp.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_401()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ceff65c9-4ce2-40d0-90d4-2b3bb7cbd6d0", "Interpolate Quaternion Slerp", Relay_Stop_401)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Stop(logic_uScriptAct_InterpolateQuaternionSlerp_startValue_401, logic_uScriptAct_InterpolateQuaternionSlerp_endValue_401, logic_uScriptAct_InterpolateQuaternionSlerp_time_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopType_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopDelay_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopCount_401, out logic_uScriptAct_InterpolateQuaternionSlerp_currentValue_401);
         logic_uScriptAct_InterpolateQuaternionSlerp_Driven_401 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Started;
         bool test_1 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_403();
         }
         if ( test_1 == true )
         {
            Relay_Stop_403();
         }
         if ( test_2 == true )
         {
            Relay_Resume_403();
         }
         if ( test_3 == true )
         {
            Relay_Resume_403();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Quaternion Slerp.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_401()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ceff65c9-4ce2-40d0-90d4-2b3bb7cbd6d0", "Interpolate Quaternion Slerp", Relay_Resume_401)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Resume(logic_uScriptAct_InterpolateQuaternionSlerp_startValue_401, logic_uScriptAct_InterpolateQuaternionSlerp_endValue_401, logic_uScriptAct_InterpolateQuaternionSlerp_time_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopType_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopDelay_401, logic_uScriptAct_InterpolateQuaternionSlerp_loopCount_401, out logic_uScriptAct_InterpolateQuaternionSlerp_currentValue_401);
         logic_uScriptAct_InterpolateQuaternionSlerp_Driven_401 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Started;
         bool test_1 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_403();
         }
         if ( test_1 == true )
         {
            Relay_Stop_403();
         }
         if ( test_2 == true )
         {
            Relay_Resume_403();
         }
         if ( test_3 == true )
         {
            Relay_Resume_403();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Quaternion Slerp.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_401( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateQuaternionSlerp_Driven_401 = logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Driven(out logic_uScriptAct_InterpolateQuaternionSlerp_currentValue_401);
         if ( true == logic_uScriptAct_InterpolateQuaternionSlerp_Driven_401 )
         {
            if ( logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Started == true )
            {
               Relay_Begin_403();
            }
            if ( logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Stopped == true )
            {
               Relay_Stop_403();
            }
            if ( logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Interpolating == true )
            {
               Relay_Resume_403();
            }
            if ( logic_uScriptAct_InterpolateQuaternionSlerp_uScriptAct_InterpolateQuaternionSlerp_401.Finished == true )
            {
               Relay_Resume_403();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Quaternion Slerp.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_Begin_402()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("342e2b98-9edf-4e16-9fee-39a1c1f42e06", "Interpolate Rect Linear", Relay_Begin_402)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Begin(logic_uScriptAct_InterpolateRectLinear_startValue_402, logic_uScriptAct_InterpolateRectLinear_endValue_402, logic_uScriptAct_InterpolateRectLinear_time_402, logic_uScriptAct_InterpolateRectLinear_loopType_402, logic_uScriptAct_InterpolateRectLinear_loopDelay_402, logic_uScriptAct_InterpolateRectLinear_loopCount_402, out logic_uScriptAct_InterpolateRectLinear_currentValue_402);
         logic_uScriptAct_InterpolateRectLinear_Driven_402 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Started;
         bool test_1 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_401();
         }
         if ( test_1 == true )
         {
            Relay_Stop_401();
         }
         if ( test_2 == true )
         {
            Relay_Resume_401();
         }
         if ( test_3 == true )
         {
            Relay_Resume_401();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Rect Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_402()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("342e2b98-9edf-4e16-9fee-39a1c1f42e06", "Interpolate Rect Linear", Relay_Stop_402)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Stop(logic_uScriptAct_InterpolateRectLinear_startValue_402, logic_uScriptAct_InterpolateRectLinear_endValue_402, logic_uScriptAct_InterpolateRectLinear_time_402, logic_uScriptAct_InterpolateRectLinear_loopType_402, logic_uScriptAct_InterpolateRectLinear_loopDelay_402, logic_uScriptAct_InterpolateRectLinear_loopCount_402, out logic_uScriptAct_InterpolateRectLinear_currentValue_402);
         logic_uScriptAct_InterpolateRectLinear_Driven_402 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Started;
         bool test_1 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_401();
         }
         if ( test_1 == true )
         {
            Relay_Stop_401();
         }
         if ( test_2 == true )
         {
            Relay_Resume_401();
         }
         if ( test_3 == true )
         {
            Relay_Resume_401();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Rect Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_402()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("342e2b98-9edf-4e16-9fee-39a1c1f42e06", "Interpolate Rect Linear", Relay_Resume_402)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Resume(logic_uScriptAct_InterpolateRectLinear_startValue_402, logic_uScriptAct_InterpolateRectLinear_endValue_402, logic_uScriptAct_InterpolateRectLinear_time_402, logic_uScriptAct_InterpolateRectLinear_loopType_402, logic_uScriptAct_InterpolateRectLinear_loopDelay_402, logic_uScriptAct_InterpolateRectLinear_loopCount_402, out logic_uScriptAct_InterpolateRectLinear_currentValue_402);
         logic_uScriptAct_InterpolateRectLinear_Driven_402 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Started;
         bool test_1 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_401();
         }
         if ( test_1 == true )
         {
            Relay_Stop_401();
         }
         if ( test_2 == true )
         {
            Relay_Resume_401();
         }
         if ( test_3 == true )
         {
            Relay_Resume_401();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Rect Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_402( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateRectLinear_Driven_402 = logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Driven(out logic_uScriptAct_InterpolateRectLinear_currentValue_402);
         if ( true == logic_uScriptAct_InterpolateRectLinear_Driven_402 )
         {
            if ( logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Started == true )
            {
               Relay_Begin_401();
            }
            if ( logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Stopped == true )
            {
               Relay_Stop_401();
            }
            if ( logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Interpolating == true )
            {
               Relay_Resume_401();
            }
            if ( logic_uScriptAct_InterpolateRectLinear_uScriptAct_InterpolateRectLinear_402.Finished == true )
            {
               Relay_Resume_401();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Rect Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_Begin_403()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8319a720-f2fe-42a3-9d3b-73ba81f44a97", "Interpolate Vector2 Linear", Relay_Begin_403)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Begin(logic_uScriptAct_InterpolateVector2Linear_startValue_403, logic_uScriptAct_InterpolateVector2Linear_endValue_403, logic_uScriptAct_InterpolateVector2Linear_time_403, logic_uScriptAct_InterpolateVector2Linear_loopType_403, logic_uScriptAct_InterpolateVector2Linear_loopDelay_403, logic_uScriptAct_InterpolateVector2Linear_loopCount_403, out logic_uScriptAct_InterpolateVector2Linear_currentValue_403);
         logic_uScriptAct_InterpolateVector2Linear_Driven_403 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_405();
         }
         if ( test_1 == true )
         {
            Relay_Stop_405();
         }
         if ( test_2 == true )
         {
            Relay_Resume_405();
         }
         if ( test_3 == true )
         {
            Relay_Resume_405();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector2 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_403()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8319a720-f2fe-42a3-9d3b-73ba81f44a97", "Interpolate Vector2 Linear", Relay_Stop_403)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Stop(logic_uScriptAct_InterpolateVector2Linear_startValue_403, logic_uScriptAct_InterpolateVector2Linear_endValue_403, logic_uScriptAct_InterpolateVector2Linear_time_403, logic_uScriptAct_InterpolateVector2Linear_loopType_403, logic_uScriptAct_InterpolateVector2Linear_loopDelay_403, logic_uScriptAct_InterpolateVector2Linear_loopCount_403, out logic_uScriptAct_InterpolateVector2Linear_currentValue_403);
         logic_uScriptAct_InterpolateVector2Linear_Driven_403 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_405();
         }
         if ( test_1 == true )
         {
            Relay_Stop_405();
         }
         if ( test_2 == true )
         {
            Relay_Resume_405();
         }
         if ( test_3 == true )
         {
            Relay_Resume_405();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector2 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_403()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8319a720-f2fe-42a3-9d3b-73ba81f44a97", "Interpolate Vector2 Linear", Relay_Resume_403)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Resume(logic_uScriptAct_InterpolateVector2Linear_startValue_403, logic_uScriptAct_InterpolateVector2Linear_endValue_403, logic_uScriptAct_InterpolateVector2Linear_time_403, logic_uScriptAct_InterpolateVector2Linear_loopType_403, logic_uScriptAct_InterpolateVector2Linear_loopDelay_403, logic_uScriptAct_InterpolateVector2Linear_loopCount_403, out logic_uScriptAct_InterpolateVector2Linear_currentValue_403);
         logic_uScriptAct_InterpolateVector2Linear_Driven_403 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_405();
         }
         if ( test_1 == true )
         {
            Relay_Stop_405();
         }
         if ( test_2 == true )
         {
            Relay_Resume_405();
         }
         if ( test_3 == true )
         {
            Relay_Resume_405();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector2 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_403( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector2Linear_Driven_403 = logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Driven(out logic_uScriptAct_InterpolateVector2Linear_currentValue_403);
         if ( true == logic_uScriptAct_InterpolateVector2Linear_Driven_403 )
         {
            if ( logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Started == true )
            {
               Relay_Begin_405();
            }
            if ( logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Stopped == true )
            {
               Relay_Stop_405();
            }
            if ( logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Interpolating == true )
            {
               Relay_Resume_405();
            }
            if ( logic_uScriptAct_InterpolateVector2Linear_uScriptAct_InterpolateVector2Linear_403.Finished == true )
            {
               Relay_Resume_405();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector2 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_Begin_404()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("87c2b392-0e7f-40a5-bbaa-6ecf2fdceb21", "Interpolate Vector3 Linear", Relay_Begin_404)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Begin(logic_uScriptAct_InterpolateVector3Linear_startValue_404, logic_uScriptAct_InterpolateVector3Linear_endValue_404, logic_uScriptAct_InterpolateVector3Linear_time_404, logic_uScriptAct_InterpolateVector3Linear_loopType_404, logic_uScriptAct_InterpolateVector3Linear_loopDelay_404, logic_uScriptAct_InterpolateVector3Linear_loopCount_404, out logic_uScriptAct_InterpolateVector3Linear_currentValue_404);
         logic_uScriptAct_InterpolateVector3Linear_Driven_404 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Finished;
         
         if ( test_0 == true )
         {
            Relay_In_406();
         }
         if ( test_1 == true )
         {
            Relay_In_406();
         }
         if ( test_2 == true )
         {
            Relay_In_406();
         }
         if ( test_3 == true )
         {
            Relay_In_406();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector3 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_404()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("87c2b392-0e7f-40a5-bbaa-6ecf2fdceb21", "Interpolate Vector3 Linear", Relay_Stop_404)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Stop(logic_uScriptAct_InterpolateVector3Linear_startValue_404, logic_uScriptAct_InterpolateVector3Linear_endValue_404, logic_uScriptAct_InterpolateVector3Linear_time_404, logic_uScriptAct_InterpolateVector3Linear_loopType_404, logic_uScriptAct_InterpolateVector3Linear_loopDelay_404, logic_uScriptAct_InterpolateVector3Linear_loopCount_404, out logic_uScriptAct_InterpolateVector3Linear_currentValue_404);
         logic_uScriptAct_InterpolateVector3Linear_Driven_404 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Finished;
         
         if ( test_0 == true )
         {
            Relay_In_406();
         }
         if ( test_1 == true )
         {
            Relay_In_406();
         }
         if ( test_2 == true )
         {
            Relay_In_406();
         }
         if ( test_3 == true )
         {
            Relay_In_406();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector3 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_404()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("87c2b392-0e7f-40a5-bbaa-6ecf2fdceb21", "Interpolate Vector3 Linear", Relay_Resume_404)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Resume(logic_uScriptAct_InterpolateVector3Linear_startValue_404, logic_uScriptAct_InterpolateVector3Linear_endValue_404, logic_uScriptAct_InterpolateVector3Linear_time_404, logic_uScriptAct_InterpolateVector3Linear_loopType_404, logic_uScriptAct_InterpolateVector3Linear_loopDelay_404, logic_uScriptAct_InterpolateVector3Linear_loopCount_404, out logic_uScriptAct_InterpolateVector3Linear_currentValue_404);
         logic_uScriptAct_InterpolateVector3Linear_Driven_404 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Finished;
         
         if ( test_0 == true )
         {
            Relay_In_406();
         }
         if ( test_1 == true )
         {
            Relay_In_406();
         }
         if ( test_2 == true )
         {
            Relay_In_406();
         }
         if ( test_3 == true )
         {
            Relay_In_406();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector3 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_404( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector3Linear_Driven_404 = logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Driven(out logic_uScriptAct_InterpolateVector3Linear_currentValue_404);
         if ( true == logic_uScriptAct_InterpolateVector3Linear_Driven_404 )
         {
            if ( logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Started == true )
            {
               Relay_In_406();
            }
            if ( logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Stopped == true )
            {
               Relay_In_406();
            }
            if ( logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Interpolating == true )
            {
               Relay_In_406();
            }
            if ( logic_uScriptAct_InterpolateVector3Linear_uScriptAct_InterpolateVector3Linear_404.Finished == true )
            {
               Relay_In_406();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector3 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_Begin_405()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d9083417-4522-4927-9ecc-8235767e311e", "Interpolate Vector4 Linear", Relay_Begin_405)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Begin(logic_uScriptAct_InterpolateVector4Linear_startValue_405, logic_uScriptAct_InterpolateVector4Linear_endValue_405, logic_uScriptAct_InterpolateVector4Linear_time_405, logic_uScriptAct_InterpolateVector4Linear_loopType_405, logic_uScriptAct_InterpolateVector4Linear_loopDelay_405, logic_uScriptAct_InterpolateVector4Linear_loopCount_405, out logic_uScriptAct_InterpolateVector4Linear_currentValue_405);
         logic_uScriptAct_InterpolateVector4Linear_Driven_405 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_404();
         }
         if ( test_1 == true )
         {
            Relay_Stop_404();
         }
         if ( test_2 == true )
         {
            Relay_Resume_404();
         }
         if ( test_3 == true )
         {
            Relay_Resume_404();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector4 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Stop_405()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d9083417-4522-4927-9ecc-8235767e311e", "Interpolate Vector4 Linear", Relay_Stop_405)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Stop(logic_uScriptAct_InterpolateVector4Linear_startValue_405, logic_uScriptAct_InterpolateVector4Linear_endValue_405, logic_uScriptAct_InterpolateVector4Linear_time_405, logic_uScriptAct_InterpolateVector4Linear_loopType_405, logic_uScriptAct_InterpolateVector4Linear_loopDelay_405, logic_uScriptAct_InterpolateVector4Linear_loopCount_405, out logic_uScriptAct_InterpolateVector4Linear_currentValue_405);
         logic_uScriptAct_InterpolateVector4Linear_Driven_405 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_404();
         }
         if ( test_1 == true )
         {
            Relay_Stop_404();
         }
         if ( test_2 == true )
         {
            Relay_Resume_404();
         }
         if ( test_3 == true )
         {
            Relay_Resume_404();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector4 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Resume_405()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("d9083417-4522-4927-9ecc-8235767e311e", "Interpolate Vector4 Linear", Relay_Resume_405)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Resume(logic_uScriptAct_InterpolateVector4Linear_startValue_405, logic_uScriptAct_InterpolateVector4Linear_endValue_405, logic_uScriptAct_InterpolateVector4Linear_time_405, logic_uScriptAct_InterpolateVector4Linear_loopType_405, logic_uScriptAct_InterpolateVector4Linear_loopDelay_405, logic_uScriptAct_InterpolateVector4Linear_loopCount_405, out logic_uScriptAct_InterpolateVector4Linear_currentValue_405);
         logic_uScriptAct_InterpolateVector4Linear_Driven_405 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Started;
         bool test_1 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Stopped;
         bool test_2 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Interpolating;
         bool test_3 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Finished;
         
         if ( test_0 == true )
         {
            Relay_Begin_404();
         }
         if ( test_1 == true )
         {
            Relay_Stop_404();
         }
         if ( test_2 == true )
         {
            Relay_Resume_404();
         }
         if ( test_3 == true )
         {
            Relay_Resume_404();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector4 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_405( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InterpolateVector4Linear_Driven_405 = logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Driven(out logic_uScriptAct_InterpolateVector4Linear_currentValue_405);
         if ( true == logic_uScriptAct_InterpolateVector4Linear_Driven_405 )
         {
            if ( logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Started == true )
            {
               Relay_Begin_404();
            }
            if ( logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Stopped == true )
            {
               Relay_Stop_404();
            }
            if ( logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Interpolating == true )
            {
               Relay_Resume_404();
            }
            if ( logic_uScriptAct_InterpolateVector4Linear_uScriptAct_InterpolateVector4Linear_405.Finished == true )
            {
               Relay_Resume_404();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Interpolate Vector4 Linear.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_In_406()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a060b959-230b-4ab2-a717-646accc7d7c6", "Log", Relay_In_406)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_406.In(logic_uScriptAct_Log_Prefix_406, logic_uScriptAct_Log_Target_406, logic_uScriptAct_Log_Postfix_406);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_407()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2a222564-4669-4757-8e58-26f87c834717", "Log", Relay_In_407)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_407.In(logic_uScriptAct_Log_Prefix_407, logic_uScriptAct_Log_Target_407, logic_uScriptAct_Log_Postfix_407);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_409()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("472d2245-9e95-4c1c-9ad0-65dbc046d780", "Input Events Filter", Relay_In_409)) return; 
         {
            {
               logic_uScriptAct_OnInputEventFilter_KeyCode_409 = local_408_UnityEngine_KeyCode;
               
            }
         }
         logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_409.In(logic_uScriptAct_OnInputEventFilter_KeyCode_409);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_409.KeyDown;
         bool test_1 = logic_uScriptAct_OnInputEventFilter_uScriptAct_OnInputEventFilter_409.KeyUp;
         
         if ( test_0 == true )
         {
            Relay_In_411();
         }
         if ( test_1 == true )
         {
            Relay_In_412();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Input Events Filter.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_KeyEvent_410()
   {
      if (true == CheckDebugBreak("1eaf03ab-e292-4b7b-ab26-6d182ccf555f", "Input Events", Relay_KeyEvent_410)) return; 
      Relay_In_409();
   }
   
   void Relay_In_411()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ab334fe1-a4f1-4228-b209-f6a1a51ba05c", "Add Float", Relay_In_411)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddFloat_uScriptAct_AddFloat_411.In(logic_uScriptAct_AddFloat_A_411, logic_uScriptAct_AddFloat_B_411, out logic_uScriptAct_AddFloat_FloatResult_411, out logic_uScriptAct_AddFloat_IntResult_411);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddFloat_uScriptAct_AddFloat_411.Out;
         
         if ( test_0 == true )
         {
            Relay_In_413();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_412()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8c523ca2-b313-4ef0-87ec-58d65755b685", "Add Int", Relay_In_412)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddInt_uScriptAct_AddInt_412.In(logic_uScriptAct_AddInt_A_412, logic_uScriptAct_AddInt_B_412, out logic_uScriptAct_AddInt_IntResult_412, out logic_uScriptAct_AddInt_FloatResult_412);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddInt_uScriptAct_AddInt_412.Out;
         
         if ( test_0 == true )
         {
            Relay_In_417();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_413()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("534662cb-a4d5-4be3-8d2e-ec687f317cb3", "Add Rect", Relay_In_413)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddRect_uScriptAct_AddRect_413.In(logic_uScriptAct_AddRect_A_413, logic_uScriptAct_AddRect_B_413, out logic_uScriptAct_AddRect_Result_413);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddRect_uScriptAct_AddRect_413.Out;
         
         if ( test_0 == true )
         {
            Relay_In_416();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Rect.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_414()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f44f636a-fa7d-4e8b-a9fe-ee36dde65d3c", "Add Vector3", Relay_In_414)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddVector3_uScriptAct_AddVector3_414.In(logic_uScriptAct_AddVector3_A_414, logic_uScriptAct_AddVector3_B_414, out logic_uScriptAct_AddVector3_Result_414);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddVector3_uScriptAct_AddVector3_414.Out;
         
         if ( test_0 == true )
         {
            Relay_In_415();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_415()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7aa5bb4d-37bc-4875-b1a6-892244474c7e", "Add Vector4", Relay_In_415)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AddVector4_uScriptAct_AddVector4_415.In(logic_uScriptAct_AddVector4_A_415, logic_uScriptAct_AddVector4_B_415, out logic_uScriptAct_AddVector4_Result_415);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AddVector4_uScriptAct_AddVector4_415.Out;
         
         if ( test_0 == true )
         {
            Relay_In_421();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Add Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_416()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("ab24a477-ded1-4b30-ab7c-304234ca45f7", "Clamp Float", Relay_In_416)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ClampFloat_uScriptAct_ClampFloat_416.In(logic_uScriptAct_ClampFloat_Target_416, logic_uScriptAct_ClampFloat_Min_416, logic_uScriptAct_ClampFloat_Max_416, out logic_uScriptAct_ClampFloat_FloatResult_416, out logic_uScriptAct_ClampFloat_IntResult_416);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ClampFloat_uScriptAct_ClampFloat_416.Out;
         
         if ( test_0 == true )
         {
            Relay_In_414();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Clamp Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_417()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("45ffac9f-f387-4a62-9199-16b27261a56d", "Clamp Int", Relay_In_417)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ClampInt_uScriptAct_ClampInt_417.In(logic_uScriptAct_ClampInt_Target_417, logic_uScriptAct_ClampInt_Min_417, logic_uScriptAct_ClampInt_Max_417, out logic_uScriptAct_ClampInt_IntResult_417, out logic_uScriptAct_ClampInt_FloatResult_417);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ClampInt_uScriptAct_ClampInt_417.Out;
         
         if ( test_0 == true )
         {
            Relay_In_419();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Clamp Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_418()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("8a79259c-58b6-4471-a948-5d48df440d3b", "Convert Rect To Vector4", Relay_In_418)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_ConvertRectToVector4_uScriptAct_ConvertRectToVector4_418.In(logic_uScriptAct_ConvertRectToVector4_TargetRect_418, out logic_uScriptAct_ConvertRectToVector4_NewVector4_418);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ConvertRectToVector4_uScriptAct_ConvertRectToVector4_418.Out;
         
         if ( test_0 == true )
         {
            Relay_In_420();
            Relay_Log_423();
            Relay_Filter_424();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Convert Rect To Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_419()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("114ddc48-7ff1-4cf9-a0b8-1bf1162693bc", "Convert Variable", Relay_In_419)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ConvertVariable_uScriptAct_ConvertVariable_419.In(logic_uScriptAct_ConvertVariable_Target_419, out logic_uScriptAct_ConvertVariable_IntValue_419, out logic_uScriptAct_ConvertVariable_Int64Value_419, out logic_uScriptAct_ConvertVariable_FloatValue_419, out logic_uScriptAct_ConvertVariable_StringValue_419, out logic_uScriptAct_ConvertVariable_BooleanValue_419, out logic_uScriptAct_ConvertVariable_Vector3Value_419, logic_uScriptAct_ConvertVariable_FloatGroupSeparator_419);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ConvertVariable_uScriptAct_ConvertVariable_419.Out;
         
         if ( test_0 == true )
         {
            Relay_In_418();
            Relay_Log10_423();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Convert Variable.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_420()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9e241720-383f-4298-89dc-e42595bc54f7", "Convert Vector4 To Rect", Relay_In_420)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_ConvertVector4ToRect_uScriptAct_ConvertVector4ToRect_420.In(logic_uScriptAct_ConvertVector4ToRect_TargetVector4_420, out logic_uScriptAct_ConvertVector4ToRect_NewRect_420);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ConvertVector4ToRect_uScriptAct_ConvertVector4ToRect_420.Out;
         
         if ( test_0 == true )
         {
            Relay_Exp_423();
            Relay_Filter_426();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Convert Vector4 To Rect.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_421()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1636b80a-59a8-4631-a876-5088524fab67", "Divide Float", Relay_In_421)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_DivideFloat_uScriptAct_DivideFloat_421.In(logic_uScriptAct_DivideFloat_A_421, logic_uScriptAct_DivideFloat_B_421, out logic_uScriptAct_DivideFloat_FloatResult_421, out logic_uScriptAct_DivideFloat_IntResult_421);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_DivideFloat_uScriptAct_DivideFloat_421.Out;
         
         if ( test_0 == true )
         {
            Relay_Pow_423();
            Relay_In_422();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Divide Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_422()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c8228838-65ac-4c99-bf9f-073ce2c612ff", "Divide Int", Relay_In_422)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_DivideInt_uScriptAct_DivideInt_422.In(logic_uScriptAct_DivideInt_A_422, logic_uScriptAct_DivideInt_B_422, out logic_uScriptAct_DivideInt_IntResult_422, out logic_uScriptAct_DivideInt_FloatResult_422);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_DivideInt_uScriptAct_DivideInt_422.Out;
         
         if ( test_0 == true )
         {
            Relay_Reset_424();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Divide Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Exp_423()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2c5c33e1-40e7-42f0-ae49-caf8218e8432", "Exponent & Logarithmic Functions", Relay_Exp_423)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.Exp(logic_uScriptAct_ExponentLogarithm_input_423, logic_uScriptAct_ExponentLogarithm_Power_423, out logic_uScriptAct_ExponentLogarithm_output_423);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.Out;
         
         if ( test_0 == true )
         {
            Relay_Filter_425();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Exponent & Logarithmic Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Log_423()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2c5c33e1-40e7-42f0-ae49-caf8218e8432", "Exponent & Logarithmic Functions", Relay_Log_423)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.Log(logic_uScriptAct_ExponentLogarithm_input_423, logic_uScriptAct_ExponentLogarithm_Power_423, out logic_uScriptAct_ExponentLogarithm_output_423);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.Out;
         
         if ( test_0 == true )
         {
            Relay_Filter_425();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Exponent & Logarithmic Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Log10_423()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2c5c33e1-40e7-42f0-ae49-caf8218e8432", "Exponent & Logarithmic Functions", Relay_Log10_423)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.Log10(logic_uScriptAct_ExponentLogarithm_input_423, logic_uScriptAct_ExponentLogarithm_Power_423, out logic_uScriptAct_ExponentLogarithm_output_423);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.Out;
         
         if ( test_0 == true )
         {
            Relay_Filter_425();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Exponent & Logarithmic Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Pow_423()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2c5c33e1-40e7-42f0-ae49-caf8218e8432", "Exponent & Logarithmic Functions", Relay_Pow_423)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.Pow(logic_uScriptAct_ExponentLogarithm_input_423, logic_uScriptAct_ExponentLogarithm_Power_423, out logic_uScriptAct_ExponentLogarithm_output_423);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ExponentLogarithm_uScriptAct_ExponentLogarithm_423.Out;
         
         if ( test_0 == true )
         {
            Relay_Filter_425();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Exponent & Logarithmic Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Reset_424()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e29ad40e-0e42-4b09-b306-4f38f6f569da", "Filter Float", Relay_Reset_424)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_FilterFloat_uScriptAct_FilterFloat_424.Reset(logic_uScriptAct_FilterFloat_Target_424, logic_uScriptAct_FilterFloat_FilterConstant_424, out logic_uScriptAct_FilterFloat_Value_424);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FilterFloat_uScriptAct_FilterFloat_424.Out;
         
         if ( test_0 == true )
         {
            Relay_Reset_425();
            Relay_Reset_426();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Filter Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Filter_424()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e29ad40e-0e42-4b09-b306-4f38f6f569da", "Filter Float", Relay_Filter_424)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_FilterFloat_uScriptAct_FilterFloat_424.Filter(logic_uScriptAct_FilterFloat_Target_424, logic_uScriptAct_FilterFloat_FilterConstant_424, out logic_uScriptAct_FilterFloat_Value_424);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FilterFloat_uScriptAct_FilterFloat_424.Out;
         
         if ( test_0 == true )
         {
            Relay_Reset_425();
            Relay_Reset_426();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Filter Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Reset_425()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2f69971c-45e2-43ab-90fc-89ccc626d6bb", "Filter Rect", Relay_Reset_425)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_FilterRect_uScriptAct_FilterRect_425.Reset(logic_uScriptAct_FilterRect_Target_425, logic_uScriptAct_FilterRect_FilterConstant_425, out logic_uScriptAct_FilterRect_Value_425);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FilterRect_uScriptAct_FilterRect_425.Out;
         
         if ( test_0 == true )
         {
            Relay_Ceiling_427();
            Relay_Floor_427();
            Relay_Round_427();
            Relay_Sign_427();
            Relay_Sqrt_427();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Filter Rect.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Filter_425()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2f69971c-45e2-43ab-90fc-89ccc626d6bb", "Filter Rect", Relay_Filter_425)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_FilterRect_uScriptAct_FilterRect_425.Filter(logic_uScriptAct_FilterRect_Target_425, logic_uScriptAct_FilterRect_FilterConstant_425, out logic_uScriptAct_FilterRect_Value_425);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FilterRect_uScriptAct_FilterRect_425.Out;
         
         if ( test_0 == true )
         {
            Relay_Ceiling_427();
            Relay_Floor_427();
            Relay_Round_427();
            Relay_Sign_427();
            Relay_Sqrt_427();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Filter Rect.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Reset_426()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5f13c569-9a64-4f62-bc6e-55c7952ba0a8", "Filter Vector", Relay_Reset_426)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_FilterVector_uScriptAct_FilterVector_426.Reset(logic_uScriptAct_FilterVector_Target_426, logic_uScriptAct_FilterVector_FilterConstant_426, out logic_uScriptAct_FilterVector_Value3_426, out logic_uScriptAct_FilterVector_Value4_426);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FilterVector_uScriptAct_FilterVector_426.Out;
         
         if ( test_0 == true )
         {
            Relay_In_428();
            Relay_Abs_427();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Filter Vector.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Filter_426()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5f13c569-9a64-4f62-bc6e-55c7952ba0a8", "Filter Vector", Relay_Filter_426)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_FilterVector_uScriptAct_FilterVector_426.Filter(logic_uScriptAct_FilterVector_Target_426, logic_uScriptAct_FilterVector_FilterConstant_426, out logic_uScriptAct_FilterVector_Value3_426, out logic_uScriptAct_FilterVector_Value4_426);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FilterVector_uScriptAct_FilterVector_426.Out;
         
         if ( test_0 == true )
         {
            Relay_In_428();
            Relay_Abs_427();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Filter Vector.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Abs_427()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("663d51f4-7a88-45da-a70b-7674161d8801", "Floating Point Functions", Relay_Abs_427)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Abs(logic_uScriptAct_FloatFunctions_input_427, out logic_uScriptAct_FloatFunctions_output_427);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Out;
         
         if ( test_0 == true )
         {
            Relay_In_429();
            Relay_In_430();
            Relay_In_431();
            Relay_In_433();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Floating Point Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Ceiling_427()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("663d51f4-7a88-45da-a70b-7674161d8801", "Floating Point Functions", Relay_Ceiling_427)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Ceiling(logic_uScriptAct_FloatFunctions_input_427, out logic_uScriptAct_FloatFunctions_output_427);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Out;
         
         if ( test_0 == true )
         {
            Relay_In_429();
            Relay_In_430();
            Relay_In_431();
            Relay_In_433();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Floating Point Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Floor_427()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("663d51f4-7a88-45da-a70b-7674161d8801", "Floating Point Functions", Relay_Floor_427)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Floor(logic_uScriptAct_FloatFunctions_input_427, out logic_uScriptAct_FloatFunctions_output_427);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Out;
         
         if ( test_0 == true )
         {
            Relay_In_429();
            Relay_In_430();
            Relay_In_431();
            Relay_In_433();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Floating Point Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Round_427()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("663d51f4-7a88-45da-a70b-7674161d8801", "Floating Point Functions", Relay_Round_427)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Round(logic_uScriptAct_FloatFunctions_input_427, out logic_uScriptAct_FloatFunctions_output_427);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Out;
         
         if ( test_0 == true )
         {
            Relay_In_429();
            Relay_In_430();
            Relay_In_431();
            Relay_In_433();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Floating Point Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Sign_427()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("663d51f4-7a88-45da-a70b-7674161d8801", "Floating Point Functions", Relay_Sign_427)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Sign(logic_uScriptAct_FloatFunctions_input_427, out logic_uScriptAct_FloatFunctions_output_427);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Out;
         
         if ( test_0 == true )
         {
            Relay_In_429();
            Relay_In_430();
            Relay_In_431();
            Relay_In_433();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Floating Point Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Sqrt_427()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("663d51f4-7a88-45da-a70b-7674161d8801", "Floating Point Functions", Relay_Sqrt_427)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Sqrt(logic_uScriptAct_FloatFunctions_input_427, out logic_uScriptAct_FloatFunctions_output_427);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_FloatFunctions_uScriptAct_FloatFunctions_427.Out;
         
         if ( test_0 == true )
         {
            Relay_In_429();
            Relay_In_430();
            Relay_In_431();
            Relay_In_433();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Floating Point Functions.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_428()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("fcf040ec-925e-4692-ba54-cf5b96c2284b", "Get Math Constants", Relay_In_428)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_MathConstants_uScriptAct_MathConstants_428.In(out logic_uScriptAct_MathConstants_deg2Rad_428, out logic_uScriptAct_MathConstants_rad2Deg_428, out logic_uScriptAct_MathConstants_infinity_428, out logic_uScriptAct_MathConstants_nInfinity_428, out logic_uScriptAct_MathConstants_pi_428);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MathConstants_uScriptAct_MathConstants_428.Out;
         
         if ( test_0 == true )
         {
            Relay_In_436();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Get Math Constants.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_429()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7118a1f7-1273-4e03-bc66-cd535d7a4625", "Invert Bool", Relay_In_429)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_InvertBool_uScriptAct_InvertBool_429.In(logic_uScriptAct_InvertBool_Target_429, out logic_uScriptAct_InvertBool_Value_429);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InvertBool_uScriptAct_InvertBool_429.Out;
         
         if ( test_0 == true )
         {
            Relay_In_432();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Invert Bool.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_430()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("090af5d7-31ea-4f51-94b1-bd363ff05477", "Invert Float", Relay_In_430)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_InvertFloat_uScriptAct_InvertFloat_430.In(logic_uScriptAct_InvertFloat_Target_430, out logic_uScriptAct_InvertFloat_Value_430);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InvertFloat_uScriptAct_InvertFloat_430.Out;
         
         if ( test_0 == true )
         {
            Relay_In_432();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Invert Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_431()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5a30459b-8ab2-4034-a7b0-75c6f51f9eb0", "Invert Int", Relay_In_431)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_InvertInt_uScriptAct_InvertInt_431.In(logic_uScriptAct_InvertInt_Target_431, out logic_uScriptAct_InvertInt_Value_431);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InvertInt_uScriptAct_InvertInt_431.Out;
         
         if ( test_0 == true )
         {
            Relay_In_434();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Invert Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_432()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("14b2ae6c-9975-4d41-80d2-f1b5e6bdd513", "Invert String", Relay_In_432)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_InvertString_uScriptAct_InvertString_432.In(logic_uScriptAct_InvertString_Target_432, out logic_uScriptAct_InvertString_Value_432);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InvertString_uScriptAct_InvertString_432.Out;
         
         if ( test_0 == true )
         {
            Relay_In_435();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Invert String.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_433()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("050df580-8cd2-46cc-bbeb-ff12fbbd704c", "Invert Vector2", Relay_In_433)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InvertVector2_uScriptAct_InvertVector2_433.In(logic_uScriptAct_InvertVector2_Target_433, logic_uScriptAct_InvertVector2_IgnoreX_433, logic_uScriptAct_InvertVector2_IgnoreY_433, out logic_uScriptAct_InvertVector2_Value_433);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InvertVector2_uScriptAct_InvertVector2_433.Out;
         
         if ( test_0 == true )
         {
            Relay_In_434();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Invert Vector2.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_434()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("bca504f9-f925-44f8-98c7-3066884c5533", "Invert Vector3", Relay_In_434)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InvertVector3_uScriptAct_InvertVector3_434.In(logic_uScriptAct_InvertVector3_Target_434, logic_uScriptAct_InvertVector3_IgnoreX_434, logic_uScriptAct_InvertVector3_IgnoreY_434, logic_uScriptAct_InvertVector3_IgnoreZ_434, out logic_uScriptAct_InvertVector3_Value_434);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InvertVector3_uScriptAct_InvertVector3_434.Out;
         
         if ( test_0 == true )
         {
            Relay_In_435();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Invert Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_435()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7c1a91d6-3763-4202-ba2b-2ed22b0f4918", "Invert Vector4", Relay_In_435)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_InvertVector4_uScriptAct_InvertVector4_435.In(logic_uScriptAct_InvertVector4_Target_435, logic_uScriptAct_InvertVector4_IgnoreX_435, logic_uScriptAct_InvertVector4_IgnoreY_435, logic_uScriptAct_InvertVector4_IgnoreZ_435, logic_uScriptAct_InvertVector4_IgnoreW_435, out logic_uScriptAct_InvertVector4_Value_435);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_InvertVector4_uScriptAct_InvertVector4_435.Out;
         
         if ( test_0 == true )
         {
            Relay_In_440();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Invert Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_436()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f995d3fe-cc66-4ad9-876e-a14211aa7ed4", "Max Float", Relay_In_436)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_MaxFloat_uScriptAct_MaxFloat_436.In(logic_uScriptAct_MaxFloat_Values_436, out logic_uScriptAct_MaxFloat_Result_436);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MaxFloat_uScriptAct_MaxFloat_436.Out;
         
         if ( test_0 == true )
         {
            Relay_In_437();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Max Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_437()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("caafffd2-89bd-4158-a8e7-7ba5d8973516", "Max Int", Relay_In_437)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_MaxInt_uScriptAct_MaxInt_437.In(logic_uScriptAct_MaxInt_Values_437, out logic_uScriptAct_MaxInt_Result_437);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MaxInt_uScriptAct_MaxInt_437.Out;
         
         if ( test_0 == true )
         {
            Relay_In_438();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Max Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_438()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("458a3145-66e6-4e21-85a7-0f8ab67372e3", "Min Float", Relay_In_438)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_MinFloat_uScriptAct_MinFloat_438.In(logic_uScriptAct_MinFloat_Values_438, out logic_uScriptAct_MinFloat_Result_438);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MinFloat_uScriptAct_MinFloat_438.Out;
         
         if ( test_0 == true )
         {
            Relay_In_439();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Min Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_439()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("fd40576d-6861-4c73-990f-9ba4d31d494f", "Min Int", Relay_In_439)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_MinInt_uScriptAct_MinInt_439.In(logic_uScriptAct_MinInt_Values_439, out logic_uScriptAct_MinInt_Result_439);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MinInt_uScriptAct_MinInt_439.Out;
         
         if ( test_0 == true )
         {
            Relay_In_442();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Min Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_440()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c675a49e-9bea-48b8-bea3-7c8623ee1cba", "Multiply Float", Relay_In_440)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_MultiplyFloat_uScriptAct_MultiplyFloat_440.In(logic_uScriptAct_MultiplyFloat_A_440, logic_uScriptAct_MultiplyFloat_B_440, out logic_uScriptAct_MultiplyFloat_FloatResult_440, out logic_uScriptAct_MultiplyFloat_IntResult_440);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MultiplyFloat_uScriptAct_MultiplyFloat_440.Out;
         
         if ( test_0 == true )
         {
            Relay_In_441();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Multiply Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_441()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("eae7c48b-c199-452f-ba28-fb96870318c7", "Multiply Int", Relay_In_441)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_MultiplyInt_uScriptAct_MultiplyInt_441.In(logic_uScriptAct_MultiplyInt_A_441, logic_uScriptAct_MultiplyInt_B_441, out logic_uScriptAct_MultiplyInt_IntResult_441, out logic_uScriptAct_MultiplyInt_FloatResult_441);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_MultiplyInt_uScriptAct_MultiplyInt_441.Out;
         
         if ( test_0 == true )
         {
            Relay_In_445();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Multiply Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_442()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("0df4d5da-ce83-4c74-8a90-d1f77ddc7e55", "Quaternion Euler", Relay_In_442)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_QuaternionEuler_uScriptAct_QuaternionEuler_442.In(logic_uScriptAct_QuaternionEuler_x_442, logic_uScriptAct_QuaternionEuler_y_442, logic_uScriptAct_QuaternionEuler_z_442, out logic_uScriptAct_QuaternionEuler_result_442);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_QuaternionEuler_uScriptAct_QuaternionEuler_442.Out;
         
         if ( test_0 == true )
         {
            Relay_In_443();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Quaternion Euler.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_443()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e5213fd8-8845-4e66-b438-1ef355f027a9", "Quaternion From Vectors", Relay_In_443)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_QuaternionFromVectors_uScriptAct_QuaternionFromVectors_443.In(logic_uScriptAct_QuaternionFromVectors_forward_443, logic_uScriptAct_QuaternionFromVectors_up_443, out logic_uScriptAct_QuaternionFromVectors_result_443);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_QuaternionFromVectors_uScriptAct_QuaternionFromVectors_443.Out;
         
         if ( test_0 == true )
         {
            Relay_In_444();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Quaternion From Vectors.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_444()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("59abd3c4-8ea3-4f46-8074-7c8a27130306", "Round Float", Relay_In_444)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_RoundFloat_uScriptAct_RoundFloat_444.In(logic_uScriptAct_RoundFloat_Target_444, out logic_uScriptAct_RoundFloat_FloatResult_444, out logic_uScriptAct_RoundFloat_IntResult_444);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_RoundFloat_uScriptAct_RoundFloat_444.Out;
         
         if ( test_0 == true )
         {
            Relay_In_448();
            Relay_Asin_455();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Round Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_445()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("c2f57584-9d0a-48f9-a3da-dda4e3727b1d", "Scale Vector2", Relay_In_445)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ScaleVector2_uScriptAct_ScaleVector2_445.In(logic_uScriptAct_ScaleVector2_v_445, logic_uScriptAct_ScaleVector2_s_445, out logic_uScriptAct_ScaleVector2_result_445);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ScaleVector2_uScriptAct_ScaleVector2_445.Out;
         
         if ( test_0 == true )
         {
            Relay_In_446();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Scale Vector2.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_446()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b1fe8827-88d7-4f4b-b599-333d337f2785", "Scale Vector3", Relay_In_446)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ScaleVector3_uScriptAct_ScaleVector3_446.In(logic_uScriptAct_ScaleVector3_v_446, logic_uScriptAct_ScaleVector3_s_446, out logic_uScriptAct_ScaleVector3_result_446);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ScaleVector3_uScriptAct_ScaleVector3_446.Out;
         
         if ( test_0 == true )
         {
            Relay_In_447();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Scale Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_447()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2f821cf0-ce1d-46a3-9a11-ccc799c9c61e", "Scale Vector4", Relay_In_447)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ScaleVector4_uScriptAct_ScaleVector4_447.In(logic_uScriptAct_ScaleVector4_v_447, logic_uScriptAct_ScaleVector4_s_447, out logic_uScriptAct_ScaleVector4_result_447);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ScaleVector4_uScriptAct_ScaleVector4_447.Out;
         
         if ( test_0 == true )
         {
            Relay_In_454();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Scale Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_448()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3e267952-c9b4-40bf-98ce-3900350531e8", "Subtract Float", Relay_In_448)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SubtractFloat_uScriptAct_SubtractFloat_448.In(logic_uScriptAct_SubtractFloat_A_448, logic_uScriptAct_SubtractFloat_B_448, out logic_uScriptAct_SubtractFloat_FloatResult_448, out logic_uScriptAct_SubtractFloat_IntResult_448);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SubtractFloat_uScriptAct_SubtractFloat_448.Out;
         
         if ( test_0 == true )
         {
            Relay_In_449();
            Relay_Atan_455();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Subtract Float.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_449()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("356f5975-cb91-45c3-b9dc-99cff74028fe", "Subtract Int", Relay_In_449)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SubtractInt_uScriptAct_SubtractInt_449.In(logic_uScriptAct_SubtractInt_A_449, logic_uScriptAct_SubtractInt_B_449, out logic_uScriptAct_SubtractInt_IntResult_449, out logic_uScriptAct_SubtractInt_FloatResult_449);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SubtractInt_uScriptAct_SubtractInt_449.Out;
         
         if ( test_0 == true )
         {
            Relay_In_450();
            Relay_Cos_455();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Subtract Int.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_450()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("b9b94cb7-c5b4-4396-b85e-4d297151fbc9", "Subtract Rect", Relay_In_450)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SubtractRect_uScriptAct_SubtractRect_450.In(logic_uScriptAct_SubtractRect_A_450, logic_uScriptAct_SubtractRect_B_450, out logic_uScriptAct_SubtractRect_Result_450);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SubtractRect_uScriptAct_SubtractRect_450.Out;
         
         if ( test_0 == true )
         {
            Relay_In_451();
            Relay_Sin_455();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Subtract Rect.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_451()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("db227ddb-6c38-4063-a5a8-81df909a341a", "Subtract Vector2", Relay_In_451)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SubtractVector2_uScriptAct_SubtractVector2_451.In(logic_uScriptAct_SubtractVector2_A_451, logic_uScriptAct_SubtractVector2_B_451, out logic_uScriptAct_SubtractVector2_Result_451);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SubtractVector2_uScriptAct_SubtractVector2_451.Out;
         
         if ( test_0 == true )
         {
            Relay_In_452();
            Relay_Tan_455();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Subtract Vector2.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_452()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2401d887-e79d-4aff-9329-cda4f4fd8dd8", "Subtract Vector3", Relay_In_452)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SubtractVector3_uScriptAct_SubtractVector3_452.In(logic_uScriptAct_SubtractVector3_A_452, logic_uScriptAct_SubtractVector3_B_452, out logic_uScriptAct_SubtractVector3_Result_452);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SubtractVector3_uScriptAct_SubtractVector3_452.Out;
         
         if ( test_0 == true )
         {
            Relay_In_453();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Subtract Vector3.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_453()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("abbbff86-972a-4f86-9e44-95694c2e0b46", "Subtract Vector4", Relay_In_453)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_SubtractVector4_uScriptAct_SubtractVector4_453.In(logic_uScriptAct_SubtractVector4_A_453, logic_uScriptAct_SubtractVector4_B_453, out logic_uScriptAct_SubtractVector4_Result_453);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SubtractVector4_uScriptAct_SubtractVector4_453.Out;
         
         if ( test_0 == true )
         {
            Relay_In_456();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Subtract Vector4.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_454()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("1f4902ee-0887-45bb-bfff-67867d02af39", "Vectors From Quaternion", Relay_In_454)) return; 
         {
            {
            }
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_VectorsFromQuaternion_uScriptAct_VectorsFromQuaternion_454.In(logic_uScriptAct_VectorsFromQuaternion_quaternion_454, out logic_uScriptAct_VectorsFromQuaternion_forward_454, out logic_uScriptAct_VectorsFromQuaternion_up_454, out logic_uScriptAct_VectorsFromQuaternion_right_454);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_VectorsFromQuaternion_uScriptAct_VectorsFromQuaternion_454.Out;
         
         if ( test_0 == true )
         {
            Relay_Acos_455();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Vectors From Quaternion.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Acos_455()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("05a79758-e6b3-472f-852e-543c55a18c07", "Trigonometry", Relay_Acos_455)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Acos(logic_uScriptAct_Trigonometry_input_455, out logic_uScriptAct_Trigonometry_output_455);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Out;
         
         if ( test_0 == true )
         {
            Relay_In_456();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Trigonometry.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Asin_455()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("05a79758-e6b3-472f-852e-543c55a18c07", "Trigonometry", Relay_Asin_455)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Asin(logic_uScriptAct_Trigonometry_input_455, out logic_uScriptAct_Trigonometry_output_455);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Out;
         
         if ( test_0 == true )
         {
            Relay_In_456();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Trigonometry.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Atan_455()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("05a79758-e6b3-472f-852e-543c55a18c07", "Trigonometry", Relay_Atan_455)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Atan(logic_uScriptAct_Trigonometry_input_455, out logic_uScriptAct_Trigonometry_output_455);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Out;
         
         if ( test_0 == true )
         {
            Relay_In_456();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Trigonometry.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Cos_455()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("05a79758-e6b3-472f-852e-543c55a18c07", "Trigonometry", Relay_Cos_455)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Cos(logic_uScriptAct_Trigonometry_input_455, out logic_uScriptAct_Trigonometry_output_455);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Out;
         
         if ( test_0 == true )
         {
            Relay_In_456();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Trigonometry.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Sin_455()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("05a79758-e6b3-472f-852e-543c55a18c07", "Trigonometry", Relay_Sin_455)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Sin(logic_uScriptAct_Trigonometry_input_455, out logic_uScriptAct_Trigonometry_output_455);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Out;
         
         if ( test_0 == true )
         {
            Relay_In_456();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Trigonometry.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Tan_455()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("05a79758-e6b3-472f-852e-543c55a18c07", "Trigonometry", Relay_Tan_455)) return; 
         {
            {
            }
            {
            }
         }
         logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Tan(logic_uScriptAct_Trigonometry_input_455, out logic_uScriptAct_Trigonometry_output_455);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Trigonometry_uScriptAct_Trigonometry_455.Out;
         
         if ( test_0 == true )
         {
            Relay_In_456();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Trigonometry.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_456()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("7e0a4394-d384-4b34-bb89-3435e421f7e1", "Log", Relay_In_456)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_456.In(logic_uScriptAct_Log_Prefix_456, logic_uScriptAct_Log_Target_456, logic_uScriptAct_Log_Postfix_456);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Node_Is_Done_458()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f200bb10-03f3-4ba7-9bf9-82bd55d4b3f2", "Nested Node Test", Relay_Node_Is_Done_458)) return; 
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Nested Node Test.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_458()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f200bb10-03f3-4ba7-9bf9-82bd55d4b3f2", "Nested Node Test", Relay_In_458)) return; 
         {
            {
            }
            {
               List<System.Object> properties = new List<System.Object>();
               properties.Add((System.Object)owner_Connection_460);
               logic_CodeGenTest_Nested_Int_Name_Test_458 = properties.ToArray();
            }
            {
            }
         }
         logic_CodeGenTest_Nested_CodeGenTest_Nested_458.In(logic_CodeGenTest_Nested_Socket_1_458, logic_CodeGenTest_Nested_Int_Name_Test_458, logic_CodeGenTest_Nested_Socket_3_458);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Nested Node Test.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_uScriptStart_459()
   {
      if (true == CheckDebugBreak("77313efe-3085-416d-b487-61be8f88819c", "uScript Events", Relay_uScriptStart_459)) return; 
      Relay_In_458();
   }
   
   void Relay_First_465()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2d2950d9-2957-4371-b60c-8bda96ec6e92", "Access List (AudioClip)", Relay_First_465)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_AccessListAudioClip_List_465 = properties.ToArray();
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.First(logic_uScriptAct_AccessListAudioClip_List_465, logic_uScriptAct_AccessListAudioClip_Index_465, out logic_uScriptAct_AccessListAudioClip_Value_465);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.Out;
         
         if ( test_0 == true )
         {
            Relay_In_466();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Access List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Last_465()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2d2950d9-2957-4371-b60c-8bda96ec6e92", "Access List (AudioClip)", Relay_Last_465)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_AccessListAudioClip_List_465 = properties.ToArray();
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.Last(logic_uScriptAct_AccessListAudioClip_List_465, logic_uScriptAct_AccessListAudioClip_Index_465, out logic_uScriptAct_AccessListAudioClip_Value_465);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.Out;
         
         if ( test_0 == true )
         {
            Relay_In_466();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Access List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Random_465()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2d2950d9-2957-4371-b60c-8bda96ec6e92", "Access List (AudioClip)", Relay_Random_465)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_AccessListAudioClip_List_465 = properties.ToArray();
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.Random(logic_uScriptAct_AccessListAudioClip_List_465, logic_uScriptAct_AccessListAudioClip_Index_465, out logic_uScriptAct_AccessListAudioClip_Value_465);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.Out;
         
         if ( test_0 == true )
         {
            Relay_In_466();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Access List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_AtIndex_465()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("2d2950d9-2957-4371-b60c-8bda96ec6e92", "Access List (AudioClip)", Relay_AtIndex_465)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_AccessListAudioClip_List_465 = properties.ToArray();
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.AtIndex(logic_uScriptAct_AccessListAudioClip_List_465, logic_uScriptAct_AccessListAudioClip_Index_465, out logic_uScriptAct_AccessListAudioClip_Value_465);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_AccessListAudioClip_uScriptAct_AccessListAudioClip_465.Out;
         
         if ( test_0 == true )
         {
            Relay_In_466();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Access List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Reset_466()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("467d51c6-743f-44f7-8bf1-01f5ed03f472", "For Each In List (AudioClip)", Relay_Reset_466)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_ForEachListAudioClip_List_466 = properties.ToArray();
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ForEachListAudioClip_uScriptAct_ForEachListAudioClip_466.Reset(logic_uScriptAct_ForEachListAudioClip_List_466, out logic_uScriptAct_ForEachListAudioClip_Value_466, out logic_uScriptAct_ForEachListAudioClip_currentIndex_466);
         local_470_UnityEngine_AudioClip = logic_uScriptAct_ForEachListAudioClip_Value_466;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ForEachListAudioClip_uScriptAct_ForEachListAudioClip_466.Done;
         bool test_1 = logic_uScriptAct_ForEachListAudioClip_uScriptAct_ForEachListAudioClip_466.Iteration;
         
         if ( test_0 == true )
         {
            Relay_In_468();
            Relay_TestIfInList_471();
         }
         if ( test_1 == true )
         {
            Relay_In_469();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at For Each In List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_466()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("467d51c6-743f-44f7-8bf1-01f5ed03f472", "For Each In List (AudioClip)", Relay_In_466)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_ForEachListAudioClip_List_466 = properties.ToArray();
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ForEachListAudioClip_uScriptAct_ForEachListAudioClip_466.In(logic_uScriptAct_ForEachListAudioClip_List_466, out logic_uScriptAct_ForEachListAudioClip_Value_466, out logic_uScriptAct_ForEachListAudioClip_currentIndex_466);
         local_470_UnityEngine_AudioClip = logic_uScriptAct_ForEachListAudioClip_Value_466;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ForEachListAudioClip_uScriptAct_ForEachListAudioClip_466.Done;
         bool test_1 = logic_uScriptAct_ForEachListAudioClip_uScriptAct_ForEachListAudioClip_466.Iteration;
         
         if ( test_0 == true )
         {
            Relay_In_468();
            Relay_TestIfInList_471();
         }
         if ( test_1 == true )
         {
            Relay_In_469();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at For Each In List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_468()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("159ce9c9-e5a5-4812-afb8-4d7c1e7aaaca", "For Each In List Auto (AudioClip)", Relay_In_468)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ForEachListAudioClipAuto_uScriptAct_ForEachListAudioClipAuto_468.In(logic_uScriptAct_ForEachListAudioClipAuto_List_468, out logic_uScriptAct_ForEachListAudioClipAuto_Value_468, out logic_uScriptAct_ForEachListAudioClipAuto_currentIndex_468);
         logic_uScriptAct_ForEachListAudioClipAuto_Driven_468 = true;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ForEachListAudioClipAuto_uScriptAct_ForEachListAudioClipAuto_468.Immediate;
         
         if ( test_0 == true )
         {
            Relay_AddToList_472();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at For Each In List Auto (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_Driven_468( )
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ForEachListAudioClipAuto_Driven_468 = logic_uScriptAct_ForEachListAudioClipAuto_uScriptAct_ForEachListAudioClipAuto_468.Driven(out logic_uScriptAct_ForEachListAudioClipAuto_Value_468, out logic_uScriptAct_ForEachListAudioClipAuto_currentIndex_468);
         if ( true == logic_uScriptAct_ForEachListAudioClipAuto_Driven_468 )
         {
            if ( logic_uScriptAct_ForEachListAudioClipAuto_uScriptAct_ForEachListAudioClipAuto_468.Immediate == true )
            {
               Relay_AddToList_472();
            }
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at For Each In List Auto (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   void Relay_In_469()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3f2ba117-196c-485c-8971-348d3b7ed35d", "Log", Relay_In_469)) return; 
         {
            {
            }
            {
               List<System.Object> properties = new List<System.Object>();
               properties.Add((System.Object)local_470_UnityEngine_AudioClip);
               logic_uScriptAct_Log_Target_469 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_469.In(logic_uScriptAct_Log_Prefix_469, logic_uScriptAct_Log_Target_469, logic_uScriptAct_Log_Postfix_469);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_TestIfInList_471()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("5f26ea54-dca9-4cad-a6ec-416379c66f95", "Is In List (AudioClip)", Relay_TestIfInList_471)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.Add((UnityEngine.AudioClip)local_470_UnityEngine_AudioClip);
               logic_uScriptAct_IsInListAudioClip_Target_471 = properties.ToArray();
            }
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_IsInListAudioClip_List_471 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_IsInListAudioClip_uScriptAct_IsInListAudioClip_471.TestIfInList(logic_uScriptAct_IsInListAudioClip_Target_471, ref logic_uScriptAct_IsInListAudioClip_List_471, out logic_uScriptAct_IsInListAudioClip_Index_471);
         local_467_UnityEngine_AudioClipArray = logic_uScriptAct_IsInListAudioClip_List_471;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_IsInListAudioClip_uScriptAct_IsInListAudioClip_471.InList;
         
         if ( test_0 == true )
         {
            Relay_In_479();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Is In List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_AddToList_472()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f5f9214f-8a35-43b2-a3cf-eb060010cda9", "Modify List (AudioClip)", Relay_AddToList_472)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.Add((UnityEngine.AudioClip)local_470_UnityEngine_AudioClip);
               logic_uScriptAct_ModifyListAudioClip_Target_472 = properties.ToArray();
            }
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_ModifyListAudioClip_List_472 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_ModifyListAudioClip_uScriptAct_ModifyListAudioClip_472.AddToList(logic_uScriptAct_ModifyListAudioClip_Target_472, ref logic_uScriptAct_ModifyListAudioClip_List_472, out logic_uScriptAct_ModifyListAudioClip_ListCount_472);
         local_467_UnityEngine_AudioClipArray = logic_uScriptAct_ModifyListAudioClip_List_472;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ModifyListAudioClip_uScriptAct_ModifyListAudioClip_472.Out;
         
         if ( test_0 == true )
         {
            Relay_In_473();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Modify List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_RemoveFromList_472()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f5f9214f-8a35-43b2-a3cf-eb060010cda9", "Modify List (AudioClip)", Relay_RemoveFromList_472)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.Add((UnityEngine.AudioClip)local_470_UnityEngine_AudioClip);
               logic_uScriptAct_ModifyListAudioClip_Target_472 = properties.ToArray();
            }
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_ModifyListAudioClip_List_472 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_ModifyListAudioClip_uScriptAct_ModifyListAudioClip_472.RemoveFromList(logic_uScriptAct_ModifyListAudioClip_Target_472, ref logic_uScriptAct_ModifyListAudioClip_List_472, out logic_uScriptAct_ModifyListAudioClip_ListCount_472);
         local_467_UnityEngine_AudioClipArray = logic_uScriptAct_ModifyListAudioClip_List_472;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ModifyListAudioClip_uScriptAct_ModifyListAudioClip_472.Out;
         
         if ( test_0 == true )
         {
            Relay_In_473();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Modify List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_EmptyList_472()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f5f9214f-8a35-43b2-a3cf-eb060010cda9", "Modify List (AudioClip)", Relay_EmptyList_472)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.Add((UnityEngine.AudioClip)local_470_UnityEngine_AudioClip);
               logic_uScriptAct_ModifyListAudioClip_Target_472 = properties.ToArray();
            }
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_467_UnityEngine_AudioClipArray);
               logic_uScriptAct_ModifyListAudioClip_List_472 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_ModifyListAudioClip_uScriptAct_ModifyListAudioClip_472.EmptyList(logic_uScriptAct_ModifyListAudioClip_Target_472, ref logic_uScriptAct_ModifyListAudioClip_List_472, out logic_uScriptAct_ModifyListAudioClip_ListCount_472);
         local_467_UnityEngine_AudioClipArray = logic_uScriptAct_ModifyListAudioClip_List_472;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ModifyListAudioClip_uScriptAct_ModifyListAudioClip_472.Out;
         
         if ( test_0 == true )
         {
            Relay_In_473();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Modify List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_473()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("a66560bf-c209-44d3-91bc-f83c93b45eee", "Replace Value In List (AudioClip)", Relay_In_473)) return; 
         {
            {
               List<UnityEngine.AudioClip> properties = new List<UnityEngine.AudioClip>();
               properties.AddRange(local_474_UnityEngine_AudioClipArray);
               logic_uScriptAct_ReplaceValueInListAudioClip_TargetList_473 = properties.ToArray();
            }
            {
               logic_uScriptAct_ReplaceValueInListAudioClip_OldValue_473 = local_475_UnityEngine_AudioClip;
               
            }
            {
               logic_uScriptAct_ReplaceValueInListAudioClip_NewValue_473 = local_476_UnityEngine_AudioClip;
               
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_ReplaceValueInListAudioClip_uScriptAct_ReplaceValueInListAudioClip_473.In(logic_uScriptAct_ReplaceValueInListAudioClip_TargetList_473, logic_uScriptAct_ReplaceValueInListAudioClip_OldValue_473, logic_uScriptAct_ReplaceValueInListAudioClip_NewValue_473, out logic_uScriptAct_ReplaceValueInListAudioClip_ModifiedList_473, out logic_uScriptAct_ReplaceValueInListAudioClip_ValuesFound_473);
         local_477_UnityEngine_AudioClipArray = logic_uScriptAct_ReplaceValueInListAudioClip_ModifiedList_473;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_ReplaceValueInListAudioClip_uScriptAct_ReplaceValueInListAudioClip_473.Out;
         
         if ( test_0 == true )
         {
            Relay_In_478();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Replace Value In List (AudioClip).  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_478()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("56826bb9-ea8f-49aa-8304-0b3e81c97cdc", "Log", Relay_In_478)) return; 
         {
            {
            }
            {
               List<System.Object> properties = new List<System.Object>();
               foreach (UnityEngine.AudioClip _fet in local_477_UnityEngine_AudioClipArray)
               {
                  properties.Add((System.Object) _fet);
               }
               logic_uScriptAct_Log_Target_478 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_478.In(logic_uScriptAct_Log_Prefix_478, logic_uScriptAct_Log_Target_478, logic_uScriptAct_Log_Postfix_478);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_479()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("9ed695c6-ff9c-4edf-af8e-37b71bcbd5e8", "Generate MD5 Hash", Relay_In_479)) return; 
         {
            {
               logic_uScriptAct_GenerateMD5Hash_Key_479 = local_482_System_String;
               
            }
            {
            }
         }
         logic_uScriptAct_GenerateMD5Hash_uScriptAct_GenerateMD5Hash_479.In(logic_uScriptAct_GenerateMD5Hash_Key_479, out logic_uScriptAct_GenerateMD5Hash_Hash_479);
         local_483_System_String = logic_uScriptAct_GenerateMD5Hash_Hash_479;
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_GenerateMD5Hash_uScriptAct_GenerateMD5Hash_479.Out;
         
         if ( test_0 == true )
         {
            Relay_In_480();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Generate MD5 Hash.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_480()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("e3281a6c-dd3a-4035-9b41-2e40885bcef9", "Check MD5 Hash", Relay_In_480)) return; 
         {
            {
               logic_uScriptAct_CheckMD5Hash_Key_480 = local_482_System_String;
               
            }
            {
               logic_uScriptAct_CheckMD5Hash_Hash_480 = local_483_System_String;
               
            }
         }
         logic_uScriptAct_CheckMD5Hash_uScriptAct_CheckMD5Hash_480.In(logic_uScriptAct_CheckMD5Hash_Key_480, logic_uScriptAct_CheckMD5Hash_Hash_480);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CheckMD5Hash_uScriptAct_CheckMD5Hash_480.Good;
         bool test_1 = logic_uScriptAct_CheckMD5Hash_uScriptAct_CheckMD5Hash_480.Bad;
         
         if ( test_0 == true )
         {
            Relay_In_481();
         }
         if ( test_1 == true )
         {
            Relay_In_478();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Check MD5 Hash.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_481()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("6f6f8dbf-0acf-436e-b11e-2b0e133dec91", "Log", Relay_In_481)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_Log_uScriptAct_Log_481.In(logic_uScriptAct_Log_Prefix_481, logic_uScriptAct_Log_Target_481, logic_uScriptAct_Log_Postfix_481);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_Log_uScriptAct_Log_481.Out;
         
         if ( test_0 == true )
         {
            Relay_In_484();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Log.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_484()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("3847e8f7-0072-4647-866e-00286c8752e3", "Create GameObject", Relay_In_484)) return; 
         {
            {
            }
            {
            }
            {
            }
         }
         logic_uScriptAct_CreateGameObject_uScriptAct_CreateGameObject_484.In(logic_uScriptAct_CreateGameObject_Name_484, logic_uScriptAct_CreateGameObject_Location_484, out logic_uScriptAct_CreateGameObject_newGameObject_484);
         local_485_UnityEngine_GameObject = logic_uScriptAct_CreateGameObject_newGameObject_484;
         {
            //if our game object reference was changed then we need to reset event listeners
            if ( local_485_UnityEngine_GameObject_previous != local_485_UnityEngine_GameObject || false == m_RegisteredForEvents )
            {
               //tear down old listeners
               
               local_485_UnityEngine_GameObject_previous = local_485_UnityEngine_GameObject;
               
               //setup new listeners
            }
         }
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_CreateGameObject_uScriptAct_CreateGameObject_484.Out;
         
         if ( test_0 == true )
         {
            Relay_In_486();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Create GameObject.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   void Relay_In_486()
   {
      if ( relayCallCount++ < MaxRelayCallCount )
      {
         if (true == CheckDebugBreak("f1d6d3f7-7f11-46cd-871c-0a023be50e09", "Set Parent", Relay_In_486)) return; 
         {
            {
               List<UnityEngine.GameObject> properties = new List<UnityEngine.GameObject>();
               {
                  //if our game object reference was changed then we need to reset event listeners
                  if ( local_485_UnityEngine_GameObject_previous != local_485_UnityEngine_GameObject || false == m_RegisteredForEvents )
                  {
                     //tear down old listeners
                     
                     local_485_UnityEngine_GameObject_previous = local_485_UnityEngine_GameObject;
                     
                     //setup new listeners
                  }
               }
               properties.Add((UnityEngine.GameObject)local_485_UnityEngine_GameObject);
               logic_uScriptAct_SetParent_Target_486 = properties.ToArray();
            }
            {
            }
         }
         logic_uScriptAct_SetParent_uScriptAct_SetParent_486.In(logic_uScriptAct_SetParent_Target_486, logic_uScriptAct_SetParent_Parent_486);
         
         //save off values because, if there are multiple, our relay logic could cause them to change before the next value is tested
         bool test_0 = logic_uScriptAct_SetParent_uScriptAct_SetParent_486.Out;
         
         if ( test_0 == true )
         {
            Relay_In_375();
         }
      }
      else
      {
         uScriptDebug.Log( "Possible infinite loop detected in uScript CodeGenTest.uscript at Set Parent.  If this is in error you can change the Maximum Node Recursion in the Preferences Panel and regenerate the script.", uScriptDebug.Type.Error);
      }
   }
   
   private void UpdateEditorValues( )
   {
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:3", local_3_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "22742258-6c06-411c-9718-8d03669c9eb6", local_3_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:4", local_4_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "594e5b8b-bb31-4279-819a-d68fd7c4fc41", local_4_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:Named Variable", local_Named_Variable_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "fc80861a-16f3-4d89-910c-4e7f3e527a7a", local_Named_Variable_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:19", local_19_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "1fcfb250-45e9-46d4-89e4-1e93da635087", local_19_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:3", local_3_System_Int32);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "915948ff-9dfd-4cf5-8fe6-b17ddf79de65", local_3_System_Int32);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:105", local_105_System_StringArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "b08acabb-4e56-435e-b25f-67b6b292da71", local_105_System_StringArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:107", local_107_UnityEngine_Color);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "6d7528b4-c666-4735-b036-10f9a232b1a8", local_107_UnityEngine_Color);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:154", local_154_System_Boolean);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "f8759a38-a035-4b5c-a154-23566ac6fb5d", local_154_System_Boolean);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:156", local_156_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "12d0a92a-d177-430e-8dd2-09b5da4f3822", local_156_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:158", local_158_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "f22b28b8-ef40-4b2a-be28-b5a27acaa427", local_158_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:MyEvent", local_MyEvent_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "67da3dcb-70c3-423e-8cef-4f12b6a308b5", local_MyEvent_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:160", local_160_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "a667e6aa-bc9b-4c57-9b74-8915b2692f99", local_160_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:161", local_161_System_Single);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "8ded1606-c49c-4b17-a4fd-262adb862582", local_161_System_Single);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:Camera List", local_Camera_List_UnityEngine_CameraArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "4f15c349-0bc6-4f8f-9613-66937d8a4ca0", local_Camera_List_UnityEngine_CameraArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:181", local_181_UnityEngine_Flare);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "d8817d11-d672-4f2d-ae97-c04111dc52f8", local_181_UnityEngine_Flare);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:182", local_182_UnityEngine_Mesh);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "75f77454-9e1b-49bc-82e9-126d11570080", local_182_UnityEngine_Mesh);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:183", local_183_UnityEngine_Font);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "d26ce15b-cb4b-4651-a56f-923f66b68807", local_183_UnityEngine_Font);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:184", local_184_UnityEngine_Cubemap);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "fc334312-0d06-42ac-96fa-82ada1507d1f", local_184_UnityEngine_Cubemap);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:185", local_185_UnityEngine_GUISkin);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "f30850f2-d596-49a9-a00a-e4abef51afb2", local_185_UnityEngine_GUISkin);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:188", local_188_UnityEngine_PhysicMaterial);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "65608781-76d5-449e-98c7-e5296b349449", local_188_UnityEngine_PhysicMaterial);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:189", local_189_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "6cb83afa-3a81-42d0-b91c-c4bf7b0f659c", local_189_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:190", local_190_UnityEngine_TextAsset);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "f70bd458-6ea1-48ac-b41f-e0a130f45f9e", local_190_UnityEngine_TextAsset);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:191", local_191_UnityEngine_Shader);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "334c5655-1b22-43ab-8d45-69b0e86ba0ba", local_191_UnityEngine_Shader);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:222", local_222_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "6b8d76e8-9589-4c27-9089-cf2a3e0fb150", local_222_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:223", local_223_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "bfecac51-0736-4bdb-8e65-f5b23ca07dde", local_223_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:263", local_263_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "19f334ac-1d95-45f7-ac24-c6bd338ab923", local_263_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:272", local_272_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "b288db88-97f2-4cf6-863a-6c5929349eef", local_272_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:275", local_275_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "089df12e-772e-4a9c-992a-655bc0fd62c4", local_275_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:287", local_287_System_Boolean);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "03d6ee7b-05f7-42cc-abcd-ec19ad85e506", local_287_System_Boolean);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:294", local_294_UnityEngine_Color);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "f99cf59f-c94b-4d67-9185-d307c7fc18ac", local_294_UnityEngine_Color);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:296", local_296_UnityEngine_Color);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "b886361e-9ab1-4c36-a91d-66f5cfdcff58", local_296_UnityEngine_Color);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:301", local_301_System_Object);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "5ed924e5-d8a8-406d-83cd-e934cbee756a", local_301_System_Object);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:302", local_302_System_Single);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "d8bb55fb-fd25-4fb3-9f38-e7c4de2d7db4", local_302_System_Single);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:303", local_303_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "60cd8637-0c97-4406-8302-88f44cc8eead", local_303_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:307", local_307_System_Int32);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "eae1a30c-4d19-4b94-a589-31be0e162570", local_307_System_Int32);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:309", local_309_UnityEngine_Quaternion);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "5b7613c1-d87c-4df1-b0b4-d9237707584a", local_309_UnityEngine_Quaternion);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:315", local_315_UnityEngine_Rect);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "9ee94db5-fb90-4188-aae7-be88e17cb2a7", local_315_UnityEngine_Rect);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:325", local_325_System_Int32);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "b10570b5-c46e-4e23-a0e5-28303e4577e6", local_325_System_Int32);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:331", local_331_UnityEngine_Texture2D);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "b03fe7c1-82b2-4a7e-92a6-c53cf455d58b", local_331_UnityEngine_Texture2D);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:336", local_336_UnityEngine_Vector3);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "a0a92d90-a1dc-4568-b482-321f15badf40", local_336_UnityEngine_Vector3);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:344", local_344_UnityEngine_Vector4);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "0a2fc270-9aad-4c4d-bf09-705ff8c0c38c", local_344_UnityEngine_Vector4);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:345", local_345_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "b1b3e702-1273-4bfc-a739-28e8dc5835f9", local_345_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:349", local_349_UnityEngine_Material);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "febdbd30-9b4c-4495-bfad-24cfa9db203c", local_349_UnityEngine_Material);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:MasterGO", local_MasterGO_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "0eddcd80-5903-444c-a148-c5ca41860c1e", local_MasterGO_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:369", local_369_UnityEngine_Quaternion);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "8dba58a9-4227-4ce6-be63-b6b45372e812", local_369_UnityEngine_Quaternion);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:392", local_392_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "8513b0c2-1b1b-4e62-a6f2-1941576d6e55", local_392_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:394", local_394_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "4b630104-417f-4622-8049-814dfd4fd19c", local_394_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:408", local_408_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "1b0cecbd-452b-4f99-8d2d-a8938468ad26", local_408_UnityEngine_KeyCode);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:467", local_467_UnityEngine_AudioClipArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "c744f97f-a64c-438f-a9cf-fd4a86ebd9e1", local_467_UnityEngine_AudioClipArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:470", local_470_UnityEngine_AudioClip);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "86600b3a-fbdc-4d93-ba43-b242577d8ea5", local_470_UnityEngine_AudioClip);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:474", local_474_UnityEngine_AudioClipArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "ccee47d3-bb30-43ca-ac50-5be8bd89b145", local_474_UnityEngine_AudioClipArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:475", local_475_UnityEngine_AudioClip);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "30850dfb-8f37-4e40-9b11-ee02ff335f14", local_475_UnityEngine_AudioClip);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:476", local_476_UnityEngine_AudioClip);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "4dcba066-1e5e-4e94-a4be-68185a578477", local_476_UnityEngine_AudioClip);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:477", local_477_UnityEngine_AudioClipArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "dc34f8fc-6c45-4857-89a7-cf34f1d7fd53", local_477_UnityEngine_AudioClipArray);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:482", local_482_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "f61b0fb2-58be-42fb-b1ea-96a169ed7e7c", local_482_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:483", local_483_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "34116265-9d51-41e2-bf16-285e01137f39", local_483_System_String);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "CodeGenTest.uscript:485", local_485_UnityEngine_GameObject);
      uScript_MasterComponent.LatestMasterComponent.UpdateNodeValue( "bf6789c9-ccc9-495e-ab91-e7e94368e8ae", local_485_UnityEngine_GameObject);
   }
   bool CheckDebugBreak(string guid, string name, ContinueExecution method)
   {
      if (true == m_Breakpoint) return true;
      
      if (true == uScript_MasterComponent.LatestMasterComponent.HasBreakpoint(guid))
      {
         if (uScript_MasterComponent.LatestMasterComponent.CurrentBreakpoint == guid)
         {
            uScript_MasterComponent.LatestMasterComponent.CurrentBreakpoint = "";
         }
         else
         {
            uScript_MasterComponent.LatestMasterComponent.CurrentBreakpoint = guid;
            UpdateEditorValues( );
            UnityEngine.Debug.Log("uScript BREAK Node:" + name + " ((Time: " + Time.time + "");
            UnityEngine.Debug.Break();
            #if (!UNITY_FLASH)
            m_ContinueExecution = new ContinueExecution(method);
            #endif
            m_Breakpoint = true;
            return true;
         }
      }
      return false;
   }
}
